INFO:  jitting method AppDomain::SetupDomain using LLILCJit
Successfully read AppDomain.SetupDomain

define void @AppDomain.SetupDomain(%System.AppDomain addrspace(1)* %param0, i8 %param1, %System.String addrspace(1)* %param2, %System.String addrspace(1)* %param3, %"System.String[]" addrspace(1)* %param4, %"System.String[]" addrspace(1)* %param5) {
entry:
  %this = alloca %System.AppDomain addrspace(1)*
  %arg1 = alloca i8
  %arg2 = alloca %System.String addrspace(1)*
  %arg3 = alloca %System.String addrspace(1)*
  %arg4 = alloca %"System.String[]" addrspace(1)*
  %arg5 = alloca %"System.String[]" addrspace(1)*
  %loc0 = alloca %System.AppDomainSetup addrspace(1)*
  %loc1 = alloca i8
  %loc2 = alloca %System.AppDomain addrspace(1)*
  store %System.AppDomain addrspace(1)* %param0, %System.AppDomain addrspace(1)** %this
  store i8 %param1, i8* %arg1
  store %System.String addrspace(1)* %param2, %System.String addrspace(1)** %arg2
  store %System.String addrspace(1)* %param3, %System.String addrspace(1)** %arg3
  store %"System.String[]" addrspace(1)* %param4, %"System.String[]" addrspace(1)** %arg4
  store %"System.String[]" addrspace(1)* %param5, %"System.String[]" addrspace(1)** %arg5
  store i8 0, i8* %loc1
  %0 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %this
  store %System.AppDomain addrspace(1)* %0, %System.AppDomain addrspace(1)** %loc2
  %1 = addrspacecast i8* %loc1 to i8 addrspace(1)*
  %2 = bitcast %System.AppDomain addrspace(1)* %0 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*, i8 addrspace(1)*)*)(%System.Object addrspace(1)* %2, i8 addrspace(1)* %1)
  %3 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %this
  %4 = getelementptr inbounds %System.AppDomain, %System.AppDomain addrspace(1)* %3, i32 0, i32 3
  %5 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)* addrspace(1)* %4, align 8
  %6 = icmp ne %System.AppDomainSetup addrspace(1)* %5, null
  br i1 %6, label %14, label %7

; <label>:7                                       ; preds = %entry
  %8 = call %System.AppDomainSetup addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.AppDomainSetup addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.AppDomainSetup addrspace(1)*)*)(%System.AppDomainSetup addrspace(1)* %8)
  store %System.AppDomainSetup addrspace(1)* %8, %System.AppDomainSetup addrspace(1)** %loc0
  %9 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %loc0
  %10 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %NullCheck = icmp ne %System.AppDomainSetup addrspace(1)* %9, null
  br i1 %NullCheck, label %11, label %ThrowNullRef

; <label>:11                                      ; preds = %7
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.AppDomainSetup addrspace(1)*, %System.String addrspace(1)*)*)(%System.AppDomainSetup addrspace(1)* %9, %System.String addrspace(1)* %10)
  %12 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %this
  %13 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %loc0
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.AppDomain addrspace(1)*, %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)*)*)(%System.AppDomain addrspace(1)* %12, %System.AppDomainSetup addrspace(1)* %13, %System.AppDomainSetup addrspace(1)* null)
  br label %14

; <label>:14                                      ; preds = %entry, %11
  br label %15

; <label>:15                                      ; preds = %14
  %16 = load i8, i8* %loc1
  %17 = zext i8 %16 to i32
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

; <label>:19                                      ; preds = %15
  %20 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %loc2
  %21 = bitcast %System.AppDomain addrspace(1)* %20 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %21)
  br label %22

; <label>:22                                      ; preds = %15, %19
  br label %23

; <label>:23                                      ; preds = %22
  ret void

ThrowNullRef:                                     ; preds = %7
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method Monitor::Enter using LLILCJit
Successfully read Monitor.Enter

define void @Monitor.Enter(%System.Object addrspace(1)* %param0, i8 addrspace(1)* %param1) {
entry:
  %arg0 = alloca %System.Object addrspace(1)*
  %arg1 = alloca i8 addrspace(1)*
  store %System.Object addrspace(1)* %param0, %System.Object addrspace(1)** %arg0
  store i8 addrspace(1)* %param1, i8 addrspace(1)** %arg1
  %0 = load i8 addrspace(1)*, i8 addrspace(1)** %arg1
  %1 = load i8, i8 addrspace(1)* %0, align 8
  %2 = sext i8 %1 to i32
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %entry
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)()
  br label %5

; <label>:5                                       ; preds = %entry, %4
  %6 = load %System.Object addrspace(1)*, %System.Object addrspace(1)** %arg0
  %7 = load i8 addrspace(1)*, i8 addrspace(1)** %arg1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*, i8 addrspace(1)*)*)(%System.Object addrspace(1)* %6, i8 addrspace(1)* %7)
  ret void
}

INFO:  jitting method AppDomainSetup::.ctor using LLILCJit
Successfully read AppDomainSetup..ctor

define void @AppDomainSetup..ctor(%System.AppDomainSetup addrspace(1)* %param0) {
entry:
  %this = alloca %System.AppDomainSetup addrspace(1)*
  store %System.AppDomainSetup addrspace(1)* %param0, %System.AppDomainSetup addrspace(1)** %this
  %0 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %this
  %1 = bitcast %System.AppDomainSetup addrspace(1)* %0 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %1)
  %2 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %this
  %3 = getelementptr inbounds %System.AppDomainSetup, %System.AppDomainSetup addrspace(1)* %2, i32 0, i32 11
  store i32 0, i32 addrspace(1)* %3
  ret void
}

INFO:  jitting method Object::.ctor using LLILCJit
Successfully read Object..ctor

define void @Object..ctor(%System.Object addrspace(1)* %param0) {
entry:
  %this = alloca %System.Object addrspace(1)*
  store %System.Object addrspace(1)* %param0, %System.Object addrspace(1)** %this
  ret void
}

INFO:  jitting method AppDomainSetup::InternalSetApplicationTrust using LLILCJit
Successfully read AppDomainSetup.InternalSetApplicationTrust

define void @AppDomainSetup.InternalSetApplicationTrust(%System.AppDomainSetup addrspace(1)* %param0, %System.String addrspace(1)* %param1) {
entry:
  %this = alloca %System.AppDomainSetup addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  store %System.AppDomainSetup addrspace(1)* %param0, %System.AppDomainSetup addrspace(1)** %this
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  %0 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %this
  %1 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %2 = getelementptr inbounds %System.AppDomainSetup, %System.AppDomainSetup addrspace(1)* %0, i32 0, i32 5
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %2, %System.String addrspace(1)* %1)
  ret void
}

INFO:  jitting method AppDomain::SetupFusionStore using LLILCJit
Successfully read AppDomain.SetupFusionStore

define void @AppDomain.SetupFusionStore(%System.AppDomain addrspace(1)* %param0, %System.AppDomainSetup addrspace(1)* %param1, %System.AppDomainSetup addrspace(1)* %param2) {
entry:
  %this = alloca %System.AppDomain addrspace(1)*
  %arg1 = alloca %System.AppDomainSetup addrspace(1)*
  %arg2 = alloca %System.AppDomainSetup addrspace(1)*
  store %System.AppDomain addrspace(1)* %param0, %System.AppDomain addrspace(1)** %this
  store %System.AppDomainSetup addrspace(1)* %param1, %System.AppDomainSetup addrspace(1)** %arg1
  store %System.AppDomainSetup addrspace(1)* %param2, %System.AppDomainSetup addrspace(1)** %arg2
  %0 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %arg1
  %NullCheck = icmp ne %System.AppDomainSetup addrspace(1)* %0, null
  br i1 %NullCheck, label %1, label %ThrowNullRef

; <label>:1                                       ; preds = %entry
  %2 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.AppDomainSetup addrspace(1)*)*)(%System.AppDomainSetup addrspace(1)* %0)
  %3 = icmp ne %System.String addrspace(1)* %2, null
  br i1 %3, label %8, label %4

; <label>:4                                       ; preds = %1
  %5 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %arg1
  %6 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* ()*)()
  %NullCheck2 = icmp ne %System.AppDomainSetup addrspace(1)* %5, null
  br i1 %NullCheck2, label %7, label %ThrowNullRef1

; <label>:7                                       ; preds = %4
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.AppDomainSetup addrspace(1)*, %System.String addrspace(1)*, i8)*)(%System.AppDomainSetup addrspace(1)* %5, %System.String addrspace(1)* %6, i8 1)
  br label %8

; <label>:8                                       ; preds = %1, %7
  %9 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.AppDomain addrspace(1)*)*)(%System.AppDomain addrspace(1)* %9)
  %10 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %arg1
  %NullCheck4 = icmp ne %System.AppDomainSetup addrspace(1)* %10, null
  br i1 %NullCheck4, label %11, label %ThrowNullRef3

; <label>:11                                      ; preds = %8
  %12 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.AppDomainSetup addrspace(1)*)*)(%System.AppDomainSetup addrspace(1)* %10)
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %25, label %14

; <label>:14                                      ; preds = %11
  %15 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %arg2
  %16 = icmp eq %System.AppDomainSetup addrspace(1)* %15, null
  br i1 %16, label %30, label %17

; <label>:17                                      ; preds = %14
  %18 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %arg1
  %NullCheck6 = icmp ne %System.AppDomainSetup addrspace(1)* %18, null
  br i1 %NullCheck6, label %19, label %ThrowNullRef5

; <label>:19                                      ; preds = %17
  %20 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.AppDomainSetup addrspace(1)*)*)(%System.AppDomainSetup addrspace(1)* %18)
  %21 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %arg2
  %NullCheck8 = icmp ne %System.AppDomainSetup addrspace(1)* %21, null
  br i1 %NullCheck8, label %22, label %ThrowNullRef7

; <label>:22                                      ; preds = %19
  %23 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.AppDomainSetup addrspace(1)*)*)(%System.AppDomainSetup addrspace(1)* %21)
  %24 = icmp eq i32 %20, %23
  br i1 %24, label %30, label %25

; <label>:25                                      ; preds = %11, %22
  %26 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %this
  %27 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %arg1
  %NullCheck10 = icmp ne %System.AppDomainSetup addrspace(1)* %27, null
  br i1 %NullCheck10, label %28, label %ThrowNullRef9

; <label>:28                                      ; preds = %25
  %29 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.AppDomainSetup addrspace(1)*)*)(%System.AppDomainSetup addrspace(1)* %27)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.AppDomain addrspace(1)*, i32)*)(%System.AppDomain addrspace(1)* %26, i32 %29)
  br label %30

; <label>:30                                      ; preds = %14, %22, %28
  %31 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %this
  %32 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %arg1
  %33 = getelementptr inbounds %System.AppDomain, %System.AppDomain addrspace(1)* %31, i32 0, i32 3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.AppDomainSetup addrspace(1)* addrspace(1)*, %System.AppDomainSetup addrspace(1)*)*)(%System.AppDomainSetup addrspace(1)* addrspace(1)* %33, %System.AppDomainSetup addrspace(1)* %32)
  ret void

ThrowNullRef:                                     ; preds = %entry
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef1:                                    ; preds = %4
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef3:                                    ; preds = %8
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef5:                                    ; preds = %17
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef7:                                    ; preds = %19
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef9:                                    ; preds = %25
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method AppDomainSetup::get_ApplicationBase using LLILCJit
Successfully read AppDomainSetup.get_ApplicationBase

define %System.String addrspace(1)* @AppDomainSetup.get_ApplicationBase(%System.AppDomainSetup addrspace(1)* %param0) {
entry:
  %this = alloca %System.AppDomainSetup addrspace(1)*
  store %System.AppDomainSetup addrspace(1)* %param0, %System.AppDomainSetup addrspace(1)** %this
  %0 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %this
  %1 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %this
  %2 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.AppDomainSetup addrspace(1)*)*)(%System.AppDomainSetup addrspace(1)* %1)
  %3 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.AppDomainSetup addrspace(1)*, %System.String addrspace(1)*, i8)*)(%System.AppDomainSetup addrspace(1)* %0, %System.String addrspace(1)* %2, i8 0)
  ret %System.String addrspace(1)* %3
}

INFO:  jitting method AppDomainSetup::GetUnsecureApplicationBase using LLILCJit
Failed to read AppDomainSetup.GetUnsecureApplicationBase[loadElem]
INFO:  jitting method AppDomainSetup::VerifyDir using LLILCJit
Successfully read AppDomainSetup.VerifyDir

define %System.String addrspace(1)* @AppDomainSetup.VerifyDir(%System.AppDomainSetup addrspace(1)* %param0, %System.String addrspace(1)* %param1, i8 %param2) {
entry:
  %this = alloca %System.AppDomainSetup addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  %arg2 = alloca i8
  store %System.AppDomainSetup addrspace(1)* %param0, %System.AppDomainSetup addrspace(1)** %this
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  store i8 %param2, i8* %arg2
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %1 = icmp eq %System.String addrspace(1)* %0, null
  br i1 %1, label %16, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %4 = getelementptr inbounds %System.String, %System.String addrspace(1)* %3, i32 0, i32 1
  %5 = load i32, i32 addrspace(1)* %4
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %8, label %7

; <label>:7                                       ; preds = %2
  store %System.String addrspace(1)* null, %System.String addrspace(1)** %arg1
  br label %16

; <label>:8                                       ; preds = %2
  %9 = load i8, i8* %arg2
  %10 = zext i8 %9 to i32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12

; <label>:12                                      ; preds = %8
  %13 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %this
  %14 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %15 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.AppDomainSetup addrspace(1)*, %System.String addrspace(1)*, i8)*)(%System.AppDomainSetup addrspace(1)* %13, %System.String addrspace(1)* %14, i8 1)
  store %System.String addrspace(1)* %15, %System.String addrspace(1)** %arg1
  br label %16

; <label>:16                                      ; preds = %entry, %7, %8, %12
  %17 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  ret %System.String addrspace(1)* %17
}

INFO:  jitting method AppDomainSetup::SetupDefaults using LLILCJit
Failed to read AppDomainSetup.SetupDefaults[storeElem]
INFO:  jitting method String::LastIndexOfAny using LLILCJit
Successfully read String.LastIndexOfAny

define i32 @String.LastIndexOfAny(%System.String addrspace(1)* %param0, %"System.Char[]" addrspace(1)* %param1) {
entry:
  %this = alloca %System.String addrspace(1)*
  %arg1 = alloca %"System.Char[]" addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %this
  store %"System.Char[]" addrspace(1)* %param1, %"System.Char[]" addrspace(1)** %arg1
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %this
  %1 = load %"System.Char[]" addrspace(1)*, %"System.Char[]" addrspace(1)** %arg1
  %2 = load %System.String addrspace(1)*, %System.String addrspace(1)** %this
  %3 = getelementptr inbounds %System.String, %System.String addrspace(1)* %2, i32 0, i32 1
  %4 = load i32, i32 addrspace(1)* %3
  %5 = sub i32 %4, 1
  %6 = load %System.String addrspace(1)*, %System.String addrspace(1)** %this
  %7 = getelementptr inbounds %System.String, %System.String addrspace(1)* %6, i32 0, i32 1
  %8 = load i32, i32 addrspace(1)* %7
  %9 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.String addrspace(1)*, %"System.Char[]" addrspace(1)*, i32, i32)*)(%System.String addrspace(1)* %0, %"System.Char[]" addrspace(1)* %1, i32 %5, i32 %8)
  ret i32 %9
}

INFO:  jitting method String::Substring using LLILCJit
Successfully read String.Substring

define %System.String addrspace(1)* @String.Substring(%System.String addrspace(1)* %param0, i32 %param1, i32 %param2) {
entry:
  %this = alloca %System.String addrspace(1)*
  %arg1 = alloca i32
  %arg2 = alloca i32
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %this
  store i32 %param1, i32* %arg1
  store i32 %param2, i32* %arg2
  %0 = load i32, i32* %arg1
  %1 = icmp sge i32 %0, 0
  br i1 %1, label %7, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %4 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %5 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %4)
  %6 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %6, %System.String addrspace(1)* %3, %System.String addrspace(1)* %5)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %6) #0
  unreachable

; <label>:7                                       ; preds = %entry
  %8 = load i32, i32* %arg1
  %9 = load %System.String addrspace(1)*, %System.String addrspace(1)** %this
  %10 = getelementptr inbounds %System.String, %System.String addrspace(1)* %9, i32 0, i32 1
  %11 = load i32, i32 addrspace(1)* %10
  %12 = icmp sle i32 %8, %11
  br i1 %12, label %18, label %13

; <label>:13                                      ; preds = %7
  %14 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %15 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %16 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %15)
  %17 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %17, %System.String addrspace(1)* %14, %System.String addrspace(1)* %16)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %17) #0
  unreachable

; <label>:18                                      ; preds = %7
  %19 = load i32, i32* %arg2
  %20 = icmp sge i32 %19, 0
  br i1 %20, label %26, label %21

; <label>:21                                      ; preds = %18
  %22 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %23 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %24 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %23)
  %25 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %25, %System.String addrspace(1)* %22, %System.String addrspace(1)* %24)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %25) #0
  unreachable

; <label>:26                                      ; preds = %18
  %27 = load i32, i32* %arg1
  %28 = load %System.String addrspace(1)*, %System.String addrspace(1)** %this
  %29 = getelementptr inbounds %System.String, %System.String addrspace(1)* %28, i32 0, i32 1
  %30 = load i32, i32 addrspace(1)* %29
  %31 = load i32, i32* %arg2
  %32 = sub i32 %30, %31
  %33 = icmp sle i32 %27, %32
  br i1 %33, label %39, label %34

; <label>:34                                      ; preds = %26
  %35 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %36 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %37 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %36)
  %38 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %38, %System.String addrspace(1)* %35, %System.String addrspace(1)* %37)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %38) #0
  unreachable

; <label>:39                                      ; preds = %26
  %40 = load i32, i32* %arg2
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %44, label %42

; <label>:42                                      ; preds = %39
  %43 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  ret %System.String addrspace(1)* %43

; <label>:44                                      ; preds = %39
  %45 = load i32, i32* %arg1
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %55, label %47

; <label>:47                                      ; preds = %44
  %48 = load i32, i32* %arg2
  %49 = load %System.String addrspace(1)*, %System.String addrspace(1)** %this
  %50 = getelementptr inbounds %System.String, %System.String addrspace(1)* %49, i32 0, i32 1
  %51 = load i32, i32 addrspace(1)* %50
  %52 = icmp ne i32 %48, %51
  br i1 %52, label %55, label %53

; <label>:53                                      ; preds = %47
  %54 = load %System.String addrspace(1)*, %System.String addrspace(1)** %this
  ret %System.String addrspace(1)* %54

; <label>:55                                      ; preds = %44, %47
  %56 = load %System.String addrspace(1)*, %System.String addrspace(1)** %this
  %57 = load i32, i32* %arg1
  %58 = load i32, i32* %arg2
  %59 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*, i32, i32)*)(%System.String addrspace(1)* %56, i32 %57, i32 %58)
  ret %System.String addrspace(1)* %59
}

INFO:  jitting method String::InternalSubString using LLILCJit
Successfully read String.InternalSubString

define %System.String addrspace(1)* @String.InternalSubString(%System.String addrspace(1)* %param0, i32 %param1, i32 %param2) {
entry:
  %this = alloca %System.String addrspace(1)*
  %arg1 = alloca i32
  %arg2 = alloca i32
  %loc0 = alloca %System.String addrspace(1)*
  %loc1 = alloca i16 addrspace(1)*
  %loc2 = alloca i16 addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %this
  store i32 %param1, i32* %arg1
  store i32 %param2, i32* %arg2
  %0 = load i32, i32* %arg2
  %1 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (i32)*)(i32 %0)
  store %System.String addrspace(1)* %1, %System.String addrspace(1)** %loc0
  %2 = load %System.String addrspace(1)*, %System.String addrspace(1)** %loc0
  %NullCheck = icmp ne %System.String addrspace(1)* %2, null
  br i1 %NullCheck, label %3, label %ThrowNullRef

; <label>:3                                       ; preds = %entry
  %4 = getelementptr inbounds %System.String, %System.String addrspace(1)* %2, i32 0, i32 2
  %5 = bitcast [0 x i16] addrspace(1)* %4 to i16 addrspace(1)*
  store i16 addrspace(1)* %5, i16 addrspace(1)** %loc1
  %6 = load %System.String addrspace(1)*, %System.String addrspace(1)** %this
  %NullCheck2 = icmp ne %System.String addrspace(1)* %6, null
  br i1 %NullCheck2, label %7, label %ThrowNullRef1

; <label>:7                                       ; preds = %3
  %8 = getelementptr inbounds %System.String, %System.String addrspace(1)* %6, i32 0, i32 2
  %9 = bitcast [0 x i16] addrspace(1)* %8 to i16 addrspace(1)*
  store i16 addrspace(1)* %9, i16 addrspace(1)** %loc2
  %10 = load i16 addrspace(1)*, i16 addrspace(1)** %loc1
  %11 = ptrtoint i16 addrspace(1)* %10 to i64
  %12 = load i16 addrspace(1)*, i16 addrspace(1)** %loc2
  %13 = ptrtoint i16 addrspace(1)* %12 to i64
  %14 = load i32, i32* %arg1
  %15 = sext i32 %14 to i64
  %16 = mul i64 %15, 2
  %17 = add i64 %13, %16
  %18 = load i32, i32* %arg2
  %19 = inttoptr i64 %11 to i16*
  %20 = inttoptr i64 %17 to i16*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i16*, i16*, i32)*)(i16* %19, i16* %20, i32 %18)
  store i16 addrspace(1)* null, i16 addrspace(1)** %loc2
  store i16 addrspace(1)* null, i16 addrspace(1)** %loc1
  %21 = load %System.String addrspace(1)*, %System.String addrspace(1)** %loc0
  ret %System.String addrspace(1)* %21

ThrowNullRef:                                     ; preds = %entry
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef1:                                    ; preds = %3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method String::wstrcpy using LLILCJit
Successfully read String.wstrcpy

define void @String.wstrcpy(i16* %param0, i16* %param1, i32 %param2) {
entry:
  %arg0 = alloca i16*
  %arg1 = alloca i16*
  %arg2 = alloca i32
  store i16* %param0, i16** %arg0
  store i16* %param1, i16** %arg1
  store i32 %param2, i32* %arg2
  %0 = load i16*, i16** %arg0
  %1 = load i16*, i16** %arg1
  %2 = load i32, i32* %arg2
  %3 = mul i32 %2, 2
  %4 = bitcast i16* %0 to i8*
  %5 = bitcast i16* %1 to i8*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i8*, i8*, i32)*)(i8* %4, i8* %5, i32 %3)
  ret void
}

INFO:  jitting method Buffer::Memcpy using LLILCJit
Successfully read Buffer.Memcpy

define void @Buffer.Memcpy(i8* %param0, i8* %param1, i32 %param2) {
entry:
  %arg0 = alloca i8*
  %arg1 = alloca i8*
  %arg2 = alloca i32
  store i8* %param0, i8** %arg0
  store i8* %param1, i8** %arg1
  store i32 %param2, i32* %arg2
  %0 = load i8*, i8** %arg0
  %1 = load i8*, i8** %arg1
  %2 = load i32, i32* %arg2
  %3 = zext i32 %2 to i64
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i8*, i8*, i64)*)(i8* %0, i8* %1, i64 %3)
  ret void
}

INFO:  jitting method Buffer::Memmove using LLILCJit
Successfully read Buffer.Memmove

define void @Buffer.Memmove(i8* %param0, i8* %param1, i64 %param2) {
entry:
  %arg0 = alloca i8*
  %arg1 = alloca i8*
  %arg2 = alloca i64
  %loc0 = alloca i64
  %loc1 = alloca i64
  store i8* %param0, i8** %arg0
  store i8* %param1, i8** %arg1
  store i64 %param2, i64* %arg2
  %0 = load i8*, i8** %arg0
  %1 = ptrtoint i8* %0 to i64
  %2 = load i8*, i8** %arg1
  %3 = ptrtoint i8* %2 to i64
  %4 = sub i64 %1, %3
  %5 = load i64, i64* %arg2
  %6 = icmp ult i64 %4, %5
  br i1 %6, label %397, label %7

; <label>:7                                       ; preds = %entry
  %8 = load i64, i64* %arg2
  store i64 %8, i64* %loc1
  %9 = load i64, i64* %loc1
  %10 = icmp sgt i64 %9, 16
  br i1 %10, label %257, label %11

; <label>:11                                      ; preds = %7
  %12 = load i64, i64* %loc1
  %13 = icmp slt i64 %12, 0
  br i1 %13, label %257, label %14

; <label>:14                                      ; preds = %11
  %15 = load i64, i64* %loc1
  %16 = trunc i64 %15 to i32
  switch i32 %16, label %17 [
    i32 0, label %18
    i32 1, label %19
    i32 2, label %25
    i32 3, label %33
    i32 4, label %48
    i32 5, label %54
    i32 6, label %67
    i32 7, label %82
    i32 8, label %104
    i32 9, label %110
    i32 10, label %123
    i32 11, label %138
    i32 12, label %160
    i32 13, label %173
    i32 14, label %193
    i32 15, label %215
    i32 16, label %244
  ]

; <label>:17                                      ; preds = %14
  br label %257

; <label>:18                                      ; preds = %14
  ret void

; <label>:19                                      ; preds = %14
  %20 = load i8*, i8** %arg0
  %21 = load i8*, i8** %arg1
  %22 = load i8, i8* %21, align 8
  %23 = zext i8 %22 to i32
  %24 = trunc i32 %23 to i8
  store i8 %24, i8* %20, align 8
  ret void

; <label>:25                                      ; preds = %14
  %26 = load i8*, i8** %arg0
  %27 = load i8*, i8** %arg1
  %28 = bitcast i8* %27 to i16*
  %29 = load i16, i16* %28, align 8
  %30 = sext i16 %29 to i32
  %31 = bitcast i8* %26 to i16*
  %32 = trunc i32 %30 to i16
  store i16 %32, i16* %31, align 8
  ret void

; <label>:33                                      ; preds = %14
  %34 = load i8*, i8** %arg0
  %35 = load i8*, i8** %arg1
  %36 = bitcast i8* %35 to i16*
  %37 = load i16, i16* %36, align 8
  %38 = sext i16 %37 to i32
  %39 = bitcast i8* %34 to i16*
  %40 = trunc i32 %38 to i16
  store i16 %40, i16* %39, align 8
  %41 = load i8*, i8** %arg0
  %42 = getelementptr inbounds i8, i8* %41, i64 2
  %43 = load i8*, i8** %arg1
  %44 = getelementptr inbounds i8, i8* %43, i64 2
  %45 = load i8, i8* %44, align 8
  %46 = zext i8 %45 to i32
  %47 = trunc i32 %46 to i8
  store i8 %47, i8* %42, align 8
  ret void

; <label>:48                                      ; preds = %14
  %49 = load i8*, i8** %arg0
  %50 = load i8*, i8** %arg1
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 8
  %53 = bitcast i8* %49 to i32*
  store i32 %52, i32* %53, align 8
  ret void

; <label>:54                                      ; preds = %14
  %55 = load i8*, i8** %arg0
  %56 = load i8*, i8** %arg1
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %57, align 8
  %59 = bitcast i8* %55 to i32*
  store i32 %58, i32* %59, align 8
  %60 = load i8*, i8** %arg0
  %61 = getelementptr inbounds i8, i8* %60, i64 4
  %62 = load i8*, i8** %arg1
  %63 = getelementptr inbounds i8, i8* %62, i64 4
  %64 = load i8, i8* %63, align 8
  %65 = zext i8 %64 to i32
  %66 = trunc i32 %65 to i8
  store i8 %66, i8* %61, align 8
  ret void

; <label>:67                                      ; preds = %14
  %68 = load i8*, i8** %arg0
  %69 = load i8*, i8** %arg1
  %70 = bitcast i8* %69 to i32*
  %71 = load i32, i32* %70, align 8
  %72 = bitcast i8* %68 to i32*
  store i32 %71, i32* %72, align 8
  %73 = load i8*, i8** %arg0
  %74 = getelementptr inbounds i8, i8* %73, i64 4
  %75 = load i8*, i8** %arg1
  %76 = getelementptr inbounds i8, i8* %75, i64 4
  %77 = bitcast i8* %76 to i16*
  %78 = load i16, i16* %77, align 8
  %79 = sext i16 %78 to i32
  %80 = bitcast i8* %74 to i16*
  %81 = trunc i32 %79 to i16
  store i16 %81, i16* %80, align 8
  ret void

; <label>:82                                      ; preds = %14
  %83 = load i8*, i8** %arg0
  %84 = load i8*, i8** %arg1
  %85 = bitcast i8* %84 to i32*
  %86 = load i32, i32* %85, align 8
  %87 = bitcast i8* %83 to i32*
  store i32 %86, i32* %87, align 8
  %88 = load i8*, i8** %arg0
  %89 = getelementptr inbounds i8, i8* %88, i64 4
  %90 = load i8*, i8** %arg1
  %91 = getelementptr inbounds i8, i8* %90, i64 4
  %92 = bitcast i8* %91 to i16*
  %93 = load i16, i16* %92, align 8
  %94 = sext i16 %93 to i32
  %95 = bitcast i8* %89 to i16*
  %96 = trunc i32 %94 to i16
  store i16 %96, i16* %95, align 8
  %97 = load i8*, i8** %arg0
  %98 = getelementptr inbounds i8, i8* %97, i64 6
  %99 = load i8*, i8** %arg1
  %100 = getelementptr inbounds i8, i8* %99, i64 6
  %101 = load i8, i8* %100, align 8
  %102 = zext i8 %101 to i32
  %103 = trunc i32 %102 to i8
  store i8 %103, i8* %98, align 8
  ret void

; <label>:104                                     ; preds = %14
  %105 = load i8*, i8** %arg0
  %106 = load i8*, i8** %arg1
  %107 = bitcast i8* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i8* %105 to i64*
  store i64 %108, i64* %109, align 8
  ret void

; <label>:110                                     ; preds = %14
  %111 = load i8*, i8** %arg0
  %112 = load i8*, i8** %arg1
  %113 = bitcast i8* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i8* %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = load i8*, i8** %arg0
  %117 = getelementptr inbounds i8, i8* %116, i64 8
  %118 = load i8*, i8** %arg1
  %119 = getelementptr inbounds i8, i8* %118, i64 8
  %120 = load i8, i8* %119, align 8
  %121 = zext i8 %120 to i32
  %122 = trunc i32 %121 to i8
  store i8 %122, i8* %117, align 8
  ret void

; <label>:123                                     ; preds = %14
  %124 = load i8*, i8** %arg0
  %125 = load i8*, i8** %arg1
  %126 = bitcast i8* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast i8* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = load i8*, i8** %arg0
  %130 = getelementptr inbounds i8, i8* %129, i64 8
  %131 = load i8*, i8** %arg1
  %132 = getelementptr inbounds i8, i8* %131, i64 8
  %133 = bitcast i8* %132 to i16*
  %134 = load i16, i16* %133, align 8
  %135 = sext i16 %134 to i32
  %136 = bitcast i8* %130 to i16*
  %137 = trunc i32 %135 to i16
  store i16 %137, i16* %136, align 8
  ret void

; <label>:138                                     ; preds = %14
  %139 = load i8*, i8** %arg0
  %140 = load i8*, i8** %arg1
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast i8* %139 to i64*
  store i64 %142, i64* %143, align 8
  %144 = load i8*, i8** %arg0
  %145 = getelementptr inbounds i8, i8* %144, i64 8
  %146 = load i8*, i8** %arg1
  %147 = getelementptr inbounds i8, i8* %146, i64 8
  %148 = bitcast i8* %147 to i16*
  %149 = load i16, i16* %148, align 8
  %150 = sext i16 %149 to i32
  %151 = bitcast i8* %145 to i16*
  %152 = trunc i32 %150 to i16
  store i16 %152, i16* %151, align 8
  %153 = load i8*, i8** %arg0
  %154 = getelementptr inbounds i8, i8* %153, i64 10
  %155 = load i8*, i8** %arg1
  %156 = getelementptr inbounds i8, i8* %155, i64 10
  %157 = load i8, i8* %156, align 8
  %158 = zext i8 %157 to i32
  %159 = trunc i32 %158 to i8
  store i8 %159, i8* %154, align 8
  ret void

; <label>:160                                     ; preds = %14
  %161 = load i8*, i8** %arg0
  %162 = load i8*, i8** %arg1
  %163 = bitcast i8* %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = bitcast i8* %161 to i64*
  store i64 %164, i64* %165, align 8
  %166 = load i8*, i8** %arg0
  %167 = getelementptr inbounds i8, i8* %166, i64 8
  %168 = load i8*, i8** %arg1
  %169 = getelementptr inbounds i8, i8* %168, i64 8
  %170 = bitcast i8* %169 to i32*
  %171 = load i32, i32* %170, align 8
  %172 = bitcast i8* %167 to i32*
  store i32 %171, i32* %172, align 8
  ret void

; <label>:173                                     ; preds = %14
  %174 = load i8*, i8** %arg0
  %175 = load i8*, i8** %arg1
  %176 = bitcast i8* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = bitcast i8* %174 to i64*
  store i64 %177, i64* %178, align 8
  %179 = load i8*, i8** %arg0
  %180 = getelementptr inbounds i8, i8* %179, i64 8
  %181 = load i8*, i8** %arg1
  %182 = getelementptr inbounds i8, i8* %181, i64 8
  %183 = bitcast i8* %182 to i32*
  %184 = load i32, i32* %183, align 8
  %185 = bitcast i8* %180 to i32*
  store i32 %184, i32* %185, align 8
  %186 = load i8*, i8** %arg0
  %187 = getelementptr inbounds i8, i8* %186, i64 12
  %188 = load i8*, i8** %arg1
  %189 = getelementptr inbounds i8, i8* %188, i64 12
  %190 = load i8, i8* %189, align 8
  %191 = zext i8 %190 to i32
  %192 = trunc i32 %191 to i8
  store i8 %192, i8* %187, align 8
  ret void

; <label>:193                                     ; preds = %14
  %194 = load i8*, i8** %arg0
  %195 = load i8*, i8** %arg1
  %196 = bitcast i8* %195 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = bitcast i8* %194 to i64*
  store i64 %197, i64* %198, align 8
  %199 = load i8*, i8** %arg0
  %200 = getelementptr inbounds i8, i8* %199, i64 8
  %201 = load i8*, i8** %arg1
  %202 = getelementptr inbounds i8, i8* %201, i64 8
  %203 = bitcast i8* %202 to i32*
  %204 = load i32, i32* %203, align 8
  %205 = bitcast i8* %200 to i32*
  store i32 %204, i32* %205, align 8
  %206 = load i8*, i8** %arg0
  %207 = getelementptr inbounds i8, i8* %206, i64 12
  %208 = load i8*, i8** %arg1
  %209 = getelementptr inbounds i8, i8* %208, i64 12
  %210 = bitcast i8* %209 to i16*
  %211 = load i16, i16* %210, align 8
  %212 = sext i16 %211 to i32
  %213 = bitcast i8* %207 to i16*
  %214 = trunc i32 %212 to i16
  store i16 %214, i16* %213, align 8
  ret void

; <label>:215                                     ; preds = %14
  %216 = load i8*, i8** %arg0
  %217 = load i8*, i8** %arg1
  %218 = bitcast i8* %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = bitcast i8* %216 to i64*
  store i64 %219, i64* %220, align 8
  %221 = load i8*, i8** %arg0
  %222 = getelementptr inbounds i8, i8* %221, i64 8
  %223 = load i8*, i8** %arg1
  %224 = getelementptr inbounds i8, i8* %223, i64 8
  %225 = bitcast i8* %224 to i32*
  %226 = load i32, i32* %225, align 8
  %227 = bitcast i8* %222 to i32*
  store i32 %226, i32* %227, align 8
  %228 = load i8*, i8** %arg0
  %229 = getelementptr inbounds i8, i8* %228, i64 12
  %230 = load i8*, i8** %arg1
  %231 = getelementptr inbounds i8, i8* %230, i64 12
  %232 = bitcast i8* %231 to i16*
  %233 = load i16, i16* %232, align 8
  %234 = sext i16 %233 to i32
  %235 = bitcast i8* %229 to i16*
  %236 = trunc i32 %234 to i16
  store i16 %236, i16* %235, align 8
  %237 = load i8*, i8** %arg0
  %238 = getelementptr inbounds i8, i8* %237, i64 14
  %239 = load i8*, i8** %arg1
  %240 = getelementptr inbounds i8, i8* %239, i64 14
  %241 = load i8, i8* %240, align 8
  %242 = zext i8 %241 to i32
  %243 = trunc i32 %242 to i8
  store i8 %243, i8* %238, align 8
  ret void

; <label>:244                                     ; preds = %14
  %245 = load i8*, i8** %arg0
  %246 = load i8*, i8** %arg1
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = bitcast i8* %245 to i64*
  store i64 %248, i64* %249, align 8
  %250 = load i8*, i8** %arg0
  %251 = getelementptr inbounds i8, i8* %250, i64 8
  %252 = load i8*, i8** %arg1
  %253 = getelementptr inbounds i8, i8* %252, i64 8
  %254 = bitcast i8* %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = bitcast i8* %251 to i64*
  store i64 %255, i64* %256, align 8
  ret void

; <label>:257                                     ; preds = %7, %11, %17
  %258 = load i64, i64* %arg2
  %259 = icmp uge i64 %258, 512
  br i1 %259, label %397, label %260

; <label>:260                                     ; preds = %257
  %261 = load i8*, i8** %arg0
  %262 = ptrtoint i8* %261 to i32
  %263 = and i32 %262, 3
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %300, label %265

; <label>:265                                     ; preds = %260
  %266 = load i8*, i8** %arg0
  %267 = ptrtoint i8* %266 to i32
  %268 = and i32 %267, 1
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %286, label %270

; <label>:270                                     ; preds = %265
  %271 = load i8*, i8** %arg0
  %272 = load i8*, i8** %arg1
  %273 = load i8, i8* %272, align 8
  %274 = zext i8 %273 to i32
  %275 = trunc i32 %274 to i8
  store i8 %275, i8* %271, align 8
  %276 = load i8*, i8** %arg1
  %277 = getelementptr inbounds i8, i8* %276, i64 1
  store i8* %277, i8** %arg1
  %278 = load i8*, i8** %arg0
  %279 = getelementptr inbounds i8, i8* %278, i64 1
  store i8* %279, i8** %arg0
  %280 = load i64, i64* %arg2
  %281 = sub i64 %280, 1
  store i64 %281, i64* %arg2
  %282 = load i8*, i8** %arg0
  %283 = ptrtoint i8* %282 to i32
  %284 = and i32 %283, 2
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %300, label %286

; <label>:286                                     ; preds = %265, %270
  %287 = load i8*, i8** %arg0
  %288 = load i8*, i8** %arg1
  %289 = bitcast i8* %288 to i16*
  %290 = load i16, i16* %289, align 8
  %291 = sext i16 %290 to i32
  %292 = bitcast i8* %287 to i16*
  %293 = trunc i32 %291 to i16
  store i16 %293, i16* %292, align 8
  %294 = load i8*, i8** %arg1
  %295 = getelementptr inbounds i8, i8* %294, i64 2
  store i8* %295, i8** %arg1
  %296 = load i8*, i8** %arg0
  %297 = getelementptr inbounds i8, i8* %296, i64 2
  store i8* %297, i8** %arg0
  %298 = load i64, i64* %arg2
  %299 = sub i64 %298, 2
  store i64 %299, i64* %arg2
  br label %300

; <label>:300                                     ; preds = %260, %270, %286
  %301 = load i8*, i8** %arg0
  %302 = ptrtoint i8* %301 to i32
  %303 = and i32 %302, 4
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %317, label %305

; <label>:305                                     ; preds = %300
  %306 = load i8*, i8** %arg0
  %307 = load i8*, i8** %arg1
  %308 = bitcast i8* %307 to i32*
  %309 = load i32, i32* %308, align 8
  %310 = bitcast i8* %306 to i32*
  store i32 %309, i32* %310, align 8
  %311 = load i8*, i8** %arg1
  %312 = getelementptr inbounds i8, i8* %311, i64 4
  store i8* %312, i8** %arg1
  %313 = load i8*, i8** %arg0
  %314 = getelementptr inbounds i8, i8* %313, i64 4
  store i8* %314, i8** %arg0
  %315 = load i64, i64* %arg2
  %316 = sub i64 %315, 4
  store i64 %316, i64* %arg2
  br label %317

; <label>:317                                     ; preds = %300, %305
  %318 = load i64, i64* %arg2
  %319 = udiv i64 %318, 16
  store i64 %319, i64* %loc0
  br label %339

; <label>:320                                     ; preds = %339
  %321 = load i8*, i8** %arg0
  %322 = load i8*, i8** %arg1
  %323 = bitcast i8* %322 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = bitcast i8* %321 to i64*
  store i64 %324, i64* %325, align 8
  %326 = load i8*, i8** %arg0
  %327 = getelementptr inbounds i8, i8* %326, i64 8
  %328 = load i8*, i8** %arg1
  %329 = getelementptr inbounds i8, i8* %328, i64 8
  %330 = bitcast i8* %329 to i64*
  %331 = load i64, i64* %330, align 8
  %332 = bitcast i8* %327 to i64*
  store i64 %331, i64* %332, align 8
  %333 = load i8*, i8** %arg0
  %334 = getelementptr inbounds i8, i8* %333, i64 16
  store i8* %334, i8** %arg0
  %335 = load i8*, i8** %arg1
  %336 = getelementptr inbounds i8, i8* %335, i64 16
  store i8* %336, i8** %arg1
  %337 = load i64, i64* %loc0
  %338 = sub i64 %337, 1
  store i64 %338, i64* %loc0
  br label %339

; <label>:339                                     ; preds = %317, %320
  %340 = load i64, i64* %loc0
  %341 = icmp ugt i64 %340, 0
  br i1 %341, label %320, label %342

; <label>:342                                     ; preds = %339
  %343 = load i64, i64* %arg2
  %344 = and i64 %343, 8
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %356, label %346

; <label>:346                                     ; preds = %342
  %347 = load i8*, i8** %arg0
  %348 = load i8*, i8** %arg1
  %349 = bitcast i8* %348 to i64*
  %350 = load i64, i64* %349, align 8
  %351 = bitcast i8* %347 to i64*
  store i64 %350, i64* %351, align 8
  %352 = load i8*, i8** %arg0
  %353 = getelementptr inbounds i8, i8* %352, i64 8
  store i8* %353, i8** %arg0
  %354 = load i8*, i8** %arg1
  %355 = getelementptr inbounds i8, i8* %354, i64 8
  store i8* %355, i8** %arg1
  br label %356

; <label>:356                                     ; preds = %342, %346
  %357 = load i64, i64* %arg2
  %358 = and i64 %357, 4
  %359 = icmp eq i64 %358, 0
  br i1 %359, label %370, label %360

; <label>:360                                     ; preds = %356
  %361 = load i8*, i8** %arg0
  %362 = load i8*, i8** %arg1
  %363 = bitcast i8* %362 to i32*
  %364 = load i32, i32* %363, align 8
  %365 = bitcast i8* %361 to i32*
  store i32 %364, i32* %365, align 8
  %366 = load i8*, i8** %arg0
  %367 = getelementptr inbounds i8, i8* %366, i64 4
  store i8* %367, i8** %arg0
  %368 = load i8*, i8** %arg1
  %369 = getelementptr inbounds i8, i8* %368, i64 4
  store i8* %369, i8** %arg1
  br label %370

; <label>:370                                     ; preds = %356, %360
  %371 = load i64, i64* %arg2
  %372 = and i64 %371, 2
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %386, label %374

; <label>:374                                     ; preds = %370
  %375 = load i8*, i8** %arg0
  %376 = load i8*, i8** %arg1
  %377 = bitcast i8* %376 to i16*
  %378 = load i16, i16* %377, align 8
  %379 = sext i16 %378 to i32
  %380 = bitcast i8* %375 to i16*
  %381 = trunc i32 %379 to i16
  store i16 %381, i16* %380, align 8
  %382 = load i8*, i8** %arg0
  %383 = getelementptr inbounds i8, i8* %382, i64 2
  store i8* %383, i8** %arg0
  %384 = load i8*, i8** %arg1
  %385 = getelementptr inbounds i8, i8* %384, i64 2
  store i8* %385, i8** %arg1
  br label %386

; <label>:386                                     ; preds = %370, %374
  %387 = load i64, i64* %arg2
  %388 = and i64 %387, 1
  %389 = icmp eq i64 %388, 0
  br i1 %389, label %396, label %390

; <label>:390                                     ; preds = %386
  %391 = load i8*, i8** %arg0
  %392 = load i8*, i8** %arg1
  %393 = load i8, i8* %392, align 8
  %394 = zext i8 %393 to i32
  %395 = trunc i32 %394 to i8
  store i8 %395, i8* %391, align 8
  br label %396

; <label>:396                                     ; preds = %386, %390
  ret void

; <label>:397                                     ; preds = %entry, %257
  %398 = load i8*, i8** %arg0
  %399 = load i8*, i8** %arg1
  %400 = load i64, i64* %arg2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i8*, i8*, i64)*)(i8* %398, i8* %399, i64 %400)
  ret void
}

INFO:  jitting method String::Concat using LLILCJit
Successfully read String.Concat

define %System.String addrspace(1)* @String.Concat(%System.String addrspace(1)* %param0, %System.String addrspace(1)* %param1) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  %loc0 = alloca i32
  %loc1 = alloca %System.String addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %1 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %0)
  %2 = zext i8 %1 to i32
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %13, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %6 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %5)
  %7 = zext i8 %6 to i32
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

; <label>:9                                       ; preds = %4
  %10 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  ret %System.String addrspace(1)* %10

; <label>:11                                      ; preds = %4
  %12 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  ret %System.String addrspace(1)* %12

; <label>:13                                      ; preds = %entry
  %14 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %15 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %14)
  %16 = zext i8 %15 to i32
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

; <label>:18                                      ; preds = %13
  %19 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  ret %System.String addrspace(1)* %19

; <label>:20                                      ; preds = %13
  %21 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %22 = getelementptr inbounds %System.String, %System.String addrspace(1)* %21, i32 0, i32 1
  %23 = load i32, i32 addrspace(1)* %22
  store i32 %23, i32* %loc0
  %24 = load i32, i32* %loc0
  %25 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %26 = getelementptr inbounds %System.String, %System.String addrspace(1)* %25, i32 0, i32 1
  %27 = load i32, i32 addrspace(1)* %26
  %28 = add i32 %24, %27
  %29 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (i32)*)(i32 %28)
  store %System.String addrspace(1)* %29, %System.String addrspace(1)** %loc1
  %30 = load %System.String addrspace(1)*, %System.String addrspace(1)** %loc1
  %31 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)*, i32, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %30, i32 0, %System.String addrspace(1)* %31)
  %32 = load %System.String addrspace(1)*, %System.String addrspace(1)** %loc1
  %33 = load i32, i32* %loc0
  %34 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)*, i32, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %32, i32 %33, %System.String addrspace(1)* %34)
  %35 = load %System.String addrspace(1)*, %System.String addrspace(1)** %loc1
  ret %System.String addrspace(1)* %35
}

INFO:  jitting method String::IsNullOrEmpty using LLILCJit
Successfully read String.IsNullOrEmpty

define i8 @String.IsNullOrEmpty(%System.String addrspace(1)* %param0) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %1 = icmp eq %System.String addrspace(1)* %0, null
  br i1 %1, label %9, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %4 = getelementptr inbounds %System.String, %System.String addrspace(1)* %3, i32 0, i32 1
  %5 = load i32, i32 addrspace(1)* %4
  %6 = icmp eq i32 %5, 0
  %7 = sext i1 %6 to i32
  %8 = trunc i32 %7 to i8
  ret i8 %8

; <label>:9                                       ; preds = %entry
  ret i8 1
}

INFO:  jitting method String::FillStringChecked using LLILCJit
Successfully read String.FillStringChecked

define void @String.FillStringChecked(%System.String addrspace(1)* %param0, i32 %param1, %System.String addrspace(1)* %param2) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  %arg1 = alloca i32
  %arg2 = alloca %System.String addrspace(1)*
  %loc0 = alloca i16 addrspace(1)*
  %loc1 = alloca i16 addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  store i32 %param1, i32* %arg1
  store %System.String addrspace(1)* %param2, %System.String addrspace(1)** %arg2
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg2
  %1 = getelementptr inbounds %System.String, %System.String addrspace(1)* %0, i32 0, i32 1
  %2 = load i32, i32 addrspace(1)* %1
  %3 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %4 = getelementptr inbounds %System.String, %System.String addrspace(1)* %3, i32 0, i32 1
  %5 = load i32, i32 addrspace(1)* %4
  %6 = load i32, i32* %arg1
  %7 = sub i32 %5, %6
  %8 = icmp sle i32 %2, %7
  br i1 %8, label %11, label %9

; <label>:9                                       ; preds = %entry
  %10 = call %System.IndexOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.IndexOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IndexOutOfRangeException addrspace(1)*)*)(%System.IndexOutOfRangeException addrspace(1)* %10)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IndexOutOfRangeException addrspace(1)*)*)(%System.IndexOutOfRangeException addrspace(1)* %10) #0
  unreachable

; <label>:11                                      ; preds = %entry
  %12 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %NullCheck = icmp ne %System.String addrspace(1)* %12, null
  br i1 %NullCheck, label %13, label %ThrowNullRef

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %System.String, %System.String addrspace(1)* %12, i32 0, i32 2
  %15 = bitcast [0 x i16] addrspace(1)* %14 to i16 addrspace(1)*
  store i16 addrspace(1)* %15, i16 addrspace(1)** %loc0
  %16 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg2
  %NullCheck2 = icmp ne %System.String addrspace(1)* %16, null
  br i1 %NullCheck2, label %17, label %ThrowNullRef1

; <label>:17                                      ; preds = %13
  %18 = getelementptr inbounds %System.String, %System.String addrspace(1)* %16, i32 0, i32 2
  %19 = bitcast [0 x i16] addrspace(1)* %18 to i16 addrspace(1)*
  store i16 addrspace(1)* %19, i16 addrspace(1)** %loc1
  %20 = load i16 addrspace(1)*, i16 addrspace(1)** %loc0
  %21 = ptrtoint i16 addrspace(1)* %20 to i64
  %22 = load i32, i32* %arg1
  %23 = sext i32 %22 to i64
  %24 = mul i64 %23, 2
  %25 = add i64 %21, %24
  %26 = load i16 addrspace(1)*, i16 addrspace(1)** %loc1
  %27 = ptrtoint i16 addrspace(1)* %26 to i64
  %28 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg2
  %29 = getelementptr inbounds %System.String, %System.String addrspace(1)* %28, i32 0, i32 1
  %30 = load i32, i32 addrspace(1)* %29
  %31 = inttoptr i64 %25 to i16*
  %32 = inttoptr i64 %27 to i16*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i16*, i16*, i32)*)(i16* %31, i16* %32, i32 %30)
  store i16 addrspace(1)* null, i16 addrspace(1)** %loc1
  store i16 addrspace(1)* null, i16 addrspace(1)** %loc0
  ret void

ThrowNullRef:                                     ; preds = %11
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef1:                                    ; preds = %13
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method AppDomainSetup::get_LoaderOptimization using LLILCJit
Successfully read AppDomainSetup.get_LoaderOptimization

define i32 @AppDomainSetup.get_LoaderOptimization(%System.AppDomainSetup addrspace(1)* %param0) {
entry:
  %this = alloca %System.AppDomainSetup addrspace(1)*
  store %System.AppDomainSetup addrspace(1)* %param0, %System.AppDomainSetup addrspace(1)** %this
  %0 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %this
  %1 = getelementptr inbounds %System.AppDomainSetup, %System.AppDomainSetup addrspace(1)* %0, i32 0, i32 11
  %2 = load i32, i32 addrspace(1)* %1, align 8
  ret i32 %2
}

INFO:  jitting method AppDomain::PrepareDataForSetup using LLILCJit
Failed to read AppDomain.PrepareDataForSetup[loadElem]
INFO:  jitting method AppDomainSetup::.ctor using LLILCJit
Failed to read AppDomainSetup..ctor[storeElem]
INFO:  jitting method List`1::.cctor using LLILCJit
Failed to read List`1..cctor[callRuntimeHandleHelper]
INFO:  jitting method String::Compare using LLILCJit
Successfully read String.Compare

define i32 @String.Compare(%System.String addrspace(1)* %param0, %System.String addrspace(1)* %param1, i32 %param2) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  %arg2 = alloca i32
  %loc0 = alloca i32
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  store i32 %param2, i32* %arg2
  %0 = load i32, i32* %arg2
  %1 = icmp ule i32 %0, 5
  br i1 %1, label %7, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %4 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %3)
  %5 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %6 = call %System.ArgumentException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %6, %System.String addrspace(1)* %4, %System.String addrspace(1)* %5)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %6) #0
  unreachable

; <label>:7                                       ; preds = %entry
  %8 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %9 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %10 = icmp ne %System.String addrspace(1)* %8, %9
  br i1 %10, label %12, label %11

; <label>:11                                      ; preds = %7
  ret i32 0

; <label>:12                                      ; preds = %7
  %13 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %14 = icmp ne %System.String addrspace(1)* %13, null
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %12
  ret i32 -1

; <label>:16                                      ; preds = %12
  %17 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %18 = icmp ne %System.String addrspace(1)* %17, null
  br i1 %18, label %20, label %19

; <label>:19                                      ; preds = %16
  ret i32 1

; <label>:20                                      ; preds = %16
  %21 = load i32, i32* %arg2
  store i32 %21, i32* %loc0
  %22 = load i32, i32* %loc0
  switch i32 %22, label %23 [
    i32 0, label %24
    i32 1, label %48
    i32 2, label %72
    i32 3, label %96
    i32 4, label %120
    i32 5, label %149
  ]

; <label>:23                                      ; preds = %20
  br label %169

; <label>:24                                      ; preds = %20
  %25 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* ()*)()
  %26 = bitcast %System.Globalization.CultureInfo addrspace(1)* %25 to i64 addrspace(1)*
  %27 = load i64, i64 addrspace(1)* %26
  %28 = add i64 %27, 72
  %29 = inttoptr i64 %28 to i64*
  %30 = load i64, i64* %29
  %31 = add i64 %30, 16
  %32 = inttoptr i64 %31 to i64*
  %33 = load i64, i64* %32
  %34 = inttoptr i64 %33 to %System.Globalization.CompareInfo addrspace(1)* (%System.Globalization.CultureInfo addrspace(1)*)*
  %35 = call %System.Globalization.CompareInfo addrspace(1)* %34(%System.Globalization.CultureInfo addrspace(1)* %25)
  %36 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %37 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %38 = bitcast %System.Globalization.CompareInfo addrspace(1)* %35 to i64 addrspace(1)*
  %39 = load i64, i64 addrspace(1)* %38
  %40 = add i64 %39, 64
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41
  %43 = add i64 %42, 48
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44
  %46 = inttoptr i64 %45 to i32 (%System.Globalization.CompareInfo addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*, i32)*
  %47 = call i32 %46(%System.Globalization.CompareInfo addrspace(1)* %35, %System.String addrspace(1)* %36, %System.String addrspace(1)* %37, i32 0)
  ret i32 %47

; <label>:48                                      ; preds = %20
  %49 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* ()*)()
  %50 = bitcast %System.Globalization.CultureInfo addrspace(1)* %49 to i64 addrspace(1)*
  %51 = load i64, i64 addrspace(1)* %50
  %52 = add i64 %51, 72
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53
  %55 = add i64 %54, 16
  %56 = inttoptr i64 %55 to i64*
  %57 = load i64, i64* %56
  %58 = inttoptr i64 %57 to %System.Globalization.CompareInfo addrspace(1)* (%System.Globalization.CultureInfo addrspace(1)*)*
  %59 = call %System.Globalization.CompareInfo addrspace(1)* %58(%System.Globalization.CultureInfo addrspace(1)* %49)
  %60 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %61 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %62 = bitcast %System.Globalization.CompareInfo addrspace(1)* %59 to i64 addrspace(1)*
  %63 = load i64, i64 addrspace(1)* %62
  %64 = add i64 %63, 64
  %65 = inttoptr i64 %64 to i64*
  %66 = load i64, i64* %65
  %67 = add i64 %66, 48
  %68 = inttoptr i64 %67 to i64*
  %69 = load i64, i64* %68
  %70 = inttoptr i64 %69 to i32 (%System.Globalization.CompareInfo addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*, i32)*
  %71 = call i32 %70(%System.Globalization.CompareInfo addrspace(1)* %59, %System.String addrspace(1)* %60, %System.String addrspace(1)* %61, i32 1)
  ret i32 %71

; <label>:72                                      ; preds = %20
  %73 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* ()*)()
  %74 = bitcast %System.Globalization.CultureInfo addrspace(1)* %73 to i64 addrspace(1)*
  %75 = load i64, i64 addrspace(1)* %74
  %76 = add i64 %75, 72
  %77 = inttoptr i64 %76 to i64*
  %78 = load i64, i64* %77
  %79 = add i64 %78, 16
  %80 = inttoptr i64 %79 to i64*
  %81 = load i64, i64* %80
  %82 = inttoptr i64 %81 to %System.Globalization.CompareInfo addrspace(1)* (%System.Globalization.CultureInfo addrspace(1)*)*
  %83 = call %System.Globalization.CompareInfo addrspace(1)* %82(%System.Globalization.CultureInfo addrspace(1)* %73)
  %84 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %85 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %86 = bitcast %System.Globalization.CompareInfo addrspace(1)* %83 to i64 addrspace(1)*
  %87 = load i64, i64 addrspace(1)* %86
  %88 = add i64 %87, 64
  %89 = inttoptr i64 %88 to i64*
  %90 = load i64, i64* %89
  %91 = add i64 %90, 48
  %92 = inttoptr i64 %91 to i64*
  %93 = load i64, i64* %92
  %94 = inttoptr i64 %93 to i32 (%System.Globalization.CompareInfo addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*, i32)*
  %95 = call i32 %94(%System.Globalization.CompareInfo addrspace(1)* %83, %System.String addrspace(1)* %84, %System.String addrspace(1)* %85, i32 0)
  ret i32 %95

; <label>:96                                      ; preds = %20
  %97 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* ()*)()
  %98 = bitcast %System.Globalization.CultureInfo addrspace(1)* %97 to i64 addrspace(1)*
  %99 = load i64, i64 addrspace(1)* %98
  %100 = add i64 %99, 72
  %101 = inttoptr i64 %100 to i64*
  %102 = load i64, i64* %101
  %103 = add i64 %102, 16
  %104 = inttoptr i64 %103 to i64*
  %105 = load i64, i64* %104
  %106 = inttoptr i64 %105 to %System.Globalization.CompareInfo addrspace(1)* (%System.Globalization.CultureInfo addrspace(1)*)*
  %107 = call %System.Globalization.CompareInfo addrspace(1)* %106(%System.Globalization.CultureInfo addrspace(1)* %97)
  %108 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %109 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %110 = bitcast %System.Globalization.CompareInfo addrspace(1)* %107 to i64 addrspace(1)*
  %111 = load i64, i64 addrspace(1)* %110
  %112 = add i64 %111, 64
  %113 = inttoptr i64 %112 to i64*
  %114 = load i64, i64* %113
  %115 = add i64 %114, 48
  %116 = inttoptr i64 %115 to i64*
  %117 = load i64, i64* %116
  %118 = inttoptr i64 %117 to i32 (%System.Globalization.CompareInfo addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*, i32)*
  %119 = call i32 %118(%System.Globalization.CompareInfo addrspace(1)* %107, %System.String addrspace(1)* %108, %System.String addrspace(1)* %109, i32 1)
  ret i32 %119

; <label>:120                                     ; preds = %20
  %121 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %122 = getelementptr inbounds %System.String, %System.String addrspace(1)* %121, i32 0, i32 2
  %123 = bitcast [0 x i16] addrspace(1)* %122 to i16 addrspace(1)*
  %124 = load i16, i16 addrspace(1)* %123, align 8
  %125 = zext i16 %124 to i32
  %126 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %127 = getelementptr inbounds %System.String, %System.String addrspace(1)* %126, i32 0, i32 2
  %128 = bitcast [0 x i16] addrspace(1)* %127 to i16 addrspace(1)*
  %129 = load i16, i16 addrspace(1)* %128, align 8
  %130 = zext i16 %129 to i32
  %131 = sub i32 %125, %130
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %145, label %133

; <label>:133                                     ; preds = %120
  %134 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %135 = getelementptr inbounds %System.String, %System.String addrspace(1)* %134, i32 0, i32 2
  %136 = bitcast [0 x i16] addrspace(1)* %135 to i16 addrspace(1)*
  %137 = load i16, i16 addrspace(1)* %136, align 8
  %138 = zext i16 %137 to i32
  %139 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %140 = getelementptr inbounds %System.String, %System.String addrspace(1)* %139, i32 0, i32 2
  %141 = bitcast [0 x i16] addrspace(1)* %140 to i16 addrspace(1)*
  %142 = load i16, i16 addrspace(1)* %141, align 8
  %143 = zext i16 %142 to i32
  %144 = sub i32 %138, %143
  ret i32 %144

; <label>:145                                     ; preds = %120
  %146 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %147 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %148 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %146, %System.String addrspace(1)* %147)
  ret i32 %148

; <label>:149                                     ; preds = %20
  %150 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %NullCheck = icmp ne %System.String addrspace(1)* %150, null
  br i1 %NullCheck, label %151, label %ThrowNullRef

; <label>:151                                     ; preds = %149
  %152 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %150)
  %153 = zext i8 %152 to i32
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %165, label %155

; <label>:155                                     ; preds = %151
  %156 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %NullCheck2 = icmp ne %System.String addrspace(1)* %156, null
  br i1 %NullCheck2, label %157, label %ThrowNullRef1

; <label>:157                                     ; preds = %155
  %158 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %156)
  %159 = zext i8 %158 to i32
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %165, label %161

; <label>:161                                     ; preds = %157
  %162 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %163 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %164 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %162, %System.String addrspace(1)* %163)
  ret i32 %164

; <label>:165                                     ; preds = %151, %157
  %166 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %167 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %168 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %166, %System.String addrspace(1)* %167)
  ret i32 %168

; <label>:169                                     ; preds = %23
  %170 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %171 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %170)
  %172 = call %System.NotSupportedException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.NotSupportedException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.NotSupportedException addrspace(1)*, %System.String addrspace(1)*)*)(%System.NotSupportedException addrspace(1)* %172, %System.String addrspace(1)* %171)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.NotSupportedException addrspace(1)*)*)(%System.NotSupportedException addrspace(1)* %172) #0
  unreachable

ThrowNullRef:                                     ; preds = %149
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef1:                                    ; preds = %155
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method String::CompareOrdinalIgnoreCaseHelper using LLILCJit
Successfully read String.CompareOrdinalIgnoreCaseHelper

define i32 @String.CompareOrdinalIgnoreCaseHelper(%System.String addrspace(1)* %param0, %System.String addrspace(1)* %param1) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  %loc0 = alloca i32
  %loc1 = alloca i16 addrspace(1)*
  %loc2 = alloca i16 addrspace(1)*
  %loc3 = alloca i16*
  %loc4 = alloca i16*
  %loc5 = alloca i32
  %loc6 = alloca i32
  %loc7 = alloca i32
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %1 = getelementptr inbounds %System.String, %System.String addrspace(1)* %0, i32 0, i32 1
  %2 = load i32, i32 addrspace(1)* %1
  %3 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %4 = getelementptr inbounds %System.String, %System.String addrspace(1)* %3, i32 0, i32 1
  %5 = load i32, i32 addrspace(1)* %4
  %6 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (i32, i32)*)(i32 %2, i32 %5)
  store i32 %6, i32* %loc0
  %7 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %NullCheck = icmp ne %System.String addrspace(1)* %7, null
  br i1 %NullCheck, label %8, label %ThrowNullRef

; <label>:8                                       ; preds = %entry
  %9 = getelementptr inbounds %System.String, %System.String addrspace(1)* %7, i32 0, i32 2
  %10 = bitcast [0 x i16] addrspace(1)* %9 to i16 addrspace(1)*
  store i16 addrspace(1)* %10, i16 addrspace(1)** %loc1
  %11 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %NullCheck2 = icmp ne %System.String addrspace(1)* %11, null
  br i1 %NullCheck2, label %12, label %ThrowNullRef1

; <label>:12                                      ; preds = %8
  %13 = getelementptr inbounds %System.String, %System.String addrspace(1)* %11, i32 0, i32 2
  %14 = bitcast [0 x i16] addrspace(1)* %13 to i16 addrspace(1)*
  store i16 addrspace(1)* %14, i16 addrspace(1)** %loc2
  %15 = load i16 addrspace(1)*, i16 addrspace(1)** %loc1
  %16 = ptrtoint i16 addrspace(1)* %15 to i64
  %17 = inttoptr i64 %16 to i16*
  store i16* %17, i16** %loc3
  %18 = load i16 addrspace(1)*, i16 addrspace(1)** %loc2
  %19 = ptrtoint i16 addrspace(1)* %18 to i64
  %20 = inttoptr i64 %19 to i16*
  store i16* %20, i16** %loc4
  br label %60

; <label>:21                                      ; preds = %60
  %22 = load i16*, i16** %loc3
  %23 = load i16, i16* %22, align 8
  %24 = zext i16 %23 to i32
  store i32 %24, i32* %loc5
  %25 = load i16*, i16** %loc4
  %26 = load i16, i16* %25, align 8
  %27 = zext i16 %26 to i32
  store i32 %27, i32* %loc6
  %28 = load i32, i32* %loc5
  %29 = sub i32 %28, 97
  %30 = icmp ugt i32 %29, 25
  br i1 %30, label %34, label %31

; <label>:31                                      ; preds = %21
  %32 = load i32, i32* %loc5
  %33 = sub i32 %32, 32
  store i32 %33, i32* %loc5
  br label %34

; <label>:34                                      ; preds = %21, %31
  %35 = load i32, i32* %loc6
  %36 = sub i32 %35, 97
  %37 = icmp ugt i32 %36, 25
  br i1 %37, label %41, label %38

; <label>:38                                      ; preds = %34
  %39 = load i32, i32* %loc6
  %40 = sub i32 %39, 32
  store i32 %40, i32* %loc6
  br label %41

; <label>:41                                      ; preds = %34, %38
  %42 = load i32, i32* %loc5
  %43 = load i32, i32* %loc6
  %44 = icmp eq i32 %42, %43
  br i1 %44, label %49, label %45

; <label>:45                                      ; preds = %41
  %46 = load i32, i32* %loc5
  %47 = load i32, i32* %loc6
  %48 = sub i32 %46, %47
  store i32 %48, i32* %loc7
  br label %71

; <label>:49                                      ; preds = %41
  %50 = load i16*, i16** %loc3
  %51 = bitcast i16* %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 2
  %53 = bitcast i8* %52 to i16*
  store i16* %53, i16** %loc3
  %54 = load i16*, i16** %loc4
  %55 = bitcast i16* %54 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 2
  %57 = bitcast i8* %56 to i16*
  store i16* %57, i16** %loc4
  %58 = load i32, i32* %loc0
  %59 = sub i32 %58, 1
  store i32 %59, i32* %loc0
  br label %60

; <label>:60                                      ; preds = %12, %49
  %61 = load i32, i32* %loc0
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %21, label %63

; <label>:63                                      ; preds = %60
  %64 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %65 = getelementptr inbounds %System.String, %System.String addrspace(1)* %64, i32 0, i32 1
  %66 = load i32, i32 addrspace(1)* %65
  %67 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %68 = getelementptr inbounds %System.String, %System.String addrspace(1)* %67, i32 0, i32 1
  %69 = load i32, i32 addrspace(1)* %68
  %70 = sub i32 %66, %69
  store i32 %70, i32* %loc7
  br label %71

; <label>:71                                      ; preds = %45, %63
  %72 = load i32, i32* %loc7
  ret i32 %72

ThrowNullRef:                                     ; preds = %entry
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef1:                                    ; preds = %8
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method Math::Min using LLILCJit
Successfully read Math.Min

define i32 @Math.Min(i32 %param0, i32 %param1) {
entry:
  %arg0 = alloca i32
  %arg1 = alloca i32
  store i32 %param0, i32* %arg0
  store i32 %param1, i32* %arg1
  %0 = load i32, i32* %arg0
  %1 = load i32, i32* %arg1
  %2 = icmp sle i32 %0, %1
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %entry
  %4 = load i32, i32* %arg1
  ret i32 %4

; <label>:5                                       ; preds = %entry
  %6 = load i32, i32* %arg0
  ret i32 %6
}

INFO:  jitting method List`1::Add using LLILCJit
Failed to read List`1.Add[storeElem]
INFO:  jitting method List`1::EnsureCapacity using LLILCJit
Successfully read List`1.EnsureCapacity

define void @"List`1.EnsureCapacity"(%"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)* %param0, i32 %param1) {
entry:
  %this = alloca %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)*
  %arg1 = alloca i32
  %loc0 = alloca i32
  store %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)** %this
  store i32 %param1, i32* %arg1
  %0 = load %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)*, %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)** %this
  %1 = getelementptr inbounds %"System.Collections.Generic.List`1[System.__Canon]", %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)* %0, i32 0, i32 1
  %2 = load %"System.__Canon[]" addrspace(1)*, %"System.__Canon[]" addrspace(1)* addrspace(1)* %1, align 8
  %3 = getelementptr inbounds %"System.__Canon[]", %"System.__Canon[]" addrspace(1)* %2, i32 0, i32 1
  %4 = load i32, i32 addrspace(1)* %3
  %5 = zext i32 %4 to i64
  %6 = trunc i64 %5 to i32
  %7 = load i32, i32* %arg1
  %8 = icmp sge i32 %6, %7
  br i1 %8, label %42, label %9

; <label>:9                                       ; preds = %entry
  %10 = load %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)*, %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)** %this
  %11 = getelementptr inbounds %"System.Collections.Generic.List`1[System.__Canon]", %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)* %10, i32 0, i32 1
  %12 = load %"System.__Canon[]" addrspace(1)*, %"System.__Canon[]" addrspace(1)* addrspace(1)* %11, align 8
  %13 = getelementptr inbounds %"System.__Canon[]", %"System.__Canon[]" addrspace(1)* %12, i32 0, i32 1
  %14 = load i32, i32 addrspace(1)* %13
  %15 = zext i32 %14 to i64
  %16 = trunc i64 %15 to i32
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %27, label %18

; <label>:18                                      ; preds = %9
  %19 = load %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)*, %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)** %this
  %20 = getelementptr inbounds %"System.Collections.Generic.List`1[System.__Canon]", %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)* %19, i32 0, i32 1
  %21 = load %"System.__Canon[]" addrspace(1)*, %"System.__Canon[]" addrspace(1)* addrspace(1)* %20, align 8
  %22 = getelementptr inbounds %"System.__Canon[]", %"System.__Canon[]" addrspace(1)* %21, i32 0, i32 1
  %23 = load i32, i32 addrspace(1)* %22
  %24 = zext i32 %23 to i64
  %25 = trunc i64 %24 to i32
  %26 = mul i32 %25, 2
  br label %28

; <label>:27                                      ; preds = %9
  br label %28

; <label>:28                                      ; preds = %18, %27
  %29 = phi i32 [ %26, %18 ], [ 4, %27 ]
  store i32 %29, i32* %loc0
  %30 = load i32, i32* %loc0
  %31 = icmp ule i32 %30, 2146435071
  br i1 %31, label %33, label %32

; <label>:32                                      ; preds = %28
  store i32 2146435071, i32* %loc0
  br label %33

; <label>:33                                      ; preds = %28, %32
  %34 = load i32, i32* %loc0
  %35 = load i32, i32* %arg1
  %36 = icmp sge i32 %34, %35
  br i1 %36, label %39, label %37

; <label>:37                                      ; preds = %33
  %38 = load i32, i32* %arg1
  store i32 %38, i32* %loc0
  br label %39

; <label>:39                                      ; preds = %33, %37
  %40 = load %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)*, %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)** %this
  %41 = load i32, i32* %loc0
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)*, i32)*)(%"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)* %40, i32 %41)
  br label %42

; <label>:42                                      ; preds = %entry, %39
  ret void
}

INFO:  jitting method List`1::set_Capacity using LLILCJit
Failed to read List`1.set_Capacity[non-const derefAddress]
INFO:  jitting method AppDomainSetup::SetCompatibilitySwitches using LLILCJit
Failed to read AppDomainSetup.SetCompatibilitySwitches[Leave: nontrivial finally invocation]
INFO:  jitting method Dictionary`2::.ctor using LLILCJit
Failed to read Dictionary`2..ctor[Call HasTypeArg]
INFO:  jitting method EqualityComparer`1::get_Default using LLILCJit
Failed to read EqualityComparer`1.get_Default[Call HasTypeArg]
INFO:  jitting method EqualityComparer`1::CreateComparer using LLILCJit
Failed to read EqualityComparer`1.CreateComparer[conditionalDerefAddress]
INFO:  jitting method RuntimeType::IsAssignableFrom using LLILCJit
Failed to read RuntimeType.IsAssignableFrom[loadElem]
INFO:  jitting method RuntimeType::get_UnderlyingSystemType using LLILCJit
Successfully read RuntimeType.get_UnderlyingSystemType

define %System.Type addrspace(1)* @RuntimeType.get_UnderlyingSystemType(%System.RuntimeType addrspace(1)* %param0) {
entry:
  %this = alloca %System.RuntimeType addrspace(1)*
  store %System.RuntimeType addrspace(1)* %param0, %System.RuntimeType addrspace(1)** %this
  %0 = load %System.RuntimeType addrspace(1)*, %System.RuntimeType addrspace(1)** %this
  %1 = bitcast %System.RuntimeType addrspace(1)* %0 to %System.Type addrspace(1)*
  ret %System.Type addrspace(1)* %1
}

INFO:  jitting method GenericEqualityComparer`1::.ctor using LLILCJit
Successfully read GenericEqualityComparer`1..ctor

define void @"GenericEqualityComparer`1..ctor"(%"System.Collections.Generic.GenericEqualityComparer`1[System.__Canon]" addrspace(1)* %param0) {
entry:
  %this = alloca %"System.Collections.Generic.GenericEqualityComparer`1[System.__Canon]" addrspace(1)*
  store %"System.Collections.Generic.GenericEqualityComparer`1[System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.GenericEqualityComparer`1[System.__Canon]" addrspace(1)** %this
  %0 = load %"System.Collections.Generic.GenericEqualityComparer`1[System.__Canon]" addrspace(1)*, %"System.Collections.Generic.GenericEqualityComparer`1[System.__Canon]" addrspace(1)** %this
  %1 = bitcast %"System.Collections.Generic.GenericEqualityComparer`1[System.__Canon]" addrspace(1)* %0 to %"System.Collections.Generic.EqualityComparer`1[System.__Canon]" addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Collections.Generic.EqualityComparer`1[System.__Canon]" addrspace(1)*)*)(%"System.Collections.Generic.EqualityComparer`1[System.__Canon]" addrspace(1)* %1)
  ret void
}

INFO:  jitting method EqualityComparer`1::.ctor using LLILCJit
Successfully read EqualityComparer`1..ctor

define void @"EqualityComparer`1..ctor"(%"System.Collections.Generic.EqualityComparer`1[System.__Canon]" addrspace(1)* %param0) {
entry:
  %this = alloca %"System.Collections.Generic.EqualityComparer`1[System.__Canon]" addrspace(1)*
  store %"System.Collections.Generic.EqualityComparer`1[System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.EqualityComparer`1[System.__Canon]" addrspace(1)** %this
  %0 = load %"System.Collections.Generic.EqualityComparer`1[System.__Canon]" addrspace(1)*, %"System.Collections.Generic.EqualityComparer`1[System.__Canon]" addrspace(1)** %this
  %1 = bitcast %"System.Collections.Generic.EqualityComparer`1[System.__Canon]" addrspace(1)* %0 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %1)
  ret void
}

INFO:  jitting method HashHelpers::.cctor using LLILCJit
Failed to read HashHelpers..cctor[convertHandle]
INFO:  jitting method String::UseRandomizedHashing using LLILCJit
Successfully read String.UseRandomizedHashing

define i8 @String.UseRandomizedHashing() {
entry:
  %0 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 ()*)()
  %1 = zext i8 %0 to i32
  %2 = trunc i32 %1 to i8
  ret i8 %2
}

INFO:  jitting method DomainNeutralILStubClass::IL_STUB_PInvoke using LLILCJit
Failed to read DomainNeutralILStubClass.IL_STUB_PInvoke[publish secret param]
INFO:  jitting method List`1::System.Collections.Generic.IEnumerable<T>.GetEnumerator using LLILCJit
Failed to read List`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator[Call HasTypeArg]
INFO:  jitting method Enumerator::MoveNext using LLILCJit
Failed to read Enumerator.MoveNext[loadElem]
INFO:  jitting method Enumerator::get_Current using LLILCJit
Successfully read Enumerator.get_Current

define %System.__Canon addrspace(1)* @Enumerator.get_Current(%"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)* %param0, %System.RuntimeTypeHandle* %param1) {
entry:
  %this = alloca %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)*
  %"$TypeArg" = alloca %System.RuntimeTypeHandle*
  store %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)** %this
  store %System.RuntimeTypeHandle* %param1, %System.RuntimeTypeHandle** %"$TypeArg"
  %0 = load %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)*, %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)** %this
  %1 = getelementptr inbounds %"System.Collections.Generic.List`1+Enumerator[System.__Canon]", %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)* %0, i32 0, i32 1
  %2 = load %System.__Canon addrspace(1)*, %System.__Canon addrspace(1)* addrspace(1)* %1, align 8
  ret %System.__Canon addrspace(1)* %2
}

INFO:  jitting method StringComparer::.cctor using LLILCJit
Successfully read StringComparer..cctor

define void @StringComparer..cctor() {
entry:
  %0 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* ()*)()
  %1 = call %System.CultureAwareComparer addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.CultureAwareComparer addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.CultureAwareComparer addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)*, i8)*)(%System.CultureAwareComparer addrspace(1)* %1, %System.Globalization.CultureInfo addrspace(1)* %0, i8 0)
  %2 = bitcast %System.CultureAwareComparer addrspace(1)* %1 to %System.StringComparer addrspace(1)*
  %3 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 88)
  %4 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 56
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i8 addrspace(1)*, %System.StringComparer addrspace(1)*)*)(i8 addrspace(1)* %4, %System.StringComparer addrspace(1)* %2)
  %5 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* ()*)()
  %6 = call %System.CultureAwareComparer addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.CultureAwareComparer addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.CultureAwareComparer addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)*, i8)*)(%System.CultureAwareComparer addrspace(1)* %6, %System.Globalization.CultureInfo addrspace(1)* %5, i8 1)
  %7 = bitcast %System.CultureAwareComparer addrspace(1)* %6 to %System.StringComparer addrspace(1)*
  %8 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 88)
  %9 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 64
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i8 addrspace(1)*, %System.StringComparer addrspace(1)*)*)(i8 addrspace(1)* %9, %System.StringComparer addrspace(1)* %7)
  %10 = call %System.OrdinalComparer addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.OrdinalComparer addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.OrdinalComparer addrspace(1)*, i8)*)(%System.OrdinalComparer addrspace(1)* %10, i8 0)
  %11 = bitcast %System.OrdinalComparer addrspace(1)* %10 to %System.StringComparer addrspace(1)*
  %12 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 88)
  %13 = getelementptr inbounds i8, i8 addrspace(1)* %12, i64 72
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i8 addrspace(1)*, %System.StringComparer addrspace(1)*)*)(i8 addrspace(1)* %13, %System.StringComparer addrspace(1)* %11)
  %14 = call %System.OrdinalComparer addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.OrdinalComparer addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.OrdinalComparer addrspace(1)*, i8)*)(%System.OrdinalComparer addrspace(1)* %14, i8 1)
  %15 = bitcast %System.OrdinalComparer addrspace(1)* %14 to %System.StringComparer addrspace(1)*
  %16 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 88)
  %17 = getelementptr inbounds i8, i8 addrspace(1)* %16, i64 80
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i8 addrspace(1)*, %System.StringComparer addrspace(1)*)*)(i8 addrspace(1)* %17, %System.StringComparer addrspace(1)* %15)
  ret void
}

INFO:  jitting method CultureInfo::get_InvariantCulture using LLILCJit
Successfully read CultureInfo.get_InvariantCulture

define %System.Globalization.CultureInfo addrspace(1)* @CultureInfo.get_InvariantCulture() {
entry:
  %0 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 979)
  %1 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 1720
  %2 = addrspacecast i8 addrspace(1)* %1 to %System.Globalization.CultureInfo addrspace(1)**
  %3 = load volatile %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %2
  ret %System.Globalization.CultureInfo addrspace(1)* %3
}

INFO:  jitting method CultureInfo::.cctor using LLILCJit
Successfully read CultureInfo..cctor

define void @CultureInfo..cctor() {
entry:
  %0 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 ()*)()
  %1 = zext i8 %0 to i32
  %2 = trunc i32 %1 to i8
  %3 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 979)
  %4 = getelementptr inbounds i8, i8 addrspace(1)* %3, i64 2201
  %5 = addrspacecast i8 addrspace(1)* %4 to i8*
  store i8 %2, i8* %5
  ret void
}

INFO:  jitting method CultureInfo::Init using LLILCJit
Successfully read CultureInfo.Init

define i8 @CultureInfo.Init() {
entry:
  %loc0 = alloca %System.Globalization.CultureInfo addrspace(1)*
  %0 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 979)
  %1 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 1720
  %2 = addrspacecast i8 addrspace(1)* %1 to %System.Globalization.CultureInfo addrspace(1)**
  %3 = load volatile %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %2
  %4 = icmp ne %System.Globalization.CultureInfo addrspace(1)* %3, null
  br i1 %4, label %13, label %5

; <label>:5                                       ; preds = %entry
  %6 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %7 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Globalization.CultureInfo addrspace(1)*, %System.String addrspace(1)*, i8)*)(%System.Globalization.CultureInfo addrspace(1)* %7, %System.String addrspace(1)* %6, i8 0)
  store %System.Globalization.CultureInfo addrspace(1)* %7, %System.Globalization.CultureInfo addrspace(1)** %loc0
  %8 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %loc0
  %9 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %8, i32 0, i32 11
  store i8 1, i8 addrspace(1)* %9
  %10 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %loc0
  %11 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 979)
  %12 = getelementptr inbounds i8, i8 addrspace(1)* %11, i64 1720
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i8 addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)*)*)(i8 addrspace(1)* %12, %System.Globalization.CultureInfo addrspace(1)* %10)
  fence seq_cst
  br label %13

; <label>:13                                      ; preds = %entry, %5
  %14 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 979)
  %15 = getelementptr inbounds i8, i8 addrspace(1)* %14, i64 1720
  %16 = addrspacecast i8 addrspace(1)* %15 to %System.Globalization.CultureInfo addrspace(1)**
  %17 = load volatile %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %16
  %18 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 979)
  %19 = getelementptr inbounds i8, i8 addrspace(1)* %18, i64 1728
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i8 addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)*)*)(i8 addrspace(1)* %19, %System.Globalization.CultureInfo addrspace(1)* %17)
  fence seq_cst
  %20 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 979)
  %21 = getelementptr inbounds i8, i8 addrspace(1)* %20, i64 1712
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i8 addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)*)*)(i8 addrspace(1)* %21, %System.Globalization.CultureInfo addrspace(1)* %17)
  fence seq_cst
  %22 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* ()*)()
  %23 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 979)
  %24 = getelementptr inbounds i8, i8 addrspace(1)* %23, i64 1712
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i8 addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)*)*)(i8 addrspace(1)* %24, %System.Globalization.CultureInfo addrspace(1)* %22)
  fence seq_cst
  %25 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* ()*)()
  %26 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 979)
  %27 = getelementptr inbounds i8, i8 addrspace(1)* %26, i64 1728
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i8 addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)*)*)(i8 addrspace(1)* %27, %System.Globalization.CultureInfo addrspace(1)* %25)
  fence seq_cst
  ret i8 1
}

INFO:  jitting method CultureInfo::.ctor using LLILCJit
Failed to read CultureInfo..ctor[Call intrinsic]
INFO:  jitting method CultureData::GetCultureData using LLILCJit
Failed to read CultureData.GetCultureData[convertToHelperArgumentType]
INFO:  jitting method CultureData::get_Invariant using LLILCJit
Failed to read CultureData.get_Invariant[storeElem]
INFO:  jitting method CalendarData::.cctor using LLILCJit
Failed to read CalendarData..cctor[storeElem]
INFO:  jitting method CalendarData::.ctor using LLILCJit
Failed to read CalendarData..ctor[init class]
INFO:  jitting method CultureData::get_CultureName using LLILCJit
Successfully read CultureData.get_CultureName

define %System.String addrspace(1)* @CultureData.get_CultureName(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  %loc0 = alloca %System.String addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 3
  %2 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %1, align 8
  store %System.String addrspace(1)* %2, %System.String addrspace(1)** %loc0
  %3 = icmp eq %System.String addrspace(1)* %2, null
  br i1 %3, label %20, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.String addrspace(1)*, %System.String addrspace(1)** %loc0
  %6 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %7 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %5, %System.String addrspace(1)* %6)
  %8 = zext i8 %7 to i32
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %16, label %10

; <label>:10                                      ; preds = %4
  %11 = load %System.String addrspace(1)*, %System.String addrspace(1)** %loc0
  %12 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %13 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %11, %System.String addrspace(1)* %12)
  %14 = zext i8 %13 to i32
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

; <label>:16                                      ; preds = %4, %10
  %17 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %18 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %17, i32 0, i32 3
  %19 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %18, align 8
  ret %System.String addrspace(1)* %19

; <label>:20                                      ; preds = %entry, %10
  %21 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %22 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %21, i32 0, i32 1
  %23 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %22, align 8
  ret %System.String addrspace(1)* %23
}

INFO:  jitting method String::op_Equality using LLILCJit
Successfully read String.op_Equality

define i8 @String.op_Equality(%System.String addrspace(1)* %param0, %System.String addrspace(1)* %param1) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %1 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %2 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %0, %System.String addrspace(1)* %1)
  %3 = zext i8 %2 to i32
  %4 = trunc i32 %3 to i8
  ret i8 %4
}

INFO:  jitting method String::Equals using LLILCJit
Successfully read String.Equals

define i8 @String.Equals(%System.String addrspace(1)* %param0, %System.String addrspace(1)* %param1) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %1 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %2 = icmp ne %System.String addrspace(1)* %0, %1
  br i1 %2, label %4, label %3

; <label>:3                                       ; preds = %entry
  ret i8 1

; <label>:4                                       ; preds = %entry
  %5 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %6 = icmp eq %System.String addrspace(1)* %5, null
  br i1 %6, label %10, label %7

; <label>:7                                       ; preds = %4
  %8 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %9 = icmp ne %System.String addrspace(1)* %8, null
  br i1 %9, label %11, label %10

; <label>:10                                      ; preds = %4, %7
  ret i8 0

; <label>:11                                      ; preds = %7
  %12 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %13 = getelementptr inbounds %System.String, %System.String addrspace(1)* %12, i32 0, i32 1
  %14 = load i32, i32 addrspace(1)* %13
  %15 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %16 = getelementptr inbounds %System.String, %System.String addrspace(1)* %15, i32 0, i32 1
  %17 = load i32, i32 addrspace(1)* %16
  %18 = icmp eq i32 %14, %17
  br i1 %18, label %20, label %19

; <label>:19                                      ; preds = %11
  ret i8 0

; <label>:20                                      ; preds = %11
  %21 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %22 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %23 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %21, %System.String addrspace(1)* %22)
  %24 = zext i8 %23 to i32
  %25 = trunc i32 %24 to i8
  ret i8 %25
}

INFO:  jitting method CultureInfo::InitUserDefaultCulture using LLILCJit
Successfully read CultureInfo.InitUserDefaultCulture

define %System.Globalization.CultureInfo addrspace(1)* @CultureInfo.InitUserDefaultCulture() {
entry:
  %loc0 = alloca %System.String addrspace(1)*
  %loc1 = alloca %System.Globalization.CultureInfo addrspace(1)*
  %0 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (i32)*)(i32 1024)
  store %System.String addrspace(1)* %0, %System.String addrspace(1)** %loc0
  %1 = load %System.String addrspace(1)*, %System.String addrspace(1)** %loc0
  %2 = icmp ne %System.String addrspace(1)* %1, null
  br i1 %2, label %9, label %3

; <label>:3                                       ; preds = %entry
  %4 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (i32)*)(i32 2048)
  store %System.String addrspace(1)* %4, %System.String addrspace(1)** %loc0
  %5 = load %System.String addrspace(1)*, %System.String addrspace(1)** %loc0
  %6 = icmp ne %System.String addrspace(1)* %5, null
  br i1 %6, label %9, label %7

; <label>:7                                       ; preds = %3
  %8 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* ()*)()
  ret %System.Globalization.CultureInfo addrspace(1)* %8

; <label>:9                                       ; preds = %entry, %3
  %10 = load %System.String addrspace(1)*, %System.String addrspace(1)** %loc0
  %11 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* (%System.String addrspace(1)*, i8)*)(%System.String addrspace(1)* %10, i8 1)
  store %System.Globalization.CultureInfo addrspace(1)* %11, %System.Globalization.CultureInfo addrspace(1)** %loc1
  %12 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %loc1
  %13 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %12, i32 0, i32 11
  store i8 1, i8 addrspace(1)* %13
  %14 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %loc1
  ret %System.Globalization.CultureInfo addrspace(1)* %14
}

INFO:  jitting method CultureInfo::GetDefaultLocaleName using LLILCJit
Failed to read CultureInfo.GetDefaultLocaleName[Return refany or value class]
INFO:  jitting method DomainNeutralILStubClass::IL_STUB_PInvoke using LLILCJit
Failed to read DomainNeutralILStubClass.IL_STUB_PInvoke[Struct parameter]
INFO:  jitting method CultureInfo::GetCultureByName using LLILCJit
Successfully read CultureInfo.GetCultureByName

define %System.Globalization.CultureInfo addrspace(1)* @CultureInfo.GetCultureByName(%System.String addrspace(1)* %param0, i8 %param1) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  %arg1 = alloca i8
  %loc0 = alloca %System.Globalization.CultureInfo addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  store i8 %param1, i8* %arg1
  %0 = load i8, i8* %arg1
  %1 = zext i8 %0 to i32
  %2 = icmp ne i32 %1, 0
  br i1 %2, label %6, label %3

; <label>:3                                       ; preds = %entry
  %4 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %5 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %4)
  br label %9

; <label>:6                                       ; preds = %entry
  %7 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %8 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Globalization.CultureInfo addrspace(1)*, %System.String addrspace(1)*)*)(%System.Globalization.CultureInfo addrspace(1)* %8, %System.String addrspace(1)* %7)
  br label %9

; <label>:9                                       ; preds = %3, %6
  %10 = phi %System.Globalization.CultureInfo addrspace(1)* [ %5, %3 ], [ %8, %6 ]
  store %System.Globalization.CultureInfo addrspace(1)* %10, %System.Globalization.CultureInfo addrspace(1)** %loc0
  br label %11

; <label>:11                                      ; preds = %9
  %12 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %loc0
  ret %System.Globalization.CultureInfo addrspace(1)* %12
}

INFO:  jitting method CultureInfo::.ctor using LLILCJit
Successfully read CultureInfo..ctor

define void @CultureInfo..ctor(%System.Globalization.CultureInfo addrspace(1)* %param0, %System.String addrspace(1)* %param1) {
entry:
  %this = alloca %System.Globalization.CultureInfo addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  store %System.Globalization.CultureInfo addrspace(1)* %param0, %System.Globalization.CultureInfo addrspace(1)** %this
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  %0 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %1 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Globalization.CultureInfo addrspace(1)*, %System.String addrspace(1)*, i8)*)(%System.Globalization.CultureInfo addrspace(1)* %0, %System.String addrspace(1)* %1, i8 1)
  ret void
}

INFO:  jitting method CultureData::AnsiToLower using LLILCJit
Failed to read CultureData.AnsiToLower[Phi type mismatch]
INFO:  jitting method StringBuilder::.ctor using LLILCJit
Failed to read StringBuilder..ctor[storeElem]
INFO:  jitting method StringBuilder::ThreadSafeCopy using LLILCJit
Failed to read StringBuilder.ThreadSafeCopy[loadElemA]
INFO:  jitting method StringBuilder::Append using LLILCJit
Failed to read StringBuilder.Append[storeElem]
INFO:  jitting method StringBuilder::ToString using LLILCJit
Failed to read StringBuilder.ToString[loadElemA]
INFO:  jitting method CultureData::CreateCultureData using LLILCJit
Successfully read CultureData.CreateCultureData

define %System.Globalization.CultureData addrspace(1)* @CultureData.CreateCultureData(%System.String addrspace(1)* %param0, i8 %param1) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  %arg1 = alloca i8
  %loc0 = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  store i8 %param1, i8* %arg1
  %0 = call %System.Globalization.CultureData addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureData addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %0)
  store %System.Globalization.CultureData addrspace(1)* %0, %System.Globalization.CultureData addrspace(1)** %loc0
  %1 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %loc0
  %2 = load i8, i8* %arg1
  %3 = zext i8 %2 to i32
  %4 = trunc i32 %3 to i8
  %5 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %1, i32 0, i32 62
  store i8 %4, i8 addrspace(1)* %5
  %6 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %loc0
  %7 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %8 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %6, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %8, %System.String addrspace(1)* %7)
  %9 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %loc0
  %NullCheck = icmp ne %System.Globalization.CultureData addrspace(1)* %9, null
  br i1 %NullCheck, label %10, label %ThrowNullRef

; <label>:10                                      ; preds = %entry
  %11 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %9)
  %12 = zext i8 %11 to i32
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %15, label %14

; <label>:14                                      ; preds = %10
  ret %System.Globalization.CultureData addrspace(1)* null

; <label>:15                                      ; preds = %10
  %16 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %loc0
  ret %System.Globalization.CultureData addrspace(1)* %16

ThrowNullRef:                                     ; preds = %entry
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method CultureData::.ctor using LLILCJit
Successfully read CultureData..ctor

define void @CultureData..ctor(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 48
  store i32 -1, i32 addrspace(1)* %1
  %2 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %3 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %2, i32 0, i32 53
  store i32 -1, i32 addrspace(1)* %3
  %4 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %5 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %4, i32 0, i32 54
  store i32 -1, i32 addrspace(1)* %5
  %6 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %7 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %6, i32 0, i32 58
  store i32 -1, i32 addrspace(1)* %7
  %8 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %9 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %8, i32 0, i32 59
  store i32 -1, i32 addrspace(1)* %9
  %10 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %11 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %10, i32 0, i32 60
  store i32 -1, i32 addrspace(1)* %11
  %12 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %13 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %12, i32 0, i32 61
  store i32 -1, i32 addrspace(1)* %13
  %14 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %15 = bitcast %System.Globalization.CultureData addrspace(1)* %14 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %15)
  ret void
}

INFO:  jitting method CultureData::InitCultureData using LLILCJit
Successfully read CultureData.InitCultureData

define i8 @CultureData.InitCultureData(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %1 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %0)
  %2 = zext i8 %1 to i32
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %entry
  ret i8 0

; <label>:5                                       ; preds = %entry
  ret i8 1
}

INFO:  jitting method Dictionary`2::System.Collections.ICollection.get_SyncRoot using LLILCJit
Failed to read Dictionary`2.System.Collections.ICollection.get_SyncRoot[Call HasTypeArg]
INFO:  jitting method Dictionary`2::Insert using LLILCJit
Failed to read Dictionary`2.Insert[non-const derefAddress]
INFO:  jitting method Dictionary`2::Initialize using LLILCJit
Failed to read Dictionary`2.Initialize[non-const derefAddress]
INFO:  jitting method HashHelpers::GetPrime using LLILCJit
Failed to read HashHelpers.GetPrime[loadElem]
INFO:  jitting method GenericEqualityComparer`1::GetHashCode using LLILCJit
Successfully read GenericEqualityComparer`1.GetHashCode

define i32 @"GenericEqualityComparer`1.GetHashCode"(%"System.Collections.Generic.GenericEqualityComparer`1[System.__Canon]" addrspace(1)* %param0, %System.__Canon addrspace(1)* %param1) {
entry:
  %this = alloca %"System.Collections.Generic.GenericEqualityComparer`1[System.__Canon]" addrspace(1)*
  %arg1 = alloca %System.__Canon addrspace(1)*
  store %"System.Collections.Generic.GenericEqualityComparer`1[System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.GenericEqualityComparer`1[System.__Canon]" addrspace(1)** %this
  store %System.__Canon addrspace(1)* %param1, %System.__Canon addrspace(1)** %arg1
  %0 = load %System.__Canon addrspace(1)*, %System.__Canon addrspace(1)** %arg1
  %1 = icmp ne %System.__Canon addrspace(1)* %0, null
  br i1 %1, label %3, label %2

; <label>:2                                       ; preds = %entry
  ret i32 0

; <label>:3                                       ; preds = %entry
  %4 = addrspacecast %System.__Canon addrspace(1)** %arg1 to %System.__Canon addrspace(1)* addrspace(1)*
  %5 = load %System.__Canon addrspace(1)*, %System.__Canon addrspace(1)* addrspace(1)* %4, align 8
  %6 = bitcast %System.__Canon addrspace(1)* %5 to i64 addrspace(1)*
  %7 = load i64, i64 addrspace(1)* %6
  %8 = add i64 %7, 64
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9
  %11 = add i64 %10, 16
  %12 = inttoptr i64 %11 to i64*
  %13 = load i64, i64* %12
  %14 = bitcast %System.__Canon addrspace(1)* %5 to %System.Object addrspace(1)*
  %15 = inttoptr i64 %13 to i32 (%System.Object addrspace(1)*)*
  %16 = call i32 %15(%System.Object addrspace(1)* %14)
  ret i32 %16
}

INFO:  jitting method String::GetHashCode using LLILCJit
Successfully read String.GetHashCode

define i32 @String.GetHashCode(%System.String addrspace(1)* %param0) {
entry:
  %this = alloca %System.String addrspace(1)*
  %loc0 = alloca i16*
  %loc1 = alloca i32
  %loc2 = alloca i32
  %loc3 = alloca i32
  %loc4 = alloca i16*
  %loc5 = alloca i32
  %loc6 = alloca %System.String addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %this
  %0 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 574)
  %1 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 2104
  %2 = addrspacecast i8 addrspace(1)* %1 to i8*
  %3 = load i8, i8* %2
  %4 = zext i8 %3 to i32
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %12, label %6

; <label>:6                                       ; preds = %entry
  %7 = load %System.String addrspace(1)*, %System.String addrspace(1)** %this
  %8 = load %System.String addrspace(1)*, %System.String addrspace(1)** %this
  %9 = getelementptr inbounds %System.String, %System.String addrspace(1)* %8, i32 0, i32 1
  %10 = load i32, i32 addrspace(1)* %9
  %11 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.String addrspace(1)*, i32, i64)*)(%System.String addrspace(1)* %7, i32 %10, i64 0)
  ret i32 %11

; <label>:12                                      ; preds = %entry
  %13 = load %System.String addrspace(1)*, %System.String addrspace(1)** %this
  store %System.String addrspace(1)* %13, %System.String addrspace(1)** %loc6
  %14 = load %System.String addrspace(1)*, %System.String addrspace(1)** %loc6
  %15 = ptrtoint %System.String addrspace(1)* %14 to i64
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %21, label %17

; <label>:17                                      ; preds = %12
  %18 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 ()*)()
  %19 = sext i32 %18 to i64
  %20 = add i64 %15, %19
  br label %21

; <label>:21                                      ; preds = %12, %17
  %22 = phi i64 [ %15, %12 ], [ %20, %17 ]
  %23 = inttoptr i64 %22 to i16*
  store i16* %23, i16** %loc0
  store i32 5381, i32* %loc1
  %24 = load i32, i32* %loc1
  store i32 %24, i32* %loc2
  %25 = load i16*, i16** %loc0
  store i16* %25, i16** %loc4
  br label %52

; <label>:26                                      ; preds = %52
  %27 = load i32, i32* %loc1
  %28 = shl i32 %27, 5
  %29 = load i32, i32* %loc1
  %30 = add i32 %28, %29
  %31 = load i32, i32* %loc3
  %32 = xor i32 %30, %31
  store i32 %32, i32* %loc1
  %33 = load i16*, i16** %loc4
  %34 = bitcast i16* %33 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 2
  %36 = bitcast i8* %35 to i16*
  %37 = load i16, i16* %36, align 8
  %38 = zext i16 %37 to i32
  store i32 %38, i32* %loc3
  %39 = load i32, i32* %loc3
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %58, label %41

; <label>:41                                      ; preds = %26
  %42 = load i32, i32* %loc2
  %43 = shl i32 %42, 5
  %44 = load i32, i32* %loc2
  %45 = add i32 %43, %44
  %46 = load i32, i32* %loc3
  %47 = xor i32 %45, %46
  store i32 %47, i32* %loc2
  %48 = load i16*, i16** %loc4
  %49 = bitcast i16* %48 to i8*
  %50 = getelementptr inbounds i8, i8* %49, i64 4
  %51 = bitcast i8* %50 to i16*
  store i16* %51, i16** %loc4
  br label %52

; <label>:52                                      ; preds = %21, %41
  %53 = phi i64 [ %22, %21 ], [ %53, %41 ]
  %54 = load i16*, i16** %loc4
  %55 = load i16, i16* %54, align 8
  %56 = zext i16 %55 to i32
  store i32 %56, i32* %loc3
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %26, label %58

; <label>:58                                      ; preds = %26, %52
  %59 = phi i64 [ %53, %52 ], [ %53, %26 ]
  %60 = load i32, i32* %loc1
  %61 = load i32, i32* %loc2
  %62 = mul i32 %61, 1566083941
  %63 = add i32 %60, %62
  store i32 %63, i32* %loc5
  br label %64

; <label>:64                                      ; preds = %58
  %65 = load i32, i32* %loc5
  ret i32 %65
}

INFO:  jitting method CultureInfo::InitUserDefaultUICulture using LLILCJit
Successfully read CultureInfo.InitUserDefaultUICulture

define %System.Globalization.CultureInfo addrspace(1)* @CultureInfo.InitUserDefaultUICulture() {
entry:
  %loc0 = alloca %System.String addrspace(1)*
  %loc1 = alloca %System.Globalization.CultureInfo addrspace(1)*
  %0 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* ()*)()
  store %System.String addrspace(1)* %0, %System.String addrspace(1)** %loc0
  %1 = load %System.String addrspace(1)*, %System.String addrspace(1)** %loc0
  %2 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* ()*)()
  %3 = bitcast %System.Globalization.CultureInfo addrspace(1)* %2 to i64 addrspace(1)*
  %4 = load i64, i64 addrspace(1)* %3
  %5 = add i64 %4, 64
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6
  %8 = add i64 %7, 40
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9
  %11 = inttoptr i64 %10 to %System.String addrspace(1)* (%System.Globalization.CultureInfo addrspace(1)*)*
  %12 = call %System.String addrspace(1)* %11(%System.Globalization.CultureInfo addrspace(1)* %2)
  %13 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %1, %System.String addrspace(1)* %12)
  %14 = zext i8 %13 to i32
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16

; <label>:16                                      ; preds = %entry
  %17 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* ()*)()
  ret %System.Globalization.CultureInfo addrspace(1)* %17

; <label>:18                                      ; preds = %entry
  %19 = load %System.String addrspace(1)*, %System.String addrspace(1)** %loc0
  %20 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* (%System.String addrspace(1)*, i8)*)(%System.String addrspace(1)* %19, i8 1)
  store %System.Globalization.CultureInfo addrspace(1)* %20, %System.Globalization.CultureInfo addrspace(1)** %loc1
  %21 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %loc1
  %22 = icmp ne %System.Globalization.CultureInfo addrspace(1)* %21, null
  br i1 %22, label %25, label %23

; <label>:23                                      ; preds = %18
  %24 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* ()*)()
  ret %System.Globalization.CultureInfo addrspace(1)* %24

; <label>:25                                      ; preds = %18
  %26 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %loc1
  %27 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %26, i32 0, i32 11
  store i8 1, i8 addrspace(1)* %27
  %28 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %loc1
  ret %System.Globalization.CultureInfo addrspace(1)* %28
}

INFO:  jitting method CultureInfo::GetUserDefaultUILanguage using LLILCJit
Failed to read CultureInfo.GetUserDefaultUILanguage[Return refany or value class]
INFO:  jitting method DomainNeutralILStubClass::IL_STUB_PInvoke using LLILCJit
Failed to read DomainNeutralILStubClass.IL_STUB_PInvoke[Struct parameter]
INFO:  jitting method CultureInfo::get_UserDefaultCulture using LLILCJit
Successfully read CultureInfo.get_UserDefaultCulture

define %System.Globalization.CultureInfo addrspace(1)* @CultureInfo.get_UserDefaultCulture() {
entry:
  %loc0 = alloca %System.Globalization.CultureInfo addrspace(1)*
  %0 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 979)
  %1 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 1712
  %2 = addrspacecast i8 addrspace(1)* %1 to %System.Globalization.CultureInfo addrspace(1)**
  %3 = load volatile %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %2
  store %System.Globalization.CultureInfo addrspace(1)* %3, %System.Globalization.CultureInfo addrspace(1)** %loc0
  %4 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %loc0
  %5 = icmp ne %System.Globalization.CultureInfo addrspace(1)* %4, null
  br i1 %5, label %14, label %6

; <label>:6                                       ; preds = %entry
  %7 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* ()*)()
  %8 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 979)
  %9 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 1712
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i8 addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)*)*)(i8 addrspace(1)* %9, %System.Globalization.CultureInfo addrspace(1)* %7)
  fence seq_cst
  %10 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* ()*)()
  store %System.Globalization.CultureInfo addrspace(1)* %10, %System.Globalization.CultureInfo addrspace(1)** %loc0
  %11 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %loc0
  %12 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 979)
  %13 = getelementptr inbounds i8, i8 addrspace(1)* %12, i64 1712
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i8 addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)*)*)(i8 addrspace(1)* %13, %System.Globalization.CultureInfo addrspace(1)* %11)
  fence seq_cst
  br label %14

; <label>:14                                      ; preds = %entry, %6
  %15 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %loc0
  ret %System.Globalization.CultureInfo addrspace(1)* %15
}

INFO:  jitting method CultureInfo::get_Name using LLILCJit
Successfully read CultureInfo.get_Name

define %System.String addrspace(1)* @CultureInfo.get_Name(%System.Globalization.CultureInfo addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureInfo addrspace(1)*
  store %System.Globalization.CultureInfo addrspace(1)* %param0, %System.Globalization.CultureInfo addrspace(1)** %this
  %0 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %0, i32 0, i32 8
  %2 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %System.String addrspace(1)* %2, null
  br i1 %3, label %20, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %6 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %7 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %6, i32 0, i32 6
  %8 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)* addrspace(1)* %7, align 8
  %NullCheck = icmp ne %System.Globalization.CultureData addrspace(1)* %8, null
  br i1 %NullCheck, label %9, label %ThrowNullRef

; <label>:9                                       ; preds = %4
  %10 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %8)
  %11 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %5, i32 0, i32 8
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %11, %System.String addrspace(1)* %10)
  %12 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %13 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %12, i32 0, i32 8
  %14 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %13, align 8
  %15 = icmp ne %System.String addrspace(1)* %14, null
  br i1 %15, label %20, label %16

; <label>:16                                      ; preds = %9
  %17 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %18 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %19 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %17, i32 0, i32 8
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %19, %System.String addrspace(1)* %18)
  br label %20

; <label>:20                                      ; preds = %entry, %9, %16
  %21 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %22 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %21, i32 0, i32 8
  %23 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %22, align 8
  ret %System.String addrspace(1)* %23

ThrowNullRef:                                     ; preds = %4
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method CultureData::get_SNAME using LLILCJit
Successfully read CultureData.get_SNAME

define %System.String addrspace(1)* @CultureData.get_SNAME(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 3
  %2 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %System.String addrspace(1)* %2, null
  br i1 %3, label %8, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %6 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %7 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %5, i32 0, i32 3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %7, %System.String addrspace(1)* %6)
  br label %8

; <label>:8                                       ; preds = %entry, %4
  %9 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %10 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %9, i32 0, i32 3
  %11 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %10, align 8
  ret %System.String addrspace(1)* %11
}

INFO:  jitting method String::EqualsHelper using LLILCJit
Successfully read String.EqualsHelper

define i8 @String.EqualsHelper(%System.String addrspace(1)* %param0, %System.String addrspace(1)* %param1) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  %loc0 = alloca i32
  %loc1 = alloca i16 addrspace(1)*
  %loc2 = alloca i16 addrspace(1)*
  %loc3 = alloca i16*
  %loc4 = alloca i16*
  %loc5 = alloca i8
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %1 = getelementptr inbounds %System.String, %System.String addrspace(1)* %0, i32 0, i32 1
  %2 = load i32, i32 addrspace(1)* %1
  store i32 %2, i32* %loc0
  %3 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %NullCheck = icmp ne %System.String addrspace(1)* %3, null
  br i1 %NullCheck, label %4, label %ThrowNullRef

; <label>:4                                       ; preds = %entry
  %5 = getelementptr inbounds %System.String, %System.String addrspace(1)* %3, i32 0, i32 2
  %6 = bitcast [0 x i16] addrspace(1)* %5 to i16 addrspace(1)*
  store i16 addrspace(1)* %6, i16 addrspace(1)** %loc1
  %7 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %NullCheck2 = icmp ne %System.String addrspace(1)* %7, null
  br i1 %NullCheck2, label %8, label %ThrowNullRef1

; <label>:8                                       ; preds = %4
  %9 = getelementptr inbounds %System.String, %System.String addrspace(1)* %7, i32 0, i32 2
  %10 = bitcast [0 x i16] addrspace(1)* %9 to i16 addrspace(1)*
  store i16 addrspace(1)* %10, i16 addrspace(1)** %loc2
  %11 = load i16 addrspace(1)*, i16 addrspace(1)** %loc1
  %12 = ptrtoint i16 addrspace(1)* %11 to i64
  %13 = inttoptr i64 %12 to i16*
  store i16* %13, i16** %loc3
  %14 = load i16 addrspace(1)*, i16 addrspace(1)** %loc2
  %15 = ptrtoint i16 addrspace(1)* %14 to i64
  %16 = inttoptr i64 %15 to i16*
  store i16* %16, i16** %loc4
  br label %63

; <label>:17                                      ; preds = %63
  %18 = load i16*, i16** %loc3
  %19 = bitcast i16* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = load i16*, i16** %loc4
  %22 = bitcast i16* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %20, %23
  br i1 %24, label %26, label %25

; <label>:25                                      ; preds = %17
  store i8 0, i8* %loc5
  br label %96

; <label>:26                                      ; preds = %17
  %27 = load i16*, i16** %loc3
  %28 = bitcast i16* %27 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 8
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = load i16*, i16** %loc4
  %33 = bitcast i16* %32 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 8
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %31, %36
  br i1 %37, label %39, label %38

; <label>:38                                      ; preds = %26
  store i8 0, i8* %loc5
  br label %96

; <label>:39                                      ; preds = %26
  %40 = load i16*, i16** %loc3
  %41 = bitcast i16* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 16
  %43 = bitcast i8* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = load i16*, i16** %loc4
  %46 = bitcast i16* %45 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 16
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %44, %49
  br i1 %50, label %52, label %51

; <label>:51                                      ; preds = %39
  store i8 0, i8* %loc5
  br label %96

; <label>:52                                      ; preds = %39
  %53 = load i16*, i16** %loc3
  %54 = bitcast i16* %53 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 24
  %56 = bitcast i8* %55 to i16*
  store i16* %56, i16** %loc3
  %57 = load i16*, i16** %loc4
  %58 = bitcast i16* %57 to i8*
  %59 = getelementptr inbounds i8, i8* %58, i64 24
  %60 = bitcast i8* %59 to i16*
  store i16* %60, i16** %loc4
  %61 = load i32, i32* %loc0
  %62 = sub i32 %61, 12
  store i32 %62, i32* %loc0
  br label %63

; <label>:63                                      ; preds = %8, %52
  %64 = load i32, i32* %loc0
  %65 = icmp sge i32 %64, 12
  br i1 %65, label %17, label %66

; <label>:66                                      ; preds = %63
  br label %86

; <label>:67                                      ; preds = %86
  %68 = load i16*, i16** %loc3
  %69 = bitcast i16* %68 to i32*
  %70 = load i32, i32* %69, align 8
  %71 = load i16*, i16** %loc4
  %72 = bitcast i16* %71 to i32*
  %73 = load i32, i32* %72, align 8
  %74 = icmp ne i32 %70, %73
  br i1 %74, label %89, label %75

; <label>:75                                      ; preds = %67
  %76 = load i16*, i16** %loc3
  %77 = bitcast i16* %76 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 4
  %79 = bitcast i8* %78 to i16*
  store i16* %79, i16** %loc3
  %80 = load i16*, i16** %loc4
  %81 = bitcast i16* %80 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 4
  %83 = bitcast i8* %82 to i16*
  store i16* %83, i16** %loc4
  %84 = load i32, i32* %loc0
  %85 = sub i32 %84, 2
  store i32 %85, i32* %loc0
  br label %86

; <label>:86                                      ; preds = %66, %75
  %87 = load i32, i32* %loc0
  %88 = icmp sgt i32 %87, 0
  br i1 %88, label %67, label %89

; <label>:89                                      ; preds = %67, %86
  %90 = load i32, i32* %loc0
  %91 = icmp sgt i32 %90, 0
  %92 = sext i1 %91 to i32
  %93 = icmp eq i32 %92, 0
  %94 = sext i1 %93 to i32
  %95 = trunc i32 %94 to i8
  store i8 %95, i8* %loc5
  br label %96

; <label>:96                                      ; preds = %25, %38, %51, %89
  %97 = load i8, i8* %loc5
  %98 = zext i8 %97 to i32
  %99 = trunc i32 %98 to i8
  ret i8 %99

ThrowNullRef:                                     ; preds = %entry
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef1:                                    ; preds = %4
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method CultureAwareComparer::.ctor using LLILCJit
Successfully read CultureAwareComparer..ctor

define void @CultureAwareComparer..ctor(%System.CultureAwareComparer addrspace(1)* %param0, %System.Globalization.CultureInfo addrspace(1)* %param1, i8 %param2) {
entry:
  %this = alloca %System.CultureAwareComparer addrspace(1)*
  %arg1 = alloca %System.Globalization.CultureInfo addrspace(1)*
  %arg2 = alloca i8
  store %System.CultureAwareComparer addrspace(1)* %param0, %System.CultureAwareComparer addrspace(1)** %this
  store %System.Globalization.CultureInfo addrspace(1)* %param1, %System.Globalization.CultureInfo addrspace(1)** %arg1
  store i8 %param2, i8* %arg2
  %0 = load %System.CultureAwareComparer addrspace(1)*, %System.CultureAwareComparer addrspace(1)** %this
  %1 = bitcast %System.CultureAwareComparer addrspace(1)* %0 to %System.StringComparer addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.StringComparer addrspace(1)*)*)(%System.StringComparer addrspace(1)* %1)
  %2 = load %System.CultureAwareComparer addrspace(1)*, %System.CultureAwareComparer addrspace(1)** %this
  %3 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %arg1
  %4 = bitcast %System.Globalization.CultureInfo addrspace(1)* %3 to i64 addrspace(1)*
  %5 = load i64, i64 addrspace(1)* %4
  %6 = add i64 %5, 72
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7
  %9 = add i64 %8, 16
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10
  %12 = inttoptr i64 %11 to %System.Globalization.CompareInfo addrspace(1)* (%System.Globalization.CultureInfo addrspace(1)*)*
  %13 = call %System.Globalization.CompareInfo addrspace(1)* %12(%System.Globalization.CultureInfo addrspace(1)* %3)
  %14 = getelementptr inbounds %System.CultureAwareComparer, %System.CultureAwareComparer addrspace(1)* %2, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Globalization.CompareInfo addrspace(1)* addrspace(1)*, %System.Globalization.CompareInfo addrspace(1)*)*)(%System.Globalization.CompareInfo addrspace(1)* addrspace(1)* %14, %System.Globalization.CompareInfo addrspace(1)* %13)
  %15 = load %System.CultureAwareComparer addrspace(1)*, %System.CultureAwareComparer addrspace(1)** %this
  %16 = load i8, i8* %arg2
  %17 = zext i8 %16 to i32
  %18 = trunc i32 %17 to i8
  %19 = getelementptr inbounds %System.CultureAwareComparer, %System.CultureAwareComparer addrspace(1)* %15, i32 0, i32 2
  store i8 %18, i8 addrspace(1)* %19
  ret void
}

INFO:  jitting method StringComparer::.ctor using LLILCJit
Successfully read StringComparer..ctor

define void @StringComparer..ctor(%System.StringComparer addrspace(1)* %param0) {
entry:
  %this = alloca %System.StringComparer addrspace(1)*
  store %System.StringComparer addrspace(1)* %param0, %System.StringComparer addrspace(1)** %this
  %0 = load %System.StringComparer addrspace(1)*, %System.StringComparer addrspace(1)** %this
  %1 = bitcast %System.StringComparer addrspace(1)* %0 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %1)
  ret void
}

INFO:  jitting method CultureInfo::get_CompareInfo using LLILCJit
Successfully read CultureInfo.get_CompareInfo

define %System.Globalization.CompareInfo addrspace(1)* @CultureInfo.get_CompareInfo(%System.Globalization.CultureInfo addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureInfo addrspace(1)*
  %loc0 = alloca %System.Globalization.CompareInfo addrspace(1)*
  store %System.Globalization.CultureInfo addrspace(1)* %param0, %System.Globalization.CultureInfo addrspace(1)** %this
  %0 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %0, i32 0, i32 1
  %2 = load %System.Globalization.CompareInfo addrspace(1)*, %System.Globalization.CompareInfo addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %System.Globalization.CompareInfo addrspace(1)* %2, null
  br i1 %3, label %38, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %6 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.Globalization.CultureInfo addrspace(1)*)*)(%System.Globalization.CultureInfo addrspace(1)* %5)
  %7 = zext i8 %6 to i32
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %12, label %9

; <label>:9                                       ; preds = %4
  %10 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %11 = call %System.Globalization.CompareInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CompareInfo addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Globalization.CompareInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)*)*)(%System.Globalization.CompareInfo addrspace(1)* %11, %System.Globalization.CultureInfo addrspace(1)* %10)
  br label %27

; <label>:12                                      ; preds = %4
  %13 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %14 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %13, i32 0, i32 7
  %15 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %14, align 8
  %16 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %15)
  %17 = bitcast %System.Globalization.CultureInfo addrspace(1)* %16 to i64 addrspace(1)*
  %18 = load i64, i64 addrspace(1)* %17
  %19 = add i64 %18, 72
  %20 = inttoptr i64 %19 to i64*
  %21 = load i64, i64* %20
  %22 = add i64 %21, 16
  %23 = inttoptr i64 %22 to i64*
  %24 = load i64, i64* %23
  %25 = inttoptr i64 %24 to %System.Globalization.CompareInfo addrspace(1)* (%System.Globalization.CultureInfo addrspace(1)*)*
  %26 = call %System.Globalization.CompareInfo addrspace(1)* %25(%System.Globalization.CultureInfo addrspace(1)* %16)
  br label %27

; <label>:27                                      ; preds = %9, %12
  %28 = phi %System.Globalization.CompareInfo addrspace(1)* [ %11, %9 ], [ %26, %12 ]
  store %System.Globalization.CompareInfo addrspace(1)* %28, %System.Globalization.CompareInfo addrspace(1)** %loc0
  %29 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 ()*)()
  %30 = zext i8 %29 to i32
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %36, label %32

; <label>:32                                      ; preds = %27
  %33 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %34 = load %System.Globalization.CompareInfo addrspace(1)*, %System.Globalization.CompareInfo addrspace(1)** %loc0
  %35 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %33, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Globalization.CompareInfo addrspace(1)* addrspace(1)*, %System.Globalization.CompareInfo addrspace(1)*)*)(%System.Globalization.CompareInfo addrspace(1)* addrspace(1)* %35, %System.Globalization.CompareInfo addrspace(1)* %34)
  br label %38

; <label>:36                                      ; preds = %27
  %37 = load %System.Globalization.CompareInfo addrspace(1)*, %System.Globalization.CompareInfo addrspace(1)** %loc0
  ret %System.Globalization.CompareInfo addrspace(1)* %37

; <label>:38                                      ; preds = %entry, %32
  %39 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %40 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %39, i32 0, i32 1
  %41 = load %System.Globalization.CompareInfo addrspace(1)*, %System.Globalization.CompareInfo addrspace(1)* addrspace(1)* %40, align 8
  ret %System.Globalization.CompareInfo addrspace(1)* %41
}

INFO:  jitting method CultureInfo::get_UseUserOverride using LLILCJit
Successfully read CultureInfo.get_UseUserOverride

define i8 @CultureInfo.get_UseUserOverride(%System.Globalization.CultureInfo addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureInfo addrspace(1)*
  store %System.Globalization.CultureInfo addrspace(1)* %param0, %System.Globalization.CultureInfo addrspace(1)** %this
  %0 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %0, i32 0, i32 6
  %2 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)* addrspace(1)* %1, align 8
  %NullCheck = icmp ne %System.Globalization.CultureData addrspace(1)* %2, null
  br i1 %NullCheck, label %3, label %ThrowNullRef

; <label>:3                                       ; preds = %entry
  %4 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %2)
  %5 = zext i8 %4 to i32
  %6 = trunc i32 %5 to i8
  ret i8 %6

ThrowNullRef:                                     ; preds = %entry
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method CultureData::get_UseUserOverride using LLILCJit
Successfully read CultureData.get_UseUserOverride

define i8 @CultureData.get_UseUserOverride(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 62
  %2 = load i8, i8 addrspace(1)* %1, align 8
  %3 = zext i8 %2 to i32
  %4 = trunc i32 %3 to i8
  ret i8 %4
}

INFO:  jitting method CompareInfo::.ctor using LLILCJit
Successfully read CompareInfo..ctor

define void @CompareInfo..ctor(%System.Globalization.CompareInfo addrspace(1)* %param0, %System.Globalization.CultureInfo addrspace(1)* %param1) {
entry:
  %this = alloca %System.Globalization.CompareInfo addrspace(1)*
  %arg1 = alloca %System.Globalization.CultureInfo addrspace(1)*
  %loc0 = alloca i64
  store %System.Globalization.CompareInfo addrspace(1)* %param0, %System.Globalization.CompareInfo addrspace(1)** %this
  store %System.Globalization.CultureInfo addrspace(1)* %param1, %System.Globalization.CultureInfo addrspace(1)** %arg1
  %0 = load %System.Globalization.CompareInfo addrspace(1)*, %System.Globalization.CompareInfo addrspace(1)** %this
  %1 = bitcast %System.Globalization.CompareInfo addrspace(1)* %0 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %1)
  %2 = load %System.Globalization.CompareInfo addrspace(1)*, %System.Globalization.CompareInfo addrspace(1)** %this
  %3 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %arg1
  %4 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %3, i32 0, i32 7
  %5 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %4, align 8
  %6 = getelementptr inbounds %System.Globalization.CompareInfo, %System.Globalization.CompareInfo addrspace(1)* %2, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %6, %System.String addrspace(1)* %5)
  %7 = load %System.Globalization.CompareInfo addrspace(1)*, %System.Globalization.CompareInfo addrspace(1)** %this
  %8 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %arg1
  %NullCheck = icmp ne %System.Globalization.CultureInfo addrspace(1)* %8, null
  br i1 %NullCheck, label %9, label %ThrowNullRef

; <label>:9                                       ; preds = %entry
  %10 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureInfo addrspace(1)*)*)(%System.Globalization.CultureInfo addrspace(1)* %8)
  %11 = getelementptr inbounds %System.Globalization.CompareInfo, %System.Globalization.CompareInfo addrspace(1)* %7, i32 0, i32 2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %11, %System.String addrspace(1)* %10)
  %12 = load %System.Globalization.CompareInfo addrspace(1)*, %System.Globalization.CompareInfo addrspace(1)** %this
  %13 = load %System.Globalization.CompareInfo addrspace(1)*, %System.Globalization.CompareInfo addrspace(1)** %this
  %14 = getelementptr inbounds %System.Globalization.CompareInfo, %System.Globalization.CompareInfo addrspace(1)* %13, i32 0, i32 2
  %15 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %14, align 8
  %16 = addrspacecast i64* %loc0 to i64 addrspace(1)*
  %17 = call i64 inttoptr (i64 NORMALIZED_ADDRESS to i64 (%System.String addrspace(1)*, i64 addrspace(1)*)*)(%System.String addrspace(1)* %15, i64 addrspace(1)* %16)
  %18 = getelementptr inbounds %System.Globalization.CompareInfo, %System.Globalization.CompareInfo addrspace(1)* %12, i32 0, i32 3
  store i64 %17, i64 addrspace(1)* %18
  %19 = load %System.Globalization.CompareInfo addrspace(1)*, %System.Globalization.CompareInfo addrspace(1)** %this
  %20 = load i64, i64* %loc0
  %21 = getelementptr inbounds %System.Globalization.CompareInfo, %System.Globalization.CompareInfo addrspace(1)* %19, i32 0, i32 4
  store i64 %20, i64 addrspace(1)* %21
  ret void

ThrowNullRef:                                     ; preds = %entry
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method CultureInfo::get_SortName using LLILCJit
Successfully read CultureInfo.get_SortName

define %System.String addrspace(1)* @CultureInfo.get_SortName(%System.Globalization.CultureInfo addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureInfo addrspace(1)*
  store %System.Globalization.CultureInfo addrspace(1)* %param0, %System.Globalization.CultureInfo addrspace(1)** %this
  %0 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %0, i32 0, i32 9
  %2 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %System.String addrspace(1)* %2, null
  br i1 %3, label %12, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %6 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %7 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %6, i32 0, i32 6
  %8 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)* addrspace(1)* %7, align 8
  %NullCheck = icmp ne %System.Globalization.CultureData addrspace(1)* %8, null
  br i1 %NullCheck, label %9, label %ThrowNullRef

; <label>:9                                       ; preds = %4
  %10 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %8)
  %11 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %5, i32 0, i32 9
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %11, %System.String addrspace(1)* %10)
  br label %12

; <label>:12                                      ; preds = %entry, %9
  %13 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %14 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %13, i32 0, i32 9
  %15 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %14, align 8
  ret %System.String addrspace(1)* %15

ThrowNullRef:                                     ; preds = %4
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method CultureData::get_SCOMPAREINFO using LLILCJit
Successfully read CultureData.get_SCOMPAREINFO

define %System.String addrspace(1)* @CultureData.get_SCOMPAREINFO(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 2
  %2 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %1, align 8
  ret %System.String addrspace(1)* %2
}

INFO:  jitting method CompareInfo::InternalInitSortHandle using LLILCJit
Successfully read CompareInfo.InternalInitSortHandle

define i64 @CompareInfo.InternalInitSortHandle(%System.String addrspace(1)* %param0, i64 addrspace(1)* %param1) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  %arg1 = alloca i64 addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  store i64 addrspace(1)* %param1, i64 addrspace(1)** %arg1
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %1 = load i64 addrspace(1)*, i64 addrspace(1)** %arg1
  %2 = call i64 inttoptr (i64 NORMALIZED_ADDRESS to i64 (%System.String addrspace(1)*, i64 addrspace(1)*)*)(%System.String addrspace(1)* %0, i64 addrspace(1)* %1)
  ret i64 %2
}

INFO:  jitting method DomainNeutralILStubClass::IL_STUB_PInvoke using LLILCJit
Failed to read DomainNeutralILStubClass.IL_STUB_PInvoke[publish secret param]
INFO:  jitting method CompatibilitySwitches::get_IsCompatibilityBehaviorDefined using LLILCJit
Successfully read CompatibilitySwitches.get_IsCompatibilityBehaviorDefined

define i8 @CompatibilitySwitches.get_IsCompatibilityBehaviorDefined() {
entry:
  %0 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 154)
  %1 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 1986
  %2 = addrspacecast i8 addrspace(1)* %1 to i8*
  %3 = load i8, i8* %2
  %4 = zext i8 %3 to i32
  %5 = trunc i32 %4 to i8
  ret i8 %5
}

INFO:  jitting method OrdinalComparer::.ctor using LLILCJit
Successfully read OrdinalComparer..ctor

define void @OrdinalComparer..ctor(%System.OrdinalComparer addrspace(1)* %param0, i8 %param1) {
entry:
  %this = alloca %System.OrdinalComparer addrspace(1)*
  %arg1 = alloca i8
  store %System.OrdinalComparer addrspace(1)* %param0, %System.OrdinalComparer addrspace(1)** %this
  store i8 %param1, i8* %arg1
  %0 = load %System.OrdinalComparer addrspace(1)*, %System.OrdinalComparer addrspace(1)** %this
  %1 = bitcast %System.OrdinalComparer addrspace(1)* %0 to %System.StringComparer addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.StringComparer addrspace(1)*)*)(%System.StringComparer addrspace(1)* %1)
  %2 = load %System.OrdinalComparer addrspace(1)*, %System.OrdinalComparer addrspace(1)** %this
  %3 = load i8, i8* %arg1
  %4 = zext i8 %3 to i32
  %5 = trunc i32 %4 to i8
  %6 = getelementptr inbounds %System.OrdinalComparer, %System.OrdinalComparer addrspace(1)* %2, i32 0, i32 1
  store i8 %5, i8 addrspace(1)* %6
  ret void
}

INFO:  jitting method OrdinalComparer::Equals using LLILCJit
Successfully read OrdinalComparer.Equals

define i8 @OrdinalComparer.Equals(%System.OrdinalComparer addrspace(1)* %param0, %System.String addrspace(1)* %param1, %System.String addrspace(1)* %param2) {
entry:
  %this = alloca %System.OrdinalComparer addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  %arg2 = alloca %System.String addrspace(1)*
  store %System.OrdinalComparer addrspace(1)* %param0, %System.OrdinalComparer addrspace(1)** %this
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  store %System.String addrspace(1)* %param2, %System.String addrspace(1)** %arg2
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %1 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg2
  %2 = bitcast %System.String addrspace(1)* %0 to %System.Object addrspace(1)*
  %3 = bitcast %System.String addrspace(1)* %1 to %System.Object addrspace(1)*
  %4 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.Object addrspace(1)*, %System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %2, %System.Object addrspace(1)* %3)
  %5 = zext i8 %4 to i32
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

; <label>:7                                       ; preds = %entry
  ret i8 1

; <label>:8                                       ; preds = %entry
  %9 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %10 = icmp eq %System.String addrspace(1)* %9, null
  br i1 %10, label %14, label %11

; <label>:11                                      ; preds = %8
  %12 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg2
  %13 = icmp ne %System.String addrspace(1)* %12, null
  br i1 %13, label %15, label %14

; <label>:14                                      ; preds = %8, %11
  ret i8 0

; <label>:15                                      ; preds = %11
  %16 = load %System.OrdinalComparer addrspace(1)*, %System.OrdinalComparer addrspace(1)** %this
  %17 = getelementptr inbounds %System.OrdinalComparer, %System.OrdinalComparer addrspace(1)* %16, i32 0, i32 1
  %18 = load i8, i8 addrspace(1)* %17, align 8
  %19 = zext i8 %18 to i32
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %37, label %21

; <label>:21                                      ; preds = %15
  %22 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %23 = getelementptr inbounds %System.String, %System.String addrspace(1)* %22, i32 0, i32 1
  %24 = load i32, i32 addrspace(1)* %23
  %25 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg2
  %26 = getelementptr inbounds %System.String, %System.String addrspace(1)* %25, i32 0, i32 1
  %27 = load i32, i32 addrspace(1)* %26
  %28 = icmp eq i32 %24, %27
  br i1 %28, label %30, label %29

; <label>:29                                      ; preds = %21
  ret i8 0

; <label>:30                                      ; preds = %21
  %31 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %32 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg2
  %33 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.String addrspace(1)*, %System.String addrspace(1)*, i32)*)(%System.String addrspace(1)* %31, %System.String addrspace(1)* %32, i32 5)
  %34 = icmp eq i32 %33, 0
  %35 = sext i1 %34 to i32
  %36 = trunc i32 %35 to i8
  ret i8 %36

; <label>:37                                      ; preds = %15
  %38 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %39 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg2
  %NullCheck = icmp ne %System.String addrspace(1)* %38, null
  br i1 %NullCheck, label %40, label %ThrowNullRef

; <label>:40                                      ; preds = %37
  %41 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %38, %System.String addrspace(1)* %39)
  %42 = zext i8 %41 to i32
  %43 = trunc i32 %42 to i8
  ret i8 %43

ThrowNullRef:                                     ; preds = %37
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method Object::ReferenceEquals using LLILCJit
Successfully read Object.ReferenceEquals

define i8 @Object.ReferenceEquals(%System.Object addrspace(1)* %param0, %System.Object addrspace(1)* %param1) {
entry:
  %arg0 = alloca %System.Object addrspace(1)*
  %arg1 = alloca %System.Object addrspace(1)*
  store %System.Object addrspace(1)* %param0, %System.Object addrspace(1)** %arg0
  store %System.Object addrspace(1)* %param1, %System.Object addrspace(1)** %arg1
  %0 = load %System.Object addrspace(1)*, %System.Object addrspace(1)** %arg0
  %1 = load %System.Object addrspace(1)*, %System.Object addrspace(1)** %arg1
  %2 = icmp eq %System.Object addrspace(1)* %0, %1
  %3 = sext i1 %2 to i32
  %4 = trunc i32 %3 to i8
  ret i8 %4
}

INFO:  jitting method Enumerator::MoveNextRare using LLILCJit
Successfully read Enumerator.MoveNextRare

define i8 @Enumerator.MoveNextRare(%"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)* %param0, %System.RuntimeTypeHandle* %param1) {
entry:
  %this = alloca %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)*
  %"$TypeArg" = alloca %System.RuntimeTypeHandle*
  store %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)** %this
  store %System.RuntimeTypeHandle* %param1, %System.RuntimeTypeHandle** %"$TypeArg"
  %0 = load %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)*, %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)** %this
  %1 = getelementptr inbounds %"System.Collections.Generic.List`1+Enumerator[System.__Canon]", %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)* %0, i32 0, i32 3
  %2 = load i32, i32 addrspace(1)* %1, align 8
  %3 = load %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)*, %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)** %this
  %4 = getelementptr inbounds %"System.Collections.Generic.List`1+Enumerator[System.__Canon]", %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)* %3, i32 0, i32 0
  %5 = load %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)*, %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)* addrspace(1)* %4, align 8
  %6 = getelementptr inbounds %"System.Collections.Generic.List`1[System.__Canon]", %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)* %5, i32 0, i32 4
  %7 = load i32, i32 addrspace(1)* %6, align 8
  %8 = icmp eq i32 %2, %7
  br i1 %8, label %10, label %9

; <label>:9                                       ; preds = %entry
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i32)*)(i32 32)
  br label %10

; <label>:10                                      ; preds = %entry, %9
  %11 = load %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)*, %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)** %this
  %12 = load %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)*, %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)** %this
  %13 = getelementptr inbounds %"System.Collections.Generic.List`1+Enumerator[System.__Canon]", %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)* %12, i32 0, i32 0
  %14 = load %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)*, %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)* addrspace(1)* %13, align 8
  %15 = getelementptr inbounds %"System.Collections.Generic.List`1[System.__Canon]", %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)* %14, i32 0, i32 3
  %16 = load i32, i32 addrspace(1)* %15, align 8
  %17 = add i32 %16, 1
  %18 = getelementptr inbounds %"System.Collections.Generic.List`1+Enumerator[System.__Canon]", %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)* %11, i32 0, i32 2
  store i32 %17, i32 addrspace(1)* %18
  %19 = load %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)*, %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)** %this
  %NullCheck = icmp ne %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)* %19, null
  br i1 %NullCheck, label %20, label %ThrowNullRef

; <label>:20                                      ; preds = %10
  %21 = getelementptr inbounds %"System.Collections.Generic.List`1+Enumerator[System.__Canon]", %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)* %19, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.__Canon addrspace(1)* addrspace(1)*, i32, i32)*)(%System.__Canon addrspace(1)* addrspace(1)* %21, i32 0, i32 8)
  ret i8 0

ThrowNullRef:                                     ; preds = %10
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method Enumerator::Dispose using LLILCJit
Successfully read Enumerator.Dispose

define void @Enumerator.Dispose(%"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)* %param0, %System.RuntimeTypeHandle* %param1) {
entry:
  %this = alloca %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)*
  %"$TypeArg" = alloca %System.RuntimeTypeHandle*
  store %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)** %this
  store %System.RuntimeTypeHandle* %param1, %System.RuntimeTypeHandle** %"$TypeArg"
  ret void
}

INFO:  jitting method AppDomain::Setup using LLILCJit
Failed to read AppDomain.Setup[loadElem]
INFO:  jitting method Thread::GetDomain using LLILCJit
Successfully read Thread.GetDomain

define %System.AppDomain addrspace(1)* @Thread.GetDomain() {
entry:
  %loc0 = alloca %System.AppDomain addrspace(1)*
  %0 = call %System.AppDomain addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.AppDomain addrspace(1)* ()*)()
  store %System.AppDomain addrspace(1)* %0, %System.AppDomain addrspace(1)** %loc0
  %1 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %loc0
  %2 = icmp ne %System.AppDomain addrspace(1)* %1, null
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %entry
  %4 = call %System.AppDomain addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.AppDomain addrspace(1)* ()*)()
  store %System.AppDomain addrspace(1)* %4, %System.AppDomain addrspace(1)** %loc0
  br label %5

; <label>:5                                       ; preds = %entry, %3
  %6 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %loc0
  ret %System.AppDomain addrspace(1)* %6
}

INFO:  jitting method AppDomainSetup::GetConfigurationBytes using LLILCJit
Successfully read AppDomainSetup.GetConfigurationBytes

define %"System.Byte[]" addrspace(1)* @AppDomainSetup.GetConfigurationBytes(%System.AppDomainSetup addrspace(1)* %param0) {
entry:
  %this = alloca %System.AppDomainSetup addrspace(1)*
  store %System.AppDomainSetup addrspace(1)* %param0, %System.AppDomainSetup addrspace(1)** %this
  %0 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %this
  %1 = getelementptr inbounds %System.AppDomainSetup, %System.AppDomainSetup addrspace(1)* %0, i32 0, i32 6
  %2 = load %"System.Byte[]" addrspace(1)*, %"System.Byte[]" addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %"System.Byte[]" addrspace(1)* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %entry
  ret %"System.Byte[]" addrspace(1)* null

; <label>:5                                       ; preds = %entry
  %6 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %this
  %7 = getelementptr inbounds %System.AppDomainSetup, %System.AppDomainSetup addrspace(1)* %6, i32 0, i32 6
  %8 = load %"System.Byte[]" addrspace(1)*, %"System.Byte[]" addrspace(1)* addrspace(1)* %7, align 8
  %NullCheck = icmp ne %"System.Byte[]" addrspace(1)* %8, null
  br i1 %NullCheck, label %9, label %ThrowNullRef

; <label>:9                                       ; preds = %5
  %10 = bitcast %"System.Byte[]" addrspace(1)* %8 to %System.Array addrspace(1)*
  %11 = call %System.Object addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Object addrspace(1)* (%System.Array addrspace(1)*)*)(%System.Array addrspace(1)* %10)
  %12 = call %"System.Byte[]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Byte[]" addrspace(1)* (i64, %System.Object addrspace(1)*)*)(i64 NORMALIZED_ADDRESS, %System.Object addrspace(1)* %11)
  ret %"System.Byte[]" addrspace(1)* %12

ThrowNullRef:                                     ; preds = %5
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method KeyCollection::.ctor using LLILCJit
Successfully read KeyCollection..ctor

define void @KeyCollection..ctor(%"System.Collections.Generic.Dictionary`2+KeyCollection[System.__Canon,System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %param1) {
entry:
  %this = alloca %"System.Collections.Generic.Dictionary`2+KeyCollection[System.__Canon,System.__Canon]" addrspace(1)*
  %arg1 = alloca %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)*
  store %"System.Collections.Generic.Dictionary`2+KeyCollection[System.__Canon,System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.Dictionary`2+KeyCollection[System.__Canon,System.__Canon]" addrspace(1)** %this
  store %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %param1, %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)** %arg1
  %0 = load %"System.Collections.Generic.Dictionary`2+KeyCollection[System.__Canon,System.__Canon]" addrspace(1)*, %"System.Collections.Generic.Dictionary`2+KeyCollection[System.__Canon,System.__Canon]" addrspace(1)** %this
  %1 = bitcast %"System.Collections.Generic.Dictionary`2+KeyCollection[System.__Canon,System.__Canon]" addrspace(1)* %0 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %1)
  %2 = load %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)*, %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)** %arg1
  %3 = icmp ne %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %entry
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i32)*)(i32 1)
  br label %5

; <label>:5                                       ; preds = %entry, %4
  %6 = load %"System.Collections.Generic.Dictionary`2+KeyCollection[System.__Canon,System.__Canon]" addrspace(1)*, %"System.Collections.Generic.Dictionary`2+KeyCollection[System.__Canon,System.__Canon]" addrspace(1)** %this
  %7 = load %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)*, %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)** %arg1
  %8 = getelementptr inbounds %"System.Collections.Generic.Dictionary`2+KeyCollection[System.__Canon,System.__Canon]", %"System.Collections.Generic.Dictionary`2+KeyCollection[System.__Canon,System.__Canon]" addrspace(1)* %6, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* addrspace(1)*, %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)*)*)(%"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* addrspace(1)* %8, %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %7)
  ret void
}

INFO:  jitting method KeyCollection::System.Collections.Generic.IEnumerable<TKey>.GetEnumerator using LLILCJit
Failed to read KeyCollection.System.Collections.Generic.IEnumerable<TKey>.GetEnumerator[Call HasTypeArg]
INFO:  jitting method Enumerator::MoveNext using LLILCJit
Failed to read Enumerator.MoveNext[loadElemA]
INFO:  jitting method Enumerator::get_Current using LLILCJit
Successfully read Enumerator.get_Current

define %System.__Canon addrspace(1)* @Enumerator.get_Current(%"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]" addrspace(1)* %param0, %System.RuntimeTypeHandle* %param1) {
entry:
  %this = alloca %"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]" addrspace(1)*
  %"$TypeArg" = alloca %System.RuntimeTypeHandle*
  store %"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]" addrspace(1)** %this
  store %System.RuntimeTypeHandle* %param1, %System.RuntimeTypeHandle** %"$TypeArg"
  %0 = load %"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]" addrspace(1)*, %"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]" addrspace(1)** %this
  %1 = getelementptr inbounds %"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]", %"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]" addrspace(1)* %0, i32 0, i32 1
  %2 = load %System.__Canon addrspace(1)*, %System.__Canon addrspace(1)* addrspace(1)* %1, align 8
  ret %System.__Canon addrspace(1)* %2
}

INFO:  jitting method Enumerator::Dispose using LLILCJit
Successfully read Enumerator.Dispose

define void @Enumerator.Dispose(%"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]" addrspace(1)* %param0, %System.RuntimeTypeHandle* %param1) {
entry:
  %this = alloca %"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]" addrspace(1)*
  %"$TypeArg" = alloca %System.RuntimeTypeHandle*
  store %"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]" addrspace(1)** %this
  store %System.RuntimeTypeHandle* %param1, %System.RuntimeTypeHandle** %"$TypeArg"
  ret void
}

INFO:  jitting method AppDomainSetup::get_TargetFrameworkName using LLILCJit
Failed to read AppDomainSetup.get_TargetFrameworkName[convertHandle]
INFO:  jitting method Path::.cctor using LLILCJit
Failed to read Path..cctor[convertHandle]
INFO:  jitting method String::SplitInternal using LLILCJit
Failed to read String.SplitInternal[storeElem]
INFO:  jitting method String::MakeSeparatorList using LLILCJit
Failed to read String.MakeSeparatorList[loadElemA]
INFO:  jitting method String::InternalSplitKeepEmptyEntries using LLILCJit
Failed to read String.InternalSplitKeepEmptyEntries[loadElem]
INFO:  jitting method Path::IsRelative using LLILCJit
Successfully read Path.IsRelative

define i8 @Path.IsRelative(%System.String addrspace(1)* %param0) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %1 = getelementptr inbounds %System.String, %System.String addrspace(1)* %0, i32 0, i32 1
  %2 = load i32, i32 addrspace(1)* %1
  %3 = icmp slt i32 %2, 3
  br i1 %3, label %50, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %6 = getelementptr inbounds %System.String, %System.String addrspace(1)* %5, i32 0, i32 2, i32 1
  %7 = load i16, i16 addrspace(1)* %6
  %8 = zext i16 %7 to i32
  %9 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 1421)
  %10 = getelementptr inbounds i8, i8 addrspace(1)* %9, i64 2380
  %11 = addrspacecast i8 addrspace(1)* %10 to i16*
  %12 = load i16, i16* %11
  %13 = zext i16 %12 to i32
  %14 = icmp ne i32 %8, %13
  br i1 %14, label %50, label %15

; <label>:15                                      ; preds = %4
  %16 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %17 = getelementptr inbounds %System.String, %System.String addrspace(1)* %16, i32 0, i32 2, i32 2
  %18 = load i16, i16 addrspace(1)* %17
  %19 = zext i16 %18 to i32
  %20 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 1421)
  %21 = getelementptr inbounds i8, i8 addrspace(1)* %20, i64 2376
  %22 = addrspacecast i8 addrspace(1)* %21 to i16*
  %23 = load i16, i16* %22
  %24 = zext i16 %23 to i32
  %25 = icmp ne i32 %19, %24
  br i1 %25, label %50, label %26

; <label>:26                                      ; preds = %15
  %27 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %28 = getelementptr inbounds %System.String, %System.String addrspace(1)* %27, i32 0, i32 2, i32 0
  %29 = load i16, i16 addrspace(1)* %28
  %30 = zext i16 %29 to i32
  %31 = icmp slt i32 %30, 97
  br i1 %31, label %38, label %32

; <label>:32                                      ; preds = %26
  %33 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %34 = getelementptr inbounds %System.String, %System.String addrspace(1)* %33, i32 0, i32 2, i32 0
  %35 = load i16, i16 addrspace(1)* %34
  %36 = zext i16 %35 to i32
  %37 = icmp sle i32 %36, 122
  br i1 %37, label %67, label %38

; <label>:38                                      ; preds = %26, %32
  %39 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %40 = getelementptr inbounds %System.String, %System.String addrspace(1)* %39, i32 0, i32 2, i32 0
  %41 = load i16, i16 addrspace(1)* %40
  %42 = zext i16 %41 to i32
  %43 = icmp slt i32 %42, 65
  br i1 %43, label %50, label %44

; <label>:44                                      ; preds = %38
  %45 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %46 = getelementptr inbounds %System.String, %System.String addrspace(1)* %45, i32 0, i32 2, i32 0
  %47 = load i16, i16 addrspace(1)* %46
  %48 = zext i16 %47 to i32
  %49 = icmp sle i32 %48, 90
  br i1 %49, label %67, label %50

; <label>:50                                      ; preds = %entry, %4, %15, %38, %44
  %51 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %52 = getelementptr inbounds %System.String, %System.String addrspace(1)* %51, i32 0, i32 1
  %53 = load i32, i32 addrspace(1)* %52
  %54 = icmp slt i32 %53, 2
  br i1 %54, label %68, label %55

; <label>:55                                      ; preds = %50
  %56 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %57 = getelementptr inbounds %System.String, %System.String addrspace(1)* %56, i32 0, i32 2, i32 0
  %58 = load i16, i16 addrspace(1)* %57
  %59 = zext i16 %58 to i32
  %60 = icmp ne i32 %59, 92
  br i1 %60, label %68, label %61

; <label>:61                                      ; preds = %55
  %62 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %63 = getelementptr inbounds %System.String, %System.String addrspace(1)* %62, i32 0, i32 2, i32 1
  %64 = load i16, i16 addrspace(1)* %63
  %65 = zext i16 %64 to i32
  %66 = icmp ne i32 %65, 92
  br i1 %66, label %68, label %67

; <label>:67                                      ; preds = %32, %44, %61
  ret i8 0

; <label>:68                                      ; preds = %50, %55, %61
  ret i8 1
}

INFO:  jitting method Path::NormalizePath using LLILCJit
Failed to read Path.NormalizePath[entryLabel]
INFO:  jitting method String::TrimHelper using LLILCJit
Failed to read String.TrimHelper[loadElem]
INFO:  jitting method String::CreateTrimmedString using LLILCJit
Successfully read String.CreateTrimmedString

define %System.String addrspace(1)* @String.CreateTrimmedString(%System.String addrspace(1)* %param0, i32 %param1, i32 %param2) {
entry:
  %this = alloca %System.String addrspace(1)*
  %arg1 = alloca i32
  %arg2 = alloca i32
  %loc0 = alloca i32
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %this
  store i32 %param1, i32* %arg1
  store i32 %param2, i32* %arg2
  %0 = load i32, i32* %arg2
  %1 = load i32, i32* %arg1
  %2 = sub i32 %0, %1
  %3 = add i32 %2, 1
  store i32 %3, i32* %loc0
  %4 = load i32, i32* %loc0
  %5 = load %System.String addrspace(1)*, %System.String addrspace(1)** %this
  %6 = getelementptr inbounds %System.String, %System.String addrspace(1)* %5, i32 0, i32 1
  %7 = load i32, i32 addrspace(1)* %6
  %8 = icmp ne i32 %4, %7
  br i1 %8, label %11, label %9

; <label>:9                                       ; preds = %entry
  %10 = load %System.String addrspace(1)*, %System.String addrspace(1)** %this
  ret %System.String addrspace(1)* %10

; <label>:11                                      ; preds = %entry
  %12 = load i32, i32* %loc0
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %16, label %14

; <label>:14                                      ; preds = %11
  %15 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  ret %System.String addrspace(1)* %15

; <label>:16                                      ; preds = %11
  %17 = load %System.String addrspace(1)*, %System.String addrspace(1)** %this
  %18 = load i32, i32* %arg1
  %19 = load i32, i32* %loc0
  %20 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*, i32, i32)*)(%System.String addrspace(1)* %17, i32 %18, i32 %19)
  ret %System.String addrspace(1)* %20
}

INFO:  jitting method Path::CheckInvalidPathChars using LLILCJit
Successfully read Path.CheckInvalidPathChars

define void @Path.CheckInvalidPathChars(%System.String addrspace(1)* %param0, i8 %param1) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  %arg1 = alloca i8
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  store i8 %param1, i8* %arg1
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %1 = icmp ne %System.String addrspace(1)* %0, null
  br i1 %1, label %5, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %4 = call %System.ArgumentNullException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentNullException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %4, %System.String addrspace(1)* %3)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %4) #0
  unreachable

; <label>:5                                       ; preds = %entry
  %6 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %7 = load i8, i8* %arg1
  %8 = zext i8 %7 to i32
  %9 = trunc i32 %8 to i8
  %10 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, i8)*)(%System.String addrspace(1)* %6, i8 %9)
  %11 = zext i8 %10 to i32
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %17, label %13

; <label>:13                                      ; preds = %5
  %14 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %15 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %14)
  %16 = call %System.ArgumentException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %16, %System.String addrspace(1)* %15)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %16) #0
  unreachable

; <label>:17                                      ; preds = %5
  ret void
}

INFO:  jitting method Path::HasIllegalCharacters using LLILCJit
Successfully read Path.HasIllegalCharacters

define i8 @Path.HasIllegalCharacters(%System.String addrspace(1)* %param0, i8 %param1) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  %arg1 = alloca i8
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  store i8 %param1, i8* %arg1
  %0 = load i8, i8* %arg1
  %1 = zext i8 %0 to i32
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %16, label %3

; <label>:3                                       ; preds = %entry
  %4 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %5 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 1421)
  %6 = getelementptr inbounds i8, i8 addrspace(1)* %5, i64 2872
  %7 = addrspacecast i8 addrspace(1)* %6 to %"System.Char[]" addrspace(1)**
  %8 = load %"System.Char[]" addrspace(1)*, %"System.Char[]" addrspace(1)** %7
  %NullCheck = icmp ne %System.String addrspace(1)* %4, null
  br i1 %NullCheck, label %9, label %ThrowNullRef

; <label>:9                                       ; preds = %3
  %10 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.String addrspace(1)*, %"System.Char[]" addrspace(1)*)*)(%System.String addrspace(1)* %4, %"System.Char[]" addrspace(1)* %8)
  %11 = icmp slt i32 %10, 0
  %12 = sext i1 %11 to i32
  %13 = icmp eq i32 %12, 0
  %14 = sext i1 %13 to i32
  %15 = trunc i32 %14 to i8
  ret i8 %15

; <label>:16                                      ; preds = %entry
  %17 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %18 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 1421)
  %19 = getelementptr inbounds i8, i8 addrspace(1)* %18, i64 2864
  %20 = addrspacecast i8 addrspace(1)* %19 to %"System.Char[]" addrspace(1)**
  %21 = load %"System.Char[]" addrspace(1)*, %"System.Char[]" addrspace(1)** %20
  %NullCheck2 = icmp ne %System.String addrspace(1)* %17, null
  br i1 %NullCheck2, label %22, label %ThrowNullRef1

; <label>:22                                      ; preds = %16
  %23 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.String addrspace(1)*, %"System.Char[]" addrspace(1)*)*)(%System.String addrspace(1)* %17, %"System.Char[]" addrspace(1)* %21)
  %24 = icmp slt i32 %23, 0
  %25 = sext i1 %24 to i32
  %26 = icmp eq i32 %25, 0
  %27 = sext i1 %26 to i32
  %28 = trunc i32 %27 to i8
  ret i8 %28

ThrowNullRef:                                     ; preds = %3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef1:                                    ; preds = %16
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method String::IndexOfAny using LLILCJit
Successfully read String.IndexOfAny

define i32 @String.IndexOfAny(%System.String addrspace(1)* %param0, %"System.Char[]" addrspace(1)* %param1) {
entry:
  %this = alloca %System.String addrspace(1)*
  %arg1 = alloca %"System.Char[]" addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %this
  store %"System.Char[]" addrspace(1)* %param1, %"System.Char[]" addrspace(1)** %arg1
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %this
  %1 = load %"System.Char[]" addrspace(1)*, %"System.Char[]" addrspace(1)** %arg1
  %2 = load %System.String addrspace(1)*, %System.String addrspace(1)** %this
  %3 = getelementptr inbounds %System.String, %System.String addrspace(1)* %2, i32 0, i32 1
  %4 = load i32, i32 addrspace(1)* %3
  %5 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.String addrspace(1)*, %"System.Char[]" addrspace(1)*, i32, i32)*)(%System.String addrspace(1)* %0, %"System.Char[]" addrspace(1)* %1, i32 0, i32 %4)
  ret i32 %5
}

INFO:  jitting method PathHelper::Append using LLILCJit
Successfully read PathHelper.Append

define void @PathHelper.Append(%System.IO.PathHelper addrspace(1)* %param0, i16 %param1) {
entry:
  %this = alloca %System.IO.PathHelper addrspace(1)*
  %arg1 = alloca i16
  store %System.IO.PathHelper addrspace(1)* %param0, %System.IO.PathHelper addrspace(1)** %this
  store i16 %param1, i16* %arg1
  %0 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %1 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.IO.PathHelper addrspace(1)*)*)(%System.IO.PathHelper addrspace(1)* %0)
  %2 = add i32 %1, 1
  %3 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %4 = getelementptr inbounds %System.IO.PathHelper, %System.IO.PathHelper addrspace(1)* %3, i32 0, i32 2
  %5 = load i32, i32 addrspace(1)* %4, align 8
  %6 = icmp slt i32 %2, %5
  br i1 %6, label %11, label %7

; <label>:7                                       ; preds = %entry
  %8 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %9 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %8)
  %10 = call %System.IO.PathTooLongException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.IO.PathTooLongException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.PathTooLongException addrspace(1)*, %System.String addrspace(1)*)*)(%System.IO.PathTooLongException addrspace(1)* %10, %System.String addrspace(1)* %9)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.PathTooLongException addrspace(1)*)*)(%System.IO.PathTooLongException addrspace(1)* %10) #0
  unreachable

; <label>:11                                      ; preds = %entry
  %12 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %13 = getelementptr inbounds %System.IO.PathHelper, %System.IO.PathHelper addrspace(1)* %12, i32 0, i32 5
  %14 = load i8, i8 addrspace(1)* %13, align 8
  %15 = zext i8 %14 to i32
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %36, label %17

; <label>:17                                      ; preds = %11
  %18 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %19 = getelementptr inbounds %System.IO.PathHelper, %System.IO.PathHelper addrspace(1)* %18, i32 0, i32 1
  %20 = load i16*, i16* addrspace(1)* %19, align 8
  %21 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %22 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.IO.PathHelper addrspace(1)*)*)(%System.IO.PathHelper addrspace(1)* %21)
  %23 = sext i32 %22 to i64
  %24 = mul i64 %23, 2
  %25 = bitcast i16* %20 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 %24
  %27 = load i16, i16* %arg1
  %28 = zext i16 %27 to i32
  %29 = bitcast i8* %26 to i16*
  %30 = trunc i32 %28 to i16
  store i16 %30, i16* %29, align 8
  %31 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %32 = getelementptr inbounds %System.IO.PathHelper, %System.IO.PathHelper addrspace(1)* %31, i32 0, i32 3
  %33 = load i32, i32 addrspace(1)* %32, align 8
  %34 = add i32 %33, 1
  %35 = getelementptr inbounds %System.IO.PathHelper, %System.IO.PathHelper addrspace(1)* %31, i32 0, i32 3
  store i32 %34, i32 addrspace(1)* %35
  ret void

; <label>:36                                      ; preds = %11
  %37 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %38 = getelementptr inbounds %System.IO.PathHelper, %System.IO.PathHelper addrspace(1)* %37, i32 0, i32 0
  %39 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %38, align 8
  %40 = load i16, i16* %arg1
  %41 = zext i16 %40 to i32
  %NullCheck = icmp ne %System.Text.StringBuilder addrspace(1)* %39, null
  br i1 %NullCheck, label %42, label %ThrowNullRef

; <label>:42                                      ; preds = %36
  %43 = trunc i32 %41 to i16
  %44 = call %System.Text.StringBuilder addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.StringBuilder addrspace(1)* (%System.Text.StringBuilder addrspace(1)*, i16)*)(%System.Text.StringBuilder addrspace(1)* %39, i16 %43)
  ret void

ThrowNullRef:                                     ; preds = %36
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method PathHelper::get_Length using LLILCJit
Successfully read PathHelper.get_Length

define i32 @PathHelper.get_Length(%System.IO.PathHelper addrspace(1)* %param0) {
entry:
  %this = alloca %System.IO.PathHelper addrspace(1)*
  store %System.IO.PathHelper addrspace(1)* %param0, %System.IO.PathHelper addrspace(1)** %this
  %0 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %1 = getelementptr inbounds %System.IO.PathHelper, %System.IO.PathHelper addrspace(1)* %0, i32 0, i32 5
  %2 = load i8, i8 addrspace(1)* %1, align 8
  %3 = zext i8 %2 to i32
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5

; <label>:5                                       ; preds = %entry
  %6 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %7 = getelementptr inbounds %System.IO.PathHelper, %System.IO.PathHelper addrspace(1)* %6, i32 0, i32 3
  %8 = load i32, i32 addrspace(1)* %7, align 8
  ret i32 %8

; <label>:9                                       ; preds = %entry
  %10 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %11 = getelementptr inbounds %System.IO.PathHelper, %System.IO.PathHelper addrspace(1)* %10, i32 0, i32 0
  %12 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %11, align 8
  %NullCheck = icmp ne %System.Text.StringBuilder addrspace(1)* %12, null
  br i1 %NullCheck, label %13, label %ThrowNullRef

; <label>:13                                      ; preds = %9
  %14 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.Text.StringBuilder addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* %12)
  ret i32 %14

ThrowNullRef:                                     ; preds = %9
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method PathHelper::OrdinalStartsWith using LLILCJit
Successfully read PathHelper.OrdinalStartsWith

define i8 @PathHelper.OrdinalStartsWith(%System.IO.PathHelper addrspace(1)* %param0, %System.String addrspace(1)* %param1, i8 %param2) {
entry:
  %this = alloca %System.IO.PathHelper addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  %arg2 = alloca i8
  %loc0 = alloca %System.String addrspace(1)*
  %loc1 = alloca i32
  store %System.IO.PathHelper addrspace(1)* %param0, %System.IO.PathHelper addrspace(1)** %this
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  store i8 %param2, i8* %arg2
  %0 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %1 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.IO.PathHelper addrspace(1)*)*)(%System.IO.PathHelper addrspace(1)* %0)
  %2 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %3 = getelementptr inbounds %System.String, %System.String addrspace(1)* %2, i32 0, i32 1
  %4 = load i32, i32 addrspace(1)* %3
  %5 = icmp sge i32 %1, %4
  br i1 %5, label %7, label %6

; <label>:6                                       ; preds = %entry
  ret i8 0

; <label>:7                                       ; preds = %entry
  %8 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %9 = getelementptr inbounds %System.IO.PathHelper, %System.IO.PathHelper addrspace(1)* %8, i32 0, i32 5
  %10 = load i8, i8 addrspace(1)* %9, align 8
  %11 = zext i8 %10 to i32
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %62, label %13

; <label>:13                                      ; preds = %7
  %14 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.PathHelper addrspace(1)*)*)(%System.IO.PathHelper addrspace(1)* %14)
  %15 = load i8, i8* %arg2
  %16 = zext i8 %15 to i32
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %18

; <label>:18                                      ; preds = %13
  %19 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %20 = getelementptr inbounds %System.IO.PathHelper, %System.IO.PathHelper addrspace(1)* %19, i32 0, i32 1
  %21 = load i16*, i16* addrspace(1)* %20, align 8
  %22 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %23 = getelementptr inbounds %System.String, %System.String addrspace(1)* %22, i32 0, i32 1
  %24 = load i32, i32 addrspace(1)* %23
  %25 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*, i16*, i32, i32)*)(%System.String addrspace(1)* null, i16* %21, i32 0, i32 %24)
  store %System.String addrspace(1)* %25, %System.String addrspace(1)** %loc0
  %26 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %27 = load %System.String addrspace(1)*, %System.String addrspace(1)** %loc0
  %NullCheck = icmp ne %System.String addrspace(1)* %26, null
  br i1 %NullCheck, label %28, label %ThrowNullRef

; <label>:28                                      ; preds = %18
  %29 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.String addrspace(1)*, i32)*)(%System.String addrspace(1)* %26, %System.String addrspace(1)* %27, i32 5)
  %30 = zext i8 %29 to i32
  %31 = trunc i32 %30 to i8
  ret i8 %31

; <label>:32                                      ; preds = %13
  store i32 0, i32* %loc1
  br label %55

; <label>:33                                      ; preds = %55
  %34 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %35 = getelementptr inbounds %System.IO.PathHelper, %System.IO.PathHelper addrspace(1)* %34, i32 0, i32 1
  %36 = load i16*, i16* addrspace(1)* %35, align 8
  %37 = load i32, i32* %loc1
  %38 = sext i32 %37 to i64
  %39 = mul i64 %38, 2
  %40 = bitcast i16* %36 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 %39
  %42 = bitcast i8* %41 to i16*
  %43 = load i16, i16* %42, align 8
  %44 = zext i16 %43 to i32
  %45 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %46 = load i32, i32* %loc1
  %47 = getelementptr inbounds %System.String, %System.String addrspace(1)* %45, i32 0, i32 2, i32 %46
  %48 = load i16, i16 addrspace(1)* %47
  %49 = zext i16 %48 to i32
  %50 = icmp eq i32 %44, %49
  br i1 %50, label %52, label %51

; <label>:51                                      ; preds = %33
  ret i8 0

; <label>:52                                      ; preds = %33
  %53 = load i32, i32* %loc1
  %54 = add i32 %53, 1
  store i32 %54, i32* %loc1
  br label %55

; <label>:55                                      ; preds = %32, %52
  %56 = load i32, i32* %loc1
  %57 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %58 = getelementptr inbounds %System.String, %System.String addrspace(1)* %57, i32 0, i32 1
  %59 = load i32, i32 addrspace(1)* %58
  %60 = icmp slt i32 %56, %59
  br i1 %60, label %33, label %61

; <label>:61                                      ; preds = %55
  ret i8 1

; <label>:62                                      ; preds = %7
  %63 = load i8, i8* %arg2
  %64 = zext i8 %63 to i32
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %86, label %66

; <label>:66                                      ; preds = %62
  %67 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %68 = getelementptr inbounds %System.IO.PathHelper, %System.IO.PathHelper addrspace(1)* %67, i32 0, i32 0
  %69 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %68, align 8
  %70 = bitcast %System.Text.StringBuilder addrspace(1)* %69 to i64 addrspace(1)*
  %71 = load i64, i64 addrspace(1)* %70
  %72 = add i64 %71, 64
  %73 = inttoptr i64 %72 to i64*
  %74 = load i64, i64* %73
  %75 = add i64 %74, 0
  %76 = inttoptr i64 %75 to i64*
  %77 = load i64, i64* %76
  %78 = bitcast %System.Text.StringBuilder addrspace(1)* %69 to %System.Object addrspace(1)*
  %79 = inttoptr i64 %77 to %System.String addrspace(1)* (%System.Object addrspace(1)*)*
  %80 = call %System.String addrspace(1)* %79(%System.Object addrspace(1)* %78)
  %81 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %NullCheck2 = icmp ne %System.String addrspace(1)* %80, null
  br i1 %NullCheck2, label %82, label %ThrowNullRef1

; <label>:82                                      ; preds = %66
  %83 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.String addrspace(1)*, i32)*)(%System.String addrspace(1)* %80, %System.String addrspace(1)* %81, i32 5)
  %84 = zext i8 %83 to i32
  %85 = trunc i32 %84 to i8
  ret i8 %85

; <label>:86                                      ; preds = %62
  %87 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %88 = getelementptr inbounds %System.IO.PathHelper, %System.IO.PathHelper addrspace(1)* %87, i32 0, i32 0
  %89 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %88, align 8
  %90 = bitcast %System.Text.StringBuilder addrspace(1)* %89 to i64 addrspace(1)*
  %91 = load i64, i64 addrspace(1)* %90
  %92 = add i64 %91, 64
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93
  %95 = add i64 %94, 0
  %96 = inttoptr i64 %95 to i64*
  %97 = load i64, i64* %96
  %98 = bitcast %System.Text.StringBuilder addrspace(1)* %89 to %System.Object addrspace(1)*
  %99 = inttoptr i64 %97 to %System.String addrspace(1)* (%System.Object addrspace(1)*)*
  %100 = call %System.String addrspace(1)* %99(%System.Object addrspace(1)* %98)
  %101 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %NullCheck4 = icmp ne %System.String addrspace(1)* %100, null
  br i1 %NullCheck4, label %102, label %ThrowNullRef3

; <label>:102                                     ; preds = %86
  %103 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.String addrspace(1)*, i32)*)(%System.String addrspace(1)* %100, %System.String addrspace(1)* %101, i32 4)
  %104 = zext i8 %103 to i32
  %105 = trunc i32 %104 to i8
  ret i8 %105

ThrowNullRef:                                     ; preds = %18
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef1:                                    ; preds = %66
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef3:                                    ; preds = %86
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method PathHelper::NullTerminate using LLILCJit
Successfully read PathHelper.NullTerminate

define void @PathHelper.NullTerminate(%System.IO.PathHelper addrspace(1)* %param0) {
entry:
  %this = alloca %System.IO.PathHelper addrspace(1)*
  store %System.IO.PathHelper addrspace(1)* %param0, %System.IO.PathHelper addrspace(1)** %this
  %0 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %1 = getelementptr inbounds %System.IO.PathHelper, %System.IO.PathHelper addrspace(1)* %0, i32 0, i32 1
  %2 = load i16*, i16* addrspace(1)* %1, align 8
  %3 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %4 = getelementptr inbounds %System.IO.PathHelper, %System.IO.PathHelper addrspace(1)* %3, i32 0, i32 3
  %5 = load i32, i32 addrspace(1)* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = mul i64 %6, 2
  %8 = bitcast i16* %2 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 %7
  %10 = bitcast i8* %9 to i16*
  store i16 0, i16* %10, align 8
  ret void
}

INFO:  jitting method PathHelper::GetFullPathName using LLILCJit
Failed to read PathHelper.GetFullPathName[entryLabel]
INFO:  jitting method DomainNeutralILStubClass::IL_STUB_PInvoke using LLILCJit
Failed to read DomainNeutralILStubClass.IL_STUB_PInvoke[publish secret param]
INFO:  jitting method PathHelper::ToString using LLILCJit
Successfully read PathHelper.ToString

define %System.String addrspace(1)* @PathHelper.ToString(%System.IO.PathHelper addrspace(1)* %param0) {
entry:
  %this = alloca %System.IO.PathHelper addrspace(1)*
  store %System.IO.PathHelper addrspace(1)* %param0, %System.IO.PathHelper addrspace(1)** %this
  %0 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %1 = getelementptr inbounds %System.IO.PathHelper, %System.IO.PathHelper addrspace(1)* %0, i32 0, i32 5
  %2 = load i8, i8 addrspace(1)* %1, align 8
  %3 = zext i8 %2 to i32
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %12, label %5

; <label>:5                                       ; preds = %entry
  %6 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %7 = getelementptr inbounds %System.IO.PathHelper, %System.IO.PathHelper addrspace(1)* %6, i32 0, i32 1
  %8 = load i16*, i16* addrspace(1)* %7, align 8
  %9 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %10 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.IO.PathHelper addrspace(1)*)*)(%System.IO.PathHelper addrspace(1)* %9)
  %11 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*, i16*, i32, i32)*)(%System.String addrspace(1)* null, i16* %8, i32 0, i32 %10)
  ret %System.String addrspace(1)* %11

; <label>:12                                      ; preds = %entry
  %13 = load %System.IO.PathHelper addrspace(1)*, %System.IO.PathHelper addrspace(1)** %this
  %14 = getelementptr inbounds %System.IO.PathHelper, %System.IO.PathHelper addrspace(1)* %13, i32 0, i32 0
  %15 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %14, align 8
  %16 = bitcast %System.Text.StringBuilder addrspace(1)* %15 to i64 addrspace(1)*
  %17 = load i64, i64 addrspace(1)* %16
  %18 = add i64 %17, 64
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19
  %21 = add i64 %20, 0
  %22 = inttoptr i64 %21 to i64*
  %23 = load i64, i64* %22
  %24 = bitcast %System.Text.StringBuilder addrspace(1)* %15 to %System.Object addrspace(1)*
  %25 = inttoptr i64 %23 to %System.String addrspace(1)* (%System.Object addrspace(1)*)*
  %26 = call %System.String addrspace(1)* %25(%System.Object addrspace(1)* %24)
  ret %System.String addrspace(1)* %26
}

INFO:  jitting method String::CtorCharPtrStartLength using LLILCJit
Successfully read String.CtorCharPtrStartLength

define %System.String addrspace(1)* @String.CtorCharPtrStartLength(%System.String addrspace(1)* %param0, i16* %param1, i32 %param2, i32 %param3) {
entry:
  %this = alloca %System.String addrspace(1)*
  %arg1 = alloca i16*
  %arg2 = alloca i32
  %arg3 = alloca i32
  %loc0 = alloca i16*
  %loc1 = alloca %System.String addrspace(1)*
  %loc2 = alloca i16*
  %loc3 = alloca %System.String addrspace(1)*
  %loc4 = alloca %System.String addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %this
  store i16* %param1, i16** %arg1
  store i32 %param2, i32* %arg2
  store i32 %param3, i32* %arg3
  %0 = load i32, i32* %arg3
  %1 = icmp sge i32 %0, 0
  br i1 %1, label %7, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %4 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %5 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %4)
  %6 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %6, %System.String addrspace(1)* %3, %System.String addrspace(1)* %5)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %6) #0
  unreachable

; <label>:7                                       ; preds = %entry
  %8 = load i32, i32* %arg2
  %9 = icmp sge i32 %8, 0
  br i1 %9, label %15, label %10

; <label>:10                                      ; preds = %7
  %11 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %12 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %13 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %12)
  %14 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %14, %System.String addrspace(1)* %11, %System.String addrspace(1)* %13)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %14) #0
  unreachable

; <label>:15                                      ; preds = %7
  %16 = load i16*, i16** %arg1
  %17 = load i32, i32* %arg2
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 2
  %20 = bitcast i16* %16 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 %19
  %22 = bitcast i8* %21 to i16*
  store i16* %22, i16** %loc0
  %23 = load i16*, i16** %loc0
  %24 = load i16*, i16** %arg1
  %25 = icmp uge i16* %23, %24
  br i1 %25, label %31, label %26

; <label>:26                                      ; preds = %15
  %27 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %28 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %29 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %28)
  %30 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %30, %System.String addrspace(1)* %27, %System.String addrspace(1)* %29)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %30) #0
  unreachable

; <label>:31                                      ; preds = %15
  %32 = load i32, i32* %arg3
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %36, label %34

; <label>:34                                      ; preds = %31
  %35 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  ret %System.String addrspace(1)* %35

; <label>:36                                      ; preds = %31
  %37 = load i32, i32* %arg3
  %38 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (i32)*)(i32 %37)
  store %System.String addrspace(1)* %38, %System.String addrspace(1)** %loc1
  %39 = load %System.String addrspace(1)*, %System.String addrspace(1)** %loc1
  store %System.String addrspace(1)* %39, %System.String addrspace(1)** %loc4
  %40 = load %System.String addrspace(1)*, %System.String addrspace(1)** %loc4
  %41 = ptrtoint %System.String addrspace(1)* %40 to i64
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %47, label %43

; <label>:43                                      ; preds = %36
  %44 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 ()*)()
  %45 = sext i32 %44 to i64
  %46 = add i64 %41, %45
  br label %47

; <label>:47                                      ; preds = %36, %43
  %48 = phi i64 [ %41, %36 ], [ %46, %43 ]
  %49 = inttoptr i64 %48 to i16*
  store i16* %49, i16** %loc2
  %50 = load i16*, i16** %loc2
  %51 = load i16*, i16** %loc0
  %52 = load i32, i32* %arg3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i16*, i16*, i32)*)(i16* %50, i16* %51, i32 %52)
  br label %53

; <label>:53                                      ; preds = %47
  store %System.String addrspace(1)* null, %System.String addrspace(1)** %loc4
  br label %54

; <label>:54                                      ; preds = %53
  %55 = load %System.String addrspace(1)*, %System.String addrspace(1)** %loc1
  store %System.String addrspace(1)* %55, %System.String addrspace(1)** %loc3
  br label %56

; <label>:56                                      ; preds = %54
  %57 = load %System.String addrspace(1)*, %System.String addrspace(1)** %loc3
  ret %System.String addrspace(1)* %57
}

INFO:  jitting method RuntimeHelpers::get_OffsetToStringData using LLILCJit
Successfully read RuntimeHelpers.get_OffsetToStringData

define i32 @RuntimeHelpers.get_OffsetToStringData() {
entry:
  ret i32 12
}

INFO:  jitting method String::Equals using LLILCJit
Successfully read String.Equals

define i8 @String.Equals(%System.String addrspace(1)* %param0, %System.String addrspace(1)* %param1, i32 %param2) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  %arg2 = alloca i32
  %loc0 = alloca i32
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  store i32 %param2, i32* %arg2
  %0 = load i32, i32* %arg2
  %1 = icmp slt i32 %0, 0
  br i1 %1, label %5, label %2

; <label>:2                                       ; preds = %entry
  %3 = load i32, i32* %arg2
  %4 = icmp sle i32 %3, 5
  br i1 %4, label %10, label %5

; <label>:5                                       ; preds = %entry, %2
  %6 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %7 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %6)
  %8 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %9 = call %System.ArgumentException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %9, %System.String addrspace(1)* %7, %System.String addrspace(1)* %8)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %9) #0
  unreachable

; <label>:10                                      ; preds = %2
  %11 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %12 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %13 = icmp ne %System.String addrspace(1)* %11, %12
  br i1 %13, label %15, label %14

; <label>:14                                      ; preds = %10
  ret i8 1

; <label>:15                                      ; preds = %10
  %16 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %17 = icmp eq %System.String addrspace(1)* %16, null
  br i1 %17, label %21, label %18

; <label>:18                                      ; preds = %15
  %19 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %20 = icmp ne %System.String addrspace(1)* %19, null
  br i1 %20, label %22, label %21

; <label>:21                                      ; preds = %15, %18
  ret i8 0

; <label>:22                                      ; preds = %18
  %23 = load i32, i32* %arg2
  store i32 %23, i32* %loc0
  %24 = load i32, i32* %loc0
  switch i32 %24, label %25 [
    i32 0, label %26
    i32 1, label %53
    i32 2, label %80
    i32 3, label %107
    i32 4, label %134
    i32 5, label %149
  ]

; <label>:25                                      ; preds = %22
  br label %184

; <label>:26                                      ; preds = %22
  %27 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* ()*)()
  %28 = bitcast %System.Globalization.CultureInfo addrspace(1)* %27 to i64 addrspace(1)*
  %29 = load i64, i64 addrspace(1)* %28
  %30 = add i64 %29, 72
  %31 = inttoptr i64 %30 to i64*
  %32 = load i64, i64* %31
  %33 = add i64 %32, 16
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34
  %36 = inttoptr i64 %35 to %System.Globalization.CompareInfo addrspace(1)* (%System.Globalization.CultureInfo addrspace(1)*)*
  %37 = call %System.Globalization.CompareInfo addrspace(1)* %36(%System.Globalization.CultureInfo addrspace(1)* %27)
  %38 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %39 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %40 = bitcast %System.Globalization.CompareInfo addrspace(1)* %37 to i64 addrspace(1)*
  %41 = load i64, i64 addrspace(1)* %40
  %42 = add i64 %41, 64
  %43 = inttoptr i64 %42 to i64*
  %44 = load i64, i64* %43
  %45 = add i64 %44, 48
  %46 = inttoptr i64 %45 to i64*
  %47 = load i64, i64* %46
  %48 = inttoptr i64 %47 to i32 (%System.Globalization.CompareInfo addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*, i32)*
  %49 = call i32 %48(%System.Globalization.CompareInfo addrspace(1)* %37, %System.String addrspace(1)* %38, %System.String addrspace(1)* %39, i32 0)
  %50 = icmp eq i32 %49, 0
  %51 = sext i1 %50 to i32
  %52 = trunc i32 %51 to i8
  ret i8 %52

; <label>:53                                      ; preds = %22
  %54 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* ()*)()
  %55 = bitcast %System.Globalization.CultureInfo addrspace(1)* %54 to i64 addrspace(1)*
  %56 = load i64, i64 addrspace(1)* %55
  %57 = add i64 %56, 72
  %58 = inttoptr i64 %57 to i64*
  %59 = load i64, i64* %58
  %60 = add i64 %59, 16
  %61 = inttoptr i64 %60 to i64*
  %62 = load i64, i64* %61
  %63 = inttoptr i64 %62 to %System.Globalization.CompareInfo addrspace(1)* (%System.Globalization.CultureInfo addrspace(1)*)*
  %64 = call %System.Globalization.CompareInfo addrspace(1)* %63(%System.Globalization.CultureInfo addrspace(1)* %54)
  %65 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %66 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %67 = bitcast %System.Globalization.CompareInfo addrspace(1)* %64 to i64 addrspace(1)*
  %68 = load i64, i64 addrspace(1)* %67
  %69 = add i64 %68, 64
  %70 = inttoptr i64 %69 to i64*
  %71 = load i64, i64* %70
  %72 = add i64 %71, 48
  %73 = inttoptr i64 %72 to i64*
  %74 = load i64, i64* %73
  %75 = inttoptr i64 %74 to i32 (%System.Globalization.CompareInfo addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*, i32)*
  %76 = call i32 %75(%System.Globalization.CompareInfo addrspace(1)* %64, %System.String addrspace(1)* %65, %System.String addrspace(1)* %66, i32 1)
  %77 = icmp eq i32 %76, 0
  %78 = sext i1 %77 to i32
  %79 = trunc i32 %78 to i8
  ret i8 %79

; <label>:80                                      ; preds = %22
  %81 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* ()*)()
  %82 = bitcast %System.Globalization.CultureInfo addrspace(1)* %81 to i64 addrspace(1)*
  %83 = load i64, i64 addrspace(1)* %82
  %84 = add i64 %83, 72
  %85 = inttoptr i64 %84 to i64*
  %86 = load i64, i64* %85
  %87 = add i64 %86, 16
  %88 = inttoptr i64 %87 to i64*
  %89 = load i64, i64* %88
  %90 = inttoptr i64 %89 to %System.Globalization.CompareInfo addrspace(1)* (%System.Globalization.CultureInfo addrspace(1)*)*
  %91 = call %System.Globalization.CompareInfo addrspace(1)* %90(%System.Globalization.CultureInfo addrspace(1)* %81)
  %92 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %93 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %94 = bitcast %System.Globalization.CompareInfo addrspace(1)* %91 to i64 addrspace(1)*
  %95 = load i64, i64 addrspace(1)* %94
  %96 = add i64 %95, 64
  %97 = inttoptr i64 %96 to i64*
  %98 = load i64, i64* %97
  %99 = add i64 %98, 48
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100
  %102 = inttoptr i64 %101 to i32 (%System.Globalization.CompareInfo addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*, i32)*
  %103 = call i32 %102(%System.Globalization.CompareInfo addrspace(1)* %91, %System.String addrspace(1)* %92, %System.String addrspace(1)* %93, i32 0)
  %104 = icmp eq i32 %103, 0
  %105 = sext i1 %104 to i32
  %106 = trunc i32 %105 to i8
  ret i8 %106

; <label>:107                                     ; preds = %22
  %108 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* ()*)()
  %109 = bitcast %System.Globalization.CultureInfo addrspace(1)* %108 to i64 addrspace(1)*
  %110 = load i64, i64 addrspace(1)* %109
  %111 = add i64 %110, 72
  %112 = inttoptr i64 %111 to i64*
  %113 = load i64, i64* %112
  %114 = add i64 %113, 16
  %115 = inttoptr i64 %114 to i64*
  %116 = load i64, i64* %115
  %117 = inttoptr i64 %116 to %System.Globalization.CompareInfo addrspace(1)* (%System.Globalization.CultureInfo addrspace(1)*)*
  %118 = call %System.Globalization.CompareInfo addrspace(1)* %117(%System.Globalization.CultureInfo addrspace(1)* %108)
  %119 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %120 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %121 = bitcast %System.Globalization.CompareInfo addrspace(1)* %118 to i64 addrspace(1)*
  %122 = load i64, i64 addrspace(1)* %121
  %123 = add i64 %122, 64
  %124 = inttoptr i64 %123 to i64*
  %125 = load i64, i64* %124
  %126 = add i64 %125, 48
  %127 = inttoptr i64 %126 to i64*
  %128 = load i64, i64* %127
  %129 = inttoptr i64 %128 to i32 (%System.Globalization.CompareInfo addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*, i32)*
  %130 = call i32 %129(%System.Globalization.CompareInfo addrspace(1)* %118, %System.String addrspace(1)* %119, %System.String addrspace(1)* %120, i32 1)
  %131 = icmp eq i32 %130, 0
  %132 = sext i1 %131 to i32
  %133 = trunc i32 %132 to i8
  ret i8 %133

; <label>:134                                     ; preds = %22
  %135 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %136 = getelementptr inbounds %System.String, %System.String addrspace(1)* %135, i32 0, i32 1
  %137 = load i32, i32 addrspace(1)* %136
  %138 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %139 = getelementptr inbounds %System.String, %System.String addrspace(1)* %138, i32 0, i32 1
  %140 = load i32, i32 addrspace(1)* %139
  %141 = icmp eq i32 %137, %140
  br i1 %141, label %143, label %142

; <label>:142                                     ; preds = %134
  ret i8 0

; <label>:143                                     ; preds = %134
  %144 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %145 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %146 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %144, %System.String addrspace(1)* %145)
  %147 = zext i8 %146 to i32
  %148 = trunc i32 %147 to i8
  ret i8 %148

; <label>:149                                     ; preds = %22
  %150 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %151 = getelementptr inbounds %System.String, %System.String addrspace(1)* %150, i32 0, i32 1
  %152 = load i32, i32 addrspace(1)* %151
  %153 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %154 = getelementptr inbounds %System.String, %System.String addrspace(1)* %153, i32 0, i32 1
  %155 = load i32, i32 addrspace(1)* %154
  %156 = icmp eq i32 %152, %155
  br i1 %156, label %158, label %157

; <label>:157                                     ; preds = %149
  ret i8 0

; <label>:158                                     ; preds = %149
  %159 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %NullCheck = icmp ne %System.String addrspace(1)* %159, null
  br i1 %NullCheck, label %160, label %ThrowNullRef

; <label>:160                                     ; preds = %158
  %161 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %159)
  %162 = zext i8 %161 to i32
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %177, label %164

; <label>:164                                     ; preds = %160
  %165 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %NullCheck2 = icmp ne %System.String addrspace(1)* %165, null
  br i1 %NullCheck2, label %166, label %ThrowNullRef1

; <label>:166                                     ; preds = %164
  %167 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %165)
  %168 = zext i8 %167 to i32
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %177, label %170

; <label>:170                                     ; preds = %166
  %171 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %172 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %173 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %171, %System.String addrspace(1)* %172)
  %174 = icmp eq i32 %173, 0
  %175 = sext i1 %174 to i32
  %176 = trunc i32 %175 to i8
  ret i8 %176

; <label>:177                                     ; preds = %160, %166
  %178 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %179 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %180 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %178, %System.String addrspace(1)* %179)
  %181 = icmp eq i32 %180, 0
  %182 = sext i1 %181 to i32
  %183 = trunc i32 %182 to i8
  ret i8 %183

; <label>:184                                     ; preds = %25
  %185 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %186 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %185)
  %187 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %188 = call %System.ArgumentException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %188, %System.String addrspace(1)* %186, %System.String addrspace(1)* %187)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %188) #0
  unreachable

ThrowNullRef:                                     ; preds = %158
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef1:                                    ; preds = %164
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method StringBuilder::Append using LLILCJit
Failed to read StringBuilder.Append[storeElem]
INFO:  jitting method StringBuilder::AppendHelper using LLILCJit
Successfully read StringBuilder.AppendHelper

define void @StringBuilder.AppendHelper(%System.Text.StringBuilder addrspace(1)* %param0, %System.String addrspace(1)* %param1) {
entry:
  %this = alloca %System.Text.StringBuilder addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  %loc0 = alloca i16*
  %loc1 = alloca %System.String addrspace(1)*
  store %System.Text.StringBuilder addrspace(1)* %param0, %System.Text.StringBuilder addrspace(1)** %this
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  store %System.String addrspace(1)* %0, %System.String addrspace(1)** %loc1
  %1 = load %System.String addrspace(1)*, %System.String addrspace(1)** %loc1
  %2 = ptrtoint %System.String addrspace(1)* %1 to i64
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %8, label %4

; <label>:4                                       ; preds = %entry
  %5 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 ()*)()
  %6 = sext i32 %5 to i64
  %7 = add i64 %2, %6
  br label %8

; <label>:8                                       ; preds = %entry, %4
  %9 = phi i64 [ %2, %entry ], [ %7, %4 ]
  %10 = inttoptr i64 %9 to i16*
  store i16* %10, i16** %loc0
  %11 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %12 = load i16*, i16** %loc0
  %13 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %14 = getelementptr inbounds %System.String, %System.String addrspace(1)* %13, i32 0, i32 1
  %15 = load i32, i32 addrspace(1)* %14
  %16 = call %System.Text.StringBuilder addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.StringBuilder addrspace(1)* (%System.Text.StringBuilder addrspace(1)*, i16*, i32)*)(%System.Text.StringBuilder addrspace(1)* %11, i16* %12, i32 %15)
  store %System.String addrspace(1)* null, %System.String addrspace(1)** %loc1
  ret void
}

INFO:  jitting method StringBuilder::Append using LLILCJit
Successfully read StringBuilder.Append

define %System.Text.StringBuilder addrspace(1)* @StringBuilder.Append(%System.Text.StringBuilder addrspace(1)* %param0, i16* %param1, i32 %param2) {
entry:
  %this = alloca %System.Text.StringBuilder addrspace(1)*
  %arg1 = alloca i16*
  %arg2 = alloca i32
  %loc0 = alloca i32
  %loc1 = alloca i32
  %loc2 = alloca i32
  store %System.Text.StringBuilder addrspace(1)* %param0, %System.Text.StringBuilder addrspace(1)** %this
  store i16* %param1, i16** %arg1
  store i32 %param2, i32* %arg2
  %0 = load i32, i32* %arg2
  %1 = icmp sge i32 %0, 0
  br i1 %1, label %7, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %4 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %5 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %4)
  %6 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %6, %System.String addrspace(1)* %3, %System.String addrspace(1)* %5)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %6) #0
  unreachable

; <label>:7                                       ; preds = %entry
  %8 = load i32, i32* %arg2
  %9 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %10 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %9, i32 0, i32 3
  %11 = load i32, i32 addrspace(1)* %10, align 8
  %12 = add i32 %8, %11
  store i32 %12, i32* %loc0
  %13 = load i32, i32* %loc0
  %14 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %15 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %14, i32 0, i32 1
  %16 = load %"System.Char[]" addrspace(1)*, %"System.Char[]" addrspace(1)* addrspace(1)* %15, align 8
  %17 = getelementptr inbounds %"System.Char[]", %"System.Char[]" addrspace(1)* %16, i32 0, i32 1
  %18 = load i32, i32 addrspace(1)* %17
  %19 = zext i32 %18 to i64
  %20 = trunc i64 %19 to i32
  %21 = icmp sgt i32 %13, %20
  br i1 %21, label %34, label %22

; <label>:22                                      ; preds = %7
  %23 = load i16*, i16** %arg1
  %24 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %25 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %24, i32 0, i32 1
  %26 = load %"System.Char[]" addrspace(1)*, %"System.Char[]" addrspace(1)* addrspace(1)* %25, align 8
  %27 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %28 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %27, i32 0, i32 3
  %29 = load i32, i32 addrspace(1)* %28, align 8
  %30 = load i32, i32* %arg2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i16*, %"System.Char[]" addrspace(1)*, i32, i32)*)(i16* %23, %"System.Char[]" addrspace(1)* %26, i32 %29, i32 %30)
  %31 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %32 = load i32, i32* %loc0
  %33 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %31, i32 0, i32 3
  store i32 %32, i32 addrspace(1)* %33
  br label %86

; <label>:34                                      ; preds = %7
  %35 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %36 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %35, i32 0, i32 1
  %37 = load %"System.Char[]" addrspace(1)*, %"System.Char[]" addrspace(1)* addrspace(1)* %36, align 8
  %38 = getelementptr inbounds %"System.Char[]", %"System.Char[]" addrspace(1)* %37, i32 0, i32 1
  %39 = load i32, i32 addrspace(1)* %38
  %40 = zext i32 %39 to i64
  %41 = trunc i64 %40 to i32
  %42 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %43 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %42, i32 0, i32 3
  %44 = load i32, i32 addrspace(1)* %43, align 8
  %45 = sub i32 %41, %44
  store i32 %45, i32* %loc1
  %46 = load i32, i32* %loc1
  %47 = icmp sle i32 %46, 0
  br i1 %47, label %66, label %48

; <label>:48                                      ; preds = %34
  %49 = load i16*, i16** %arg1
  %50 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %51 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %50, i32 0, i32 1
  %52 = load %"System.Char[]" addrspace(1)*, %"System.Char[]" addrspace(1)* addrspace(1)* %51, align 8
  %53 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %54 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %53, i32 0, i32 3
  %55 = load i32, i32 addrspace(1)* %54, align 8
  %56 = load i32, i32* %loc1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i16*, %"System.Char[]" addrspace(1)*, i32, i32)*)(i16* %49, %"System.Char[]" addrspace(1)* %52, i32 %55, i32 %56)
  %57 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %58 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %59 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %58, i32 0, i32 1
  %60 = load %"System.Char[]" addrspace(1)*, %"System.Char[]" addrspace(1)* addrspace(1)* %59, align 8
  %61 = getelementptr inbounds %"System.Char[]", %"System.Char[]" addrspace(1)* %60, i32 0, i32 1
  %62 = load i32, i32 addrspace(1)* %61
  %63 = zext i32 %62 to i64
  %64 = trunc i64 %63 to i32
  %65 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %57, i32 0, i32 3
  store i32 %64, i32 addrspace(1)* %65
  br label %66

; <label>:66                                      ; preds = %34, %48
  %67 = load i32, i32* %arg2
  %68 = load i32, i32* %loc1
  %69 = sub i32 %67, %68
  store i32 %69, i32* %loc2
  %70 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %71 = load i32, i32* %loc2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.StringBuilder addrspace(1)*, i32)*)(%System.Text.StringBuilder addrspace(1)* %70, i32 %71)
  %72 = load i16*, i16** %arg1
  %73 = load i32, i32* %loc1
  %74 = sext i32 %73 to i64
  %75 = mul i64 %74, 2
  %76 = bitcast i16* %72 to i8*
  %77 = getelementptr inbounds i8, i8* %76, i64 %75
  %78 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %79 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %78, i32 0, i32 1
  %80 = load %"System.Char[]" addrspace(1)*, %"System.Char[]" addrspace(1)* addrspace(1)* %79, align 8
  %81 = load i32, i32* %loc2
  %82 = bitcast i8* %77 to i16*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i16*, %"System.Char[]" addrspace(1)*, i32, i32)*)(i16* %82, %"System.Char[]" addrspace(1)* %80, i32 0, i32 %81)
  %83 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %84 = load i32, i32* %loc2
  %85 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %83, i32 0, i32 3
  store i32 %84, i32 addrspace(1)* %85
  br label %86

; <label>:86                                      ; preds = %22, %66
  %87 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  ret %System.Text.StringBuilder addrspace(1)* %87
}

INFO:  jitting method StringBuilder::ExpandByABlock using LLILCJit
Successfully read StringBuilder.ExpandByABlock

define void @StringBuilder.ExpandByABlock(%System.Text.StringBuilder addrspace(1)* %param0, i32 %param1) {
entry:
  %this = alloca %System.Text.StringBuilder addrspace(1)*
  %arg1 = alloca i32
  %loc0 = alloca i32
  store %System.Text.StringBuilder addrspace(1)* %param0, %System.Text.StringBuilder addrspace(1)** %this
  store i32 %param1, i32* %arg1
  %0 = load i32, i32* %arg1
  %1 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %2 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.Text.StringBuilder addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* %1)
  %3 = add i32 %0, %2
  %4 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %5 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %4, i32 0, i32 5
  %6 = load i32, i32 addrspace(1)* %5, align 8
  %7 = icmp sle i32 %3, %6
  br i1 %7, label %13, label %8

; <label>:8                                       ; preds = %entry
  %9 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %10 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %11 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %10)
  %12 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %12, %System.String addrspace(1)* %9, %System.String addrspace(1)* %11)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %12) #0
  unreachable

; <label>:13                                      ; preds = %entry
  %14 = load i32, i32* %arg1
  %15 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %16 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.Text.StringBuilder addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* %15)
  %17 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (i32, i32)*)(i32 %16, i32 8000)
  %18 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (i32, i32)*)(i32 %14, i32 %17)
  store i32 %18, i32* %loc0
  %19 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %20 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %21 = call %System.Text.StringBuilder addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.StringBuilder addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* %21, %System.Text.StringBuilder addrspace(1)* %20)
  %22 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %19, i32 0, i32 2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* addrspace(1)* %22, %System.Text.StringBuilder addrspace(1)* %21)
  %23 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %24 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %23, i32 0, i32 4
  %25 = load i32, i32 addrspace(1)* %24, align 8
  %26 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %27 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %26, i32 0, i32 3
  %28 = load i32, i32 addrspace(1)* %27, align 8
  %29 = add i32 %25, %28
  %30 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %23, i32 0, i32 4
  store i32 %29, i32 addrspace(1)* %30
  %31 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %32 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %31, i32 0, i32 3
  store i32 0, i32 addrspace(1)* %32
  %33 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %34 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %33, i32 0, i32 4
  %35 = load i32, i32 addrspace(1)* %34, align 8
  %36 = load i32, i32* %loc0
  %37 = add i32 %35, %36
  %38 = load i32, i32* %loc0
  %39 = icmp sge i32 %37, %38
  br i1 %39, label %44, label %40

; <label>:40                                      ; preds = %13
  %41 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %42 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %41, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Char[]" addrspace(1)* addrspace(1)*, %"System.Char[]" addrspace(1)*)*)(%"System.Char[]" addrspace(1)* addrspace(1)* %42, %"System.Char[]" addrspace(1)* null)
  %43 = call %System.OutOfMemoryException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.OutOfMemoryException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.OutOfMemoryException addrspace(1)*)*)(%System.OutOfMemoryException addrspace(1)* %43)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.OutOfMemoryException addrspace(1)*)*)(%System.OutOfMemoryException addrspace(1)* %43) #0
  unreachable

; <label>:44                                      ; preds = %13
  %45 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %46 = load i32, i32* %loc0
  %47 = sext i32 %46 to i64
  %48 = call %"System.Char[]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Char[]" addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 %47)
  %49 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %45, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Char[]" addrspace(1)* addrspace(1)*, %"System.Char[]" addrspace(1)*)*)(%"System.Char[]" addrspace(1)* addrspace(1)* %49, %"System.Char[]" addrspace(1)* %48)
  ret void
}

INFO:  jitting method StringBuilder::get_Length using LLILCJit
Successfully read StringBuilder.get_Length

define i32 @StringBuilder.get_Length(%System.Text.StringBuilder addrspace(1)* %param0) {
entry:
  %this = alloca %System.Text.StringBuilder addrspace(1)*
  store %System.Text.StringBuilder addrspace(1)* %param0, %System.Text.StringBuilder addrspace(1)** %this
  %0 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %1 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %0, i32 0, i32 4
  %2 = load i32, i32 addrspace(1)* %1, align 8
  %3 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %4 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %3, i32 0, i32 3
  %5 = load i32, i32 addrspace(1)* %4, align 8
  %6 = add i32 %2, %5
  ret i32 %6
}

INFO:  jitting method Math::Max using LLILCJit
Successfully read Math.Max

define i32 @Math.Max(i32 %param0, i32 %param1) {
entry:
  %arg0 = alloca i32
  %arg1 = alloca i32
  store i32 %param0, i32* %arg0
  store i32 %param1, i32* %arg1
  %0 = load i32, i32* %arg0
  %1 = load i32, i32* %arg1
  %2 = icmp sge i32 %0, %1
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %entry
  %4 = load i32, i32* %arg1
  ret i32 %4

; <label>:5                                       ; preds = %entry
  %6 = load i32, i32* %arg0
  ret i32 %6
}

INFO:  jitting method StringBuilder::.ctor using LLILCJit
Successfully read StringBuilder..ctor

define void @StringBuilder..ctor(%System.Text.StringBuilder addrspace(1)* %param0, %System.Text.StringBuilder addrspace(1)* %param1) {
entry:
  %this = alloca %System.Text.StringBuilder addrspace(1)*
  %arg1 = alloca %System.Text.StringBuilder addrspace(1)*
  store %System.Text.StringBuilder addrspace(1)* %param0, %System.Text.StringBuilder addrspace(1)** %this
  store %System.Text.StringBuilder addrspace(1)* %param1, %System.Text.StringBuilder addrspace(1)** %arg1
  %0 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %1 = bitcast %System.Text.StringBuilder addrspace(1)* %0 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %1)
  %2 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %3 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %arg1
  %4 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %3, i32 0, i32 3
  %5 = load i32, i32 addrspace(1)* %4, align 8
  %6 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %2, i32 0, i32 3
  store i32 %5, i32 addrspace(1)* %6
  %7 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %8 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %arg1
  %9 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %8, i32 0, i32 4
  %10 = load i32, i32 addrspace(1)* %9, align 8
  %11 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %7, i32 0, i32 4
  store i32 %10, i32 addrspace(1)* %11
  %12 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %13 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %arg1
  %14 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %13, i32 0, i32 1
  %15 = load %"System.Char[]" addrspace(1)*, %"System.Char[]" addrspace(1)* addrspace(1)* %14, align 8
  %16 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %12, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Char[]" addrspace(1)* addrspace(1)*, %"System.Char[]" addrspace(1)*)*)(%"System.Char[]" addrspace(1)* addrspace(1)* %16, %"System.Char[]" addrspace(1)* %15)
  %17 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %18 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %arg1
  %19 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %18, i32 0, i32 2
  %20 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %19, align 8
  %21 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %17, i32 0, i32 2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* addrspace(1)* %21, %System.Text.StringBuilder addrspace(1)* %20)
  %22 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %23 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %arg1
  %24 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %23, i32 0, i32 5
  %25 = load i32, i32 addrspace(1)* %24, align 8
  %26 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %22, i32 0, i32 5
  store i32 %25, i32 addrspace(1)* %26
  ret void
}

INFO:  jitting method StringBuilder::Append using LLILCJit
Failed to read StringBuilder.Append[storeElem]
INFO:  jitting method StringBuilder::Remove using LLILCJit
Successfully read StringBuilder.Remove

define %System.Text.StringBuilder addrspace(1)* @StringBuilder.Remove(%System.Text.StringBuilder addrspace(1)* %param0, i32 %param1, i32 %param2) {
entry:
  %this = alloca %System.Text.StringBuilder addrspace(1)*
  %arg1 = alloca i32
  %arg2 = alloca i32
  %loc0 = alloca %System.Text.StringBuilder addrspace(1)*
  %loc1 = alloca i32
  store %System.Text.StringBuilder addrspace(1)* %param0, %System.Text.StringBuilder addrspace(1)** %this
  store i32 %param1, i32* %arg1
  store i32 %param2, i32* %arg2
  %0 = load i32, i32* %arg2
  %1 = icmp sge i32 %0, 0
  br i1 %1, label %7, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %4 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %5 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %4)
  %6 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %6, %System.String addrspace(1)* %3, %System.String addrspace(1)* %5)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %6) #0
  unreachable

; <label>:7                                       ; preds = %entry
  %8 = load i32, i32* %arg1
  %9 = icmp sge i32 %8, 0
  br i1 %9, label %15, label %10

; <label>:10                                      ; preds = %7
  %11 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %12 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %13 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %12)
  %14 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %14, %System.String addrspace(1)* %11, %System.String addrspace(1)* %13)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %14) #0
  unreachable

; <label>:15                                      ; preds = %7
  %16 = load i32, i32* %arg2
  %17 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %18 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.Text.StringBuilder addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* %17)
  %19 = load i32, i32* %arg1
  %20 = sub i32 %18, %19
  %21 = icmp sle i32 %16, %20
  br i1 %21, label %27, label %22

; <label>:22                                      ; preds = %15
  %23 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %24 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %25 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %24)
  %26 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %26, %System.String addrspace(1)* %23, %System.String addrspace(1)* %25)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %26) #0
  unreachable

; <label>:27                                      ; preds = %15
  %28 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %29 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.Text.StringBuilder addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* %28)
  %30 = load i32, i32* %arg2
  %31 = icmp ne i32 %29, %30
  br i1 %31, label %38, label %32

; <label>:32                                      ; preds = %27
  %33 = load i32, i32* %arg1
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %38, label %35

; <label>:35                                      ; preds = %32
  %36 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.StringBuilder addrspace(1)*, i32)*)(%System.Text.StringBuilder addrspace(1)* %36, i32 0)
  %37 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  ret %System.Text.StringBuilder addrspace(1)* %37

; <label>:38                                      ; preds = %27, %32
  %39 = load i32, i32* %arg2
  %40 = icmp sle i32 %39, 0
  br i1 %40, label %47, label %41

; <label>:41                                      ; preds = %38
  %42 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %43 = load i32, i32* %arg1
  %44 = load i32, i32* %arg2
  %45 = addrspacecast %System.Text.StringBuilder addrspace(1)** %loc0 to %System.Text.StringBuilder addrspace(1)* addrspace(1)*
  %46 = addrspacecast i32* %loc1 to i32 addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.StringBuilder addrspace(1)*, i32, i32, %System.Text.StringBuilder addrspace(1)* addrspace(1)*, i32 addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* %42, i32 %43, i32 %44, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %45, i32 addrspace(1)* %46)
  br label %47

; <label>:47                                      ; preds = %38, %41
  %48 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  ret %System.Text.StringBuilder addrspace(1)* %48
}

INFO:  jitting method StringBuilder::Remove using LLILCJit
Successfully read StringBuilder.Remove

define void @StringBuilder.Remove(%System.Text.StringBuilder addrspace(1)* %param0, i32 %param1, i32 %param2, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %param3, i32 addrspace(1)* %param4) {
entry:
  %this = alloca %System.Text.StringBuilder addrspace(1)*
  %arg1 = alloca i32
  %arg2 = alloca i32
  %arg3 = alloca %System.Text.StringBuilder addrspace(1)* addrspace(1)*
  %arg4 = alloca i32 addrspace(1)*
  %loc0 = alloca i32
  %loc1 = alloca %System.Text.StringBuilder addrspace(1)*
  %loc2 = alloca i32
  %loc3 = alloca i32
  %loc4 = alloca i32
  store %System.Text.StringBuilder addrspace(1)* %param0, %System.Text.StringBuilder addrspace(1)** %this
  store i32 %param1, i32* %arg1
  store i32 %param2, i32* %arg2
  store %System.Text.StringBuilder addrspace(1)* addrspace(1)* %param3, %System.Text.StringBuilder addrspace(1)* addrspace(1)** %arg3
  store i32 addrspace(1)* %param4, i32 addrspace(1)** %arg4
  %0 = load i32, i32* %arg1
  %1 = load i32, i32* %arg2
  %2 = add i32 %0, %1
  store i32 %2, i32* %loc0
  %3 = load %System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)** %arg3
  %4 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* addrspace(1)* %3, %System.Text.StringBuilder addrspace(1)* %4)
  store %System.Text.StringBuilder addrspace(1)* null, %System.Text.StringBuilder addrspace(1)** %loc1
  store i32 0, i32* %loc2
  br label %5

; <label>:5                                       ; preds = %48, %entry
  %6 = load i32, i32* %loc0
  %7 = load %System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)** %arg3
  %8 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %7, align 8
  %9 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %8, i32 0, i32 4
  %10 = load i32, i32 addrspace(1)* %9, align 8
  %11 = sub i32 %6, %10
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %40, label %13

; <label>:13                                      ; preds = %5
  %14 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %loc1
  %15 = icmp ne %System.Text.StringBuilder addrspace(1)* %14, null
  br i1 %15, label %24, label %16

; <label>:16                                      ; preds = %13
  %17 = load %System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)** %arg3
  %18 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %17, align 8
  store %System.Text.StringBuilder addrspace(1)* %18, %System.Text.StringBuilder addrspace(1)** %loc1
  %19 = load i32, i32* %loc0
  %20 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %loc1
  %21 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %20, i32 0, i32 4
  %22 = load i32, i32 addrspace(1)* %21, align 8
  %23 = sub i32 %19, %22
  store i32 %23, i32* %loc2
  br label %24

; <label>:24                                      ; preds = %13, %16
  %25 = load i32, i32* %arg1
  %26 = load %System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)** %arg3
  %27 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %26, align 8
  %28 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %27, i32 0, i32 4
  %29 = load i32, i32 addrspace(1)* %28, align 8
  %30 = sub i32 %25, %29
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %48, label %32

; <label>:32                                      ; preds = %24
  %33 = load i32 addrspace(1)*, i32 addrspace(1)** %arg4
  %34 = load i32, i32* %arg1
  %35 = load %System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)** %arg3
  %36 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %35, align 8
  %37 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %36, i32 0, i32 4
  %38 = load i32, i32 addrspace(1)* %37, align 8
  %39 = sub i32 %34, %38
  store i32 %39, i32 addrspace(1)* %33, align 8
  br label %54

; <label>:40                                      ; preds = %5
  %41 = load %System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)** %arg3
  %42 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %41, align 8
  %43 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %42, i32 0, i32 4
  %44 = load i32, i32 addrspace(1)* %43, align 8
  %45 = load i32, i32* %arg2
  %46 = sub i32 %44, %45
  %47 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %42, i32 0, i32 4
  store i32 %46, i32 addrspace(1)* %47
  br label %48

; <label>:48                                      ; preds = %24, %40
  %49 = load %System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)** %arg3
  %50 = load %System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)** %arg3
  %51 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %50, align 8
  %52 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %51, i32 0, i32 2
  %53 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %52, align 8
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* addrspace(1)* %49, %System.Text.StringBuilder addrspace(1)* %53)
  br label %5

; <label>:54                                      ; preds = %32
  %55 = load i32 addrspace(1)*, i32 addrspace(1)** %arg4
  %56 = load i32, i32 addrspace(1)* %55, align 8
  store i32 %56, i32* %loc3
  %57 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %loc1
  %58 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %57, i32 0, i32 3
  %59 = load i32, i32 addrspace(1)* %58, align 8
  %60 = load i32, i32* %loc2
  %61 = sub i32 %59, %60
  store i32 %61, i32* %loc4
  %62 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %loc1
  %63 = load %System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)** %arg3
  %64 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %63, align 8
  %65 = icmp eq %System.Text.StringBuilder addrspace(1)* %62, %64
  br i1 %65, label %99, label %66

; <label>:66                                      ; preds = %54
  store i32 0, i32* %loc3
  %67 = load %System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)** %arg3
  %68 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %67, align 8
  %69 = load i32 addrspace(1)*, i32 addrspace(1)** %arg4
  %70 = load i32, i32 addrspace(1)* %69, align 8
  %71 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %68, i32 0, i32 3
  store i32 %70, i32 addrspace(1)* %71
  %72 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %loc1
  %73 = load %System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)** %arg3
  %74 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %73, align 8
  %75 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %72, i32 0, i32 2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* addrspace(1)* %75, %System.Text.StringBuilder addrspace(1)* %74)
  %76 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %loc1
  %77 = load %System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)** %arg3
  %78 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %77, align 8
  %79 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %78, i32 0, i32 4
  %80 = load i32, i32 addrspace(1)* %79, align 8
  %81 = load %System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)** %arg3
  %82 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %81, align 8
  %83 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %82, i32 0, i32 3
  %84 = load i32, i32 addrspace(1)* %83, align 8
  %85 = add i32 %80, %84
  %86 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %76, i32 0, i32 4
  store i32 %85, i32 addrspace(1)* %86
  %87 = load i32 addrspace(1)*, i32 addrspace(1)** %arg4
  %88 = load i32, i32 addrspace(1)* %87, align 8
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %99, label %90

; <label>:90                                      ; preds = %66
  %91 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %loc1
  %92 = load %System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)** %arg3
  %93 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %92, align 8
  %94 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %93, i32 0, i32 2
  %95 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %94, align 8
  %96 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %91, i32 0, i32 2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* addrspace(1)* %96, %System.Text.StringBuilder addrspace(1)* %95)
  %97 = load %System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)* addrspace(1)** %arg3
  %98 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %loc1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* addrspace(1)* %97, %System.Text.StringBuilder addrspace(1)* %98)
  br label %99

; <label>:99                                      ; preds = %54, %66, %90
  %100 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %loc1
  %101 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %100, i32 0, i32 3
  %102 = load i32, i32 addrspace(1)* %101, align 8
  %103 = load i32, i32* %loc2
  %104 = load i32, i32* %loc3
  %105 = sub i32 %103, %104
  %106 = sub i32 %102, %105
  %107 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %100, i32 0, i32 3
  store i32 %106, i32 addrspace(1)* %107
  %108 = load i32, i32* %loc3
  %109 = load i32, i32* %loc2
  %110 = icmp eq i32 %108, %109
  br i1 %110, label %121, label %111

; <label>:111                                     ; preds = %99
  %112 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %loc1
  %113 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %112, i32 0, i32 1
  %114 = load %"System.Char[]" addrspace(1)*, %"System.Char[]" addrspace(1)* addrspace(1)* %113, align 8
  %115 = load i32, i32* %loc2
  %116 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %loc1
  %117 = getelementptr inbounds %System.Text.StringBuilder, %System.Text.StringBuilder addrspace(1)* %116, i32 0, i32 1
  %118 = load %"System.Char[]" addrspace(1)*, %"System.Char[]" addrspace(1)* addrspace(1)* %117, align 8
  %119 = load i32, i32* %loc3
  %120 = load i32, i32* %loc4
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Char[]" addrspace(1)*, i32, %"System.Char[]" addrspace(1)*, i32, i32)*)(%"System.Char[]" addrspace(1)* %114, i32 %115, %"System.Char[]" addrspace(1)* %118, i32 %119, i32 %120)
  br label %121

; <label>:121                                     ; preds = %99, %111
  ret void
}

INFO:  jitting method StringBuilder::ThreadSafeCopy using LLILCJit
Failed to read StringBuilder.ThreadSafeCopy[loadElemA]
INFO:  jitting method Buffer::_Memmove using LLILCJit
Successfully read Buffer._Memmove

define void @Buffer._Memmove(i8* %param0, i8* %param1, i64 %param2) {
entry:
  %arg0 = alloca i8*
  %arg1 = alloca i8*
  %arg2 = alloca i64
  store i8* %param0, i8** %arg0
  store i8* %param1, i8** %arg1
  store i64 %param2, i64* %arg2
  %0 = load i8*, i8** %arg0
  %1 = load i8*, i8** %arg1
  %2 = load i64, i64* %arg2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i8*, i8*, i64)*)(i8* %0, i8* %1, i64 %2)
  ret void
}

INFO:  jitting method DomainNeutralILStubClass::IL_STUB_PInvoke using LLILCJit
Failed to read DomainNeutralILStubClass.IL_STUB_PInvoke[publish secret param]
INFO:  jitting method AppDomain::SetDataHelper using LLILCJit
Failed to read AppDomain.SetDataHelper[loadElem]
INFO:  jitting method AppDomain::get_LocalStore using LLILCJit
Successfully read AppDomain.get_LocalStore

define %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)* @AppDomain.get_LocalStore(%System.AppDomain addrspace(1)* %param0) {
entry:
  %this = alloca %System.AppDomain addrspace(1)*
  store %System.AppDomain addrspace(1)* %param0, %System.AppDomain addrspace(1)** %this
  %0 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %this
  %1 = getelementptr inbounds %System.AppDomain, %System.AppDomain addrspace(1)* %0, i32 0, i32 2
  %2 = load %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)*, %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp eq %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)* %2, null
  br i1 %3, label %8, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %this
  %6 = getelementptr inbounds %System.AppDomain, %System.AppDomain addrspace(1)* %5, i32 0, i32 2
  %7 = load %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)*, %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)* addrspace(1)* %6, align 8
  ret %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)* %7

; <label>:8                                       ; preds = %entry
  %9 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %this
  %10 = call %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)*)*)(%"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %10)
  %11 = bitcast %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %10 to %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)*
  %12 = getelementptr inbounds %System.AppDomain, %System.AppDomain addrspace(1)* %9, i32 0, i32 2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)* addrspace(1)*, %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)*)*)(%"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)* addrspace(1)* %12, %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)* %11)
  %13 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %this
  %14 = getelementptr inbounds %System.AppDomain, %System.AppDomain addrspace(1)* %13, i32 0, i32 2
  %15 = load %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)*, %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)* addrspace(1)* %14, align 8
  ret %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)* %15
}

INFO:  jitting method Dictionary`2::.ctor using LLILCJit
Successfully read Dictionary`2..ctor

define void @"Dictionary`2..ctor"(%"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %param0) {
entry:
  %this = alloca %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)*
  store %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)** %this
  %0 = load %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)*, %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)*, i32, %"System.Collections.Generic.IEqualityComparer`1[System.__Canon]" addrspace(1)*)*)(%"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %0, i32 0, %"System.Collections.Generic.IEqualityComparer`1[System.__Canon]" addrspace(1)* null)
  ret void
}

INFO:  jitting method Dictionary`2::TryGetValue using LLILCJit
Failed to read Dictionary`2.TryGetValue[loadElemA]
INFO:  jitting method Dictionary`2::FindEntry using LLILCJit
Failed to read Dictionary`2.FindEntry[non-const derefAddress]
INFO:  jitting method Path::NormalizePath using LLILCJit
Successfully read Path.NormalizePath

define %System.String addrspace(1)* @Path.NormalizePath(%System.String addrspace(1)* %param0, i8 %param1, i32 %param2) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  %arg1 = alloca i8
  %arg2 = alloca i32
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  store i8 %param1, i8* %arg1
  store i32 %param2, i32* %arg2
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %1 = load i8, i8* %arg1
  %2 = zext i8 %1 to i32
  %3 = load i32, i32* %arg2
  %4 = trunc i32 %2 to i8
  %5 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*, i8, i32, i8)*)(%System.String addrspace(1)* %0, i8 %4, i32 %3, i8 1)
  ret %System.String addrspace(1)* %5
}

INFO:  jitting method StringBuilder::.ctor using LLILCJit
Successfully read StringBuilder..ctor

define void @StringBuilder..ctor(%System.Text.StringBuilder addrspace(1)* %param0, %System.String addrspace(1)* %param1, i32 %param2) {
entry:
  %this = alloca %System.Text.StringBuilder addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  %arg2 = alloca i32
  store %System.Text.StringBuilder addrspace(1)* %param0, %System.Text.StringBuilder addrspace(1)** %this
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  store i32 %param2, i32* %arg2
  %0 = load %System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)** %this
  %1 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %2 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %3 = icmp ne %System.String addrspace(1)* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %entry
  br label %9

; <label>:5                                       ; preds = %entry
  %6 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %7 = getelementptr inbounds %System.String, %System.String addrspace(1)* %6, i32 0, i32 1
  %8 = load i32, i32 addrspace(1)* %7
  br label %9

; <label>:9                                       ; preds = %4, %5
  %10 = phi %System.Text.StringBuilder addrspace(1)* [ %0, %4 ], [ %0, %5 ]
  %11 = phi %System.String addrspace(1)* [ %1, %4 ], [ %1, %5 ]
  %12 = phi i32 [ 0, %4 ], [ 0, %5 ]
  %13 = phi i32 [ 0, %4 ], [ %8, %5 ]
  %14 = load i32, i32* %arg2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.StringBuilder addrspace(1)*, %System.String addrspace(1)*, i32, i32, i32)*)(%System.Text.StringBuilder addrspace(1)* %10, %System.String addrspace(1)* %11, i32 %12, i32 %13, i32 %14)
  ret void
}

INFO:  jitting method HashHelpers::ExpandPrime using LLILCJit
Successfully read HashHelpers.ExpandPrime

define i32 @HashHelpers.ExpandPrime(i32 %param0) {
entry:
  %arg0 = alloca i32
  %loc0 = alloca i32
  store i32 %param0, i32* %arg0
  %0 = load i32, i32* %arg0
  %1 = mul i32 2, %0
  store i32 %1, i32* %loc0
  %2 = load i32, i32* %loc0
  %3 = icmp ule i32 %2, 2146435069
  br i1 %3, label %8, label %4

; <label>:4                                       ; preds = %entry
  %5 = load i32, i32* %arg0
  %6 = icmp sle i32 2146435069, %5
  br i1 %6, label %8, label %7

; <label>:7                                       ; preds = %4
  ret i32 2146435069

; <label>:8                                       ; preds = %entry, %4
  %9 = load i32, i32* %loc0
  %10 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (i32)*)(i32 %9)
  ret i32 %10
}

INFO:  jitting method Dictionary`2::Resize using LLILCJit
Failed to read Dictionary`2.Resize[non-const derefAddress]
INFO:  jitting method DomainNeutralILStubClass::IL_STUB_PInvoke using LLILCJit
Failed to read DomainNeutralILStubClass.IL_STUB_PInvoke[publish secret param]
INFO:  jitting method AppDomain::CreateAppDomainManager using LLILCJit
Failed to read AppDomain.CreateAppDomainManager[methodNeedsSecurityCheck]
INFO:  jitting method AppDomain::get_FusionStore using LLILCJit
Successfully read AppDomain.get_FusionStore

define %System.AppDomainSetup addrspace(1)* @AppDomain.get_FusionStore(%System.AppDomain addrspace(1)* %param0) {
entry:
  %this = alloca %System.AppDomain addrspace(1)*
  store %System.AppDomain addrspace(1)* %param0, %System.AppDomain addrspace(1)** %this
  %0 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %this
  %1 = getelementptr inbounds %System.AppDomain, %System.AppDomain addrspace(1)* %0, i32 0, i32 3
  %2 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)* addrspace(1)* %1, align 8
  ret %System.AppDomainSetup addrspace(1)* %2
}

INFO:  jitting method AppDomain::GetData using LLILCJit
Failed to read AppDomain.GetData[convertToHelperArgumentType]
INFO:  jitting method AppDomainSetup::Locate using LLILCJit
Successfully read AppDomainSetup.Locate

define i32 @AppDomainSetup.Locate(%System.String addrspace(1)* %param0) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %1 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %0)
  %2 = zext i8 %1 to i32
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %entry
  ret i32 -1

; <label>:5                                       ; preds = %entry
  %6 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %7 = getelementptr inbounds %System.String, %System.String addrspace(1)* %6, i32 0, i32 2, i32 0
  %8 = load i16, i16 addrspace(1)* %7
  %9 = zext i16 %8 to i32
  %10 = icmp ne i32 %9, 65
  br i1 %10, label %18, label %11

; <label>:11                                      ; preds = %5
  %12 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %13 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %14 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %12, %System.String addrspace(1)* %13)
  %15 = zext i8 %14 to i32
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

; <label>:17                                      ; preds = %11
  ret i32 0

; <label>:18                                      ; preds = %5, %11
  ret i32 -1
}

INFO:  jitting method AppDomainSetup::get_LoaderOptimizationKey using LLILCJit
Successfully read AppDomainSetup.get_LoaderOptimizationKey

define %System.String addrspace(1)* @AppDomainSetup.get_LoaderOptimizationKey() {
entry:
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  ret %System.String addrspace(1)* %0
}

INFO:  jitting method String::Equals using LLILCJit
Successfully read String.Equals

define i8 @String.Equals(%System.String addrspace(1)* %param0, %System.String addrspace(1)* %param1) {
entry:
  %this = alloca %System.String addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %this
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %this
  %1 = icmp ne %System.String addrspace(1)* %0, null
  br i1 %1, label %4, label %2

; <label>:2                                       ; preds = %entry
  %3 = call %System.NullReferenceException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.NullReferenceException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.NullReferenceException addrspace(1)*)*)(%System.NullReferenceException addrspace(1)* %3)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.NullReferenceException addrspace(1)*)*)(%System.NullReferenceException addrspace(1)* %3) #0
  unreachable

; <label>:4                                       ; preds = %entry
  %5 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %6 = icmp ne %System.String addrspace(1)* %5, null
  br i1 %6, label %8, label %7

; <label>:7                                       ; preds = %4
  ret i8 0

; <label>:8                                       ; preds = %4
  %9 = load %System.String addrspace(1)*, %System.String addrspace(1)** %this
  %10 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %11 = bitcast %System.String addrspace(1)* %9 to %System.Object addrspace(1)*
  %12 = bitcast %System.String addrspace(1)* %10 to %System.Object addrspace(1)*
  %13 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.Object addrspace(1)*, %System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %11, %System.Object addrspace(1)* %12)
  %14 = zext i8 %13 to i32
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

; <label>:16                                      ; preds = %8
  ret i8 1

; <label>:17                                      ; preds = %8
  %18 = load %System.String addrspace(1)*, %System.String addrspace(1)** %this
  %19 = getelementptr inbounds %System.String, %System.String addrspace(1)* %18, i32 0, i32 1
  %20 = load i32, i32 addrspace(1)* %19
  %21 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %22 = getelementptr inbounds %System.String, %System.String addrspace(1)* %21, i32 0, i32 1
  %23 = load i32, i32 addrspace(1)* %22
  %24 = icmp eq i32 %20, %23
  br i1 %24, label %26, label %25

; <label>:25                                      ; preds = %17
  ret i8 0

; <label>:26                                      ; preds = %17
  %27 = load %System.String addrspace(1)*, %System.String addrspace(1)** %this
  %28 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %29 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %27, %System.String addrspace(1)* %28)
  %30 = zext i8 %29 to i32
  %31 = trunc i32 %30 to i8
  ret i8 %31
}

INFO:  jitting method GenericEqualityComparer`1::Equals using LLILCJit
Failed to read GenericEqualityComparer`1.Equals[non-const derefAddress]
INFO:  jitting method AppDomain::SetupBindingPaths using LLILCJit
Successfully read AppDomain.SetupBindingPaths

define void @AppDomain.SetupBindingPaths(%System.AppDomain addrspace(1)* %param0, %System.String addrspace(1)* %param1, %System.String addrspace(1)* %param2, %System.String addrspace(1)* %param3, %System.String addrspace(1)* %param4, %System.String addrspace(1)* %param5) {
entry:
  %this = alloca %System.AppDomain addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  %arg2 = alloca %System.String addrspace(1)*
  %arg3 = alloca %System.String addrspace(1)*
  %arg4 = alloca %System.String addrspace(1)*
  %arg5 = alloca %System.String addrspace(1)*
  store %System.AppDomain addrspace(1)* %param0, %System.AppDomain addrspace(1)** %this
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  store %System.String addrspace(1)* %param2, %System.String addrspace(1)** %arg2
  store %System.String addrspace(1)* %param3, %System.String addrspace(1)** %arg3
  store %System.String addrspace(1)* %param4, %System.String addrspace(1)** %arg4
  store %System.String addrspace(1)* %param5, %System.String addrspace(1)** %arg5
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %1 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg2
  %2 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg3
  %3 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg4
  %4 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg5
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %0, %System.String addrspace(1)* %1, %System.String addrspace(1)* %2, %System.String addrspace(1)* %3, %System.String addrspace(1)* %4)
  ret void
}

INFO:  jitting method DomainNeutralILStubClass::IL_STUB_PInvoke using LLILCJit
Failed to read DomainNeutralILStubClass.IL_STUB_PInvoke[publish secret param]
INFO:  jitting method AppDomain::GetAppDomainManagerType using LLILCJit
Failed to read AppDomain.GetAppDomainManagerType[Return refany or value class]
INFO:  jitting method AppDomain::GetNativeHandle using LLILCJit
Successfully read AppDomain.GetNativeHandle

define %System.AppDomainHandle @AppDomain.GetNativeHandle(%System.AppDomain addrspace(1)* %param0) {
entry:
  %this = alloca %System.AppDomain addrspace(1)*
  %0 = alloca %System.AppDomainHandle
  store %System.AppDomain addrspace(1)* %param0, %System.AppDomain addrspace(1)** %this
  %1 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %this
  %NullCheck = icmp ne %System.AppDomain addrspace(1)* %1, null
  br i1 %NullCheck, label %2, label %ThrowNullRef

; <label>:2                                       ; preds = %entry
  %3 = getelementptr inbounds %System.AppDomain, %System.AppDomain addrspace(1)* %1, i32 0, i32 15
  %4 = bitcast i64 addrspace(1)* %3 to %System.IntPtr addrspace(1)*
  %5 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.IntPtr addrspace(1)*)*)(%System.IntPtr addrspace(1)* %4)
  %6 = zext i8 %5 to i32
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %12, label %8

; <label>:8                                       ; preds = %2
  %9 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %10 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %9)
  %11 = call %System.InvalidOperationException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.InvalidOperationException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.InvalidOperationException addrspace(1)*, %System.String addrspace(1)*)*)(%System.InvalidOperationException addrspace(1)* %11, %System.String addrspace(1)* %10)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.InvalidOperationException addrspace(1)*)*)(%System.InvalidOperationException addrspace(1)* %11) #1
  unreachable

; <label>:12                                      ; preds = %2
  %13 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %this
  %14 = getelementptr inbounds %System.AppDomain, %System.AppDomain addrspace(1)* %13, i32 0, i32 15
  %15 = load i64, i64 addrspace(1)* %14, align 8
  %16 = bitcast %System.AppDomainHandle* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* %16, i8 0, i64 8, i32 0, i1 false)
  %17 = addrspacecast %System.AppDomainHandle* %0 to %System.AppDomainHandle addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.AppDomainHandle addrspace(1)*, i64)*)(%System.AppDomainHandle addrspace(1)* %17, i64 %15)
  %18 = load %System.AppDomainHandle, %System.AppDomainHandle* %0
  ret %System.AppDomainHandle %18

ThrowNullRef:                                     ; preds = %entry
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #1
  unreachable
}

INFO:  jitting method IntPtr::IsNull using LLILCJit
Successfully read IntPtr.IsNull

define i8 @IntPtr.IsNull(%System.IntPtr addrspace(1)* %param0) {
entry:
  %this = alloca %System.IntPtr addrspace(1)*
  store %System.IntPtr addrspace(1)* %param0, %System.IntPtr addrspace(1)** %this
  %0 = load %System.IntPtr addrspace(1)*, %System.IntPtr addrspace(1)** %this
  %1 = getelementptr inbounds %System.IntPtr, %System.IntPtr addrspace(1)* %0, i32 0, i32 0
  %2 = load i16*, i16* addrspace(1)* %1, align 8
  %3 = ptrtoint i16* %2 to i64
  %4 = icmp eq i64 %3, 0
  %5 = sext i1 %4 to i32
  %6 = trunc i32 %5 to i8
  ret i8 %6
}

INFO:  jitting method AppDomainHandle::.ctor using LLILCJit
Successfully read AppDomainHandle..ctor

define void @AppDomainHandle..ctor(%System.AppDomainHandle addrspace(1)* %param0, i64 %param1) {
entry:
  %this = alloca %System.AppDomainHandle addrspace(1)*
  %arg1 = alloca i64
  store %System.AppDomainHandle addrspace(1)* %param0, %System.AppDomainHandle addrspace(1)** %this
  store i64 %param1, i64* %arg1
  %0 = load %System.AppDomainHandle addrspace(1)*, %System.AppDomainHandle addrspace(1)** %this
  %1 = load i64, i64* %arg1
  %2 = getelementptr inbounds %System.AppDomainHandle, %System.AppDomainHandle addrspace(1)* %0, i32 0, i32 0
  store i64 %1, i64 addrspace(1)* %2
  ret void
}

INFO:  jitting method AppDomain::InitializeCompatibilityFlags using LLILCJit
Successfully read AppDomain.InitializeCompatibilityFlags

define void @AppDomain.InitializeCompatibilityFlags(%System.AppDomain addrspace(1)* %param0) {
entry:
  %this = alloca %System.AppDomain addrspace(1)*
  %loc0 = alloca %System.AppDomainSetup addrspace(1)*
  store %System.AppDomain addrspace(1)* %param0, %System.AppDomain addrspace(1)** %this
  %0 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %this
  %1 = call %System.AppDomainSetup addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.AppDomainSetup addrspace(1)* (%System.AppDomain addrspace(1)*)*)(%System.AppDomain addrspace(1)* %0)
  store %System.AppDomainSetup addrspace(1)* %1, %System.AppDomainSetup addrspace(1)** %loc0
  %2 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %loc0
  %NullCheck = icmp ne %System.AppDomainSetup addrspace(1)* %2, null
  br i1 %NullCheck, label %3, label %ThrowNullRef

; <label>:3                                       ; preds = %entry
  %4 = call %"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)* (%System.AppDomainSetup addrspace(1)*)*)(%System.AppDomainSetup addrspace(1)* %2)
  %5 = icmp eq %"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)* %4, null
  br i1 %5, label %17, label %6

; <label>:6                                       ; preds = %3
  %7 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %this
  %8 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %loc0
  %NullCheck2 = icmp ne %System.AppDomainSetup addrspace(1)* %8, null
  br i1 %NullCheck2, label %9, label %ThrowNullRef1

; <label>:9                                       ; preds = %6
  %10 = call %"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)* (%System.AppDomainSetup addrspace(1)*)*)(%System.AppDomainSetup addrspace(1)* %8)
  %11 = call %System.StringComparer addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.StringComparer addrspace(1)* ()*)()
  %12 = bitcast %"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)* %10 to %"System.Collections.Generic.IDictionary`2[System.__Canon,System.__Canon]" addrspace(1)*
  %13 = bitcast %System.StringComparer addrspace(1)* %11 to %"System.Collections.Generic.IEqualityComparer`1[System.__Canon]" addrspace(1)*
  %14 = call %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)*, %"System.Collections.Generic.IDictionary`2[System.__Canon,System.__Canon]" addrspace(1)*, %"System.Collections.Generic.IEqualityComparer`1[System.__Canon]" addrspace(1)*)*)(%"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %14, %"System.Collections.Generic.IDictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %12, %"System.Collections.Generic.IEqualityComparer`1[System.__Canon]" addrspace(1)* %13)
  %15 = bitcast %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %14 to %"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)*
  %16 = getelementptr inbounds %System.AppDomain, %System.AppDomain addrspace(1)* %7, i32 0, i32 14
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)* addrspace(1)*, %"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)*)*)(%"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)* addrspace(1)* %16, %"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)* %15)
  br label %17

; <label>:17                                      ; preds = %3, %9
  %18 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %this
  %19 = getelementptr inbounds %System.AppDomain, %System.AppDomain addrspace(1)* %18, i32 0, i32 18
  store i8 1, i8 addrspace(1)* %19
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)()
  ret void

ThrowNullRef:                                     ; preds = %entry
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef1:                                    ; preds = %6
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method AppDomainSetup::GetCompatibilityFlags using LLILCJit
Successfully read AppDomainSetup.GetCompatibilityFlags

define %"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)* @AppDomainSetup.GetCompatibilityFlags(%System.AppDomainSetup addrspace(1)* %param0) {
entry:
  %this = alloca %System.AppDomainSetup addrspace(1)*
  store %System.AppDomainSetup addrspace(1)* %param0, %System.AppDomainSetup addrspace(1)** %this
  %0 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %this
  %1 = getelementptr inbounds %System.AppDomainSetup, %System.AppDomainSetup addrspace(1)* %0, i32 0, i32 9
  %2 = load %"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)*, %"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)* addrspace(1)* %1, align 8
  ret %"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)* %2
}

INFO:  jitting method StringComparer::get_OrdinalIgnoreCase using LLILCJit
Successfully read StringComparer.get_OrdinalIgnoreCase

define %System.StringComparer addrspace(1)* @StringComparer.get_OrdinalIgnoreCase() {
entry:
  %0 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 88)
  %1 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 80
  %2 = addrspacecast i8 addrspace(1)* %1 to %System.StringComparer addrspace(1)**
  %3 = load %System.StringComparer addrspace(1)*, %System.StringComparer addrspace(1)** %2
  ret %System.StringComparer addrspace(1)* %3
}

INFO:  jitting method Dictionary`2::.ctor using LLILCJit
Failed to read Dictionary`2..ctor[non-const derefAddress]
INFO:  jitting method Dictionary`2::get_Count using LLILCJit
Successfully read Dictionary`2.get_Count

define i32 @"Dictionary`2.get_Count"(%"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %param0) {
entry:
  %this = alloca %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)*
  store %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)** %this
  %0 = load %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)*, %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)** %this
  %1 = getelementptr inbounds %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]", %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %0, i32 0, i32 7
  %2 = load i32, i32 addrspace(1)* %1, align 8
  %3 = load %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)*, %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)** %this
  %4 = getelementptr inbounds %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]", %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %3, i32 0, i32 10
  %5 = load i32, i32 addrspace(1)* %4, align 8
  %6 = sub i32 %2, %5
  ret i32 %6
}

INFO:  jitting method Dictionary`2::System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator using LLILCJit
Failed to read Dictionary`2.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator[Call HasTypeArg]
INFO:  jitting method Enumerator::MoveNext using LLILCJit
Failed to read Enumerator.MoveNext[loadElemA]
INFO:  jitting method Enumerator::get_Current using LLILCJit
Failed to read Enumerator.get_Current[loadNonPrimitiveObj]
INFO:  jitting method OrdinalComparer::GetHashCode using LLILCJit
Successfully read OrdinalComparer.GetHashCode

define i32 @OrdinalComparer.GetHashCode(%System.OrdinalComparer addrspace(1)* %param0, %System.String addrspace(1)* %param1) {
entry:
  %this = alloca %System.OrdinalComparer addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  store %System.OrdinalComparer addrspace(1)* %param0, %System.OrdinalComparer addrspace(1)** %this
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %1 = icmp ne %System.String addrspace(1)* %0, null
  br i1 %1, label %5, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %4 = call %System.ArgumentNullException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentNullException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %4, %System.String addrspace(1)* %3)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %4) #0
  unreachable

; <label>:5                                       ; preds = %entry
  %6 = load %System.OrdinalComparer addrspace(1)*, %System.OrdinalComparer addrspace(1)** %this
  %7 = getelementptr inbounds %System.OrdinalComparer, %System.OrdinalComparer addrspace(1)* %6, i32 0, i32 1
  %8 = load i8, i8 addrspace(1)* %7, align 8
  %9 = zext i8 %8 to i32
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

; <label>:11                                      ; preds = %5
  %12 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %13 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %12)
  ret i32 %13

; <label>:14                                      ; preds = %5
  %15 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %16 = bitcast %System.String addrspace(1)* %15 to i64 addrspace(1)*
  %17 = load i64, i64 addrspace(1)* %16
  %18 = add i64 %17, 64
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19
  %21 = add i64 %20, 16
  %22 = inttoptr i64 %21 to i64*
  %23 = load i64, i64* %22
  %24 = bitcast %System.String addrspace(1)* %15 to %System.Object addrspace(1)*
  %25 = inttoptr i64 %23 to i32 (%System.Object addrspace(1)*)*
  %26 = call i32 %25(%System.Object addrspace(1)* %24)
  ret i32 %26
}

INFO:  jitting method TextInfo::GetHashCodeOrdinalIgnoreCase using LLILCJit
Successfully read TextInfo.GetHashCodeOrdinalIgnoreCase

define i32 @TextInfo.GetHashCodeOrdinalIgnoreCase(%System.String addrspace(1)* %param0) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %1 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.String addrspace(1)*, i8, i64)*)(%System.String addrspace(1)* %0, i8 0, i64 0)
  ret i32 %1
}

INFO:  jitting method TextInfo::GetHashCodeOrdinalIgnoreCase using LLILCJit
Successfully read TextInfo.GetHashCodeOrdinalIgnoreCase

define i32 @TextInfo.GetHashCodeOrdinalIgnoreCase(%System.String addrspace(1)* %param0, i8 %param1, i64 %param2) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  %arg1 = alloca i8
  %arg2 = alloca i64
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  store i8 %param1, i8* %arg1
  store i64 %param2, i64* %arg2
  %0 = call %System.Globalization.TextInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.TextInfo addrspace(1)* ()*)()
  %1 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %2 = load i8, i8* %arg1
  %3 = zext i8 %2 to i32
  %4 = load i64, i64* %arg2
  %NullCheck = icmp ne %System.Globalization.TextInfo addrspace(1)* %0, null
  br i1 %NullCheck, label %5, label %ThrowNullRef

; <label>:5                                       ; preds = %entry
  %6 = trunc i32 %3 to i8
  %7 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.Globalization.TextInfo addrspace(1)*, %System.String addrspace(1)*, i8, i64)*)(%System.Globalization.TextInfo addrspace(1)* %0, %System.String addrspace(1)* %1, i8 %6, i64 %4)
  ret i32 %7

ThrowNullRef:                                     ; preds = %entry
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method TextInfo::get_Invariant using LLILCJit
Successfully read TextInfo.get_Invariant

define %System.Globalization.TextInfo addrspace(1)* @TextInfo.get_Invariant() {
entry:
  %0 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 1012)
  %1 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 2032
  %2 = addrspacecast i8 addrspace(1)* %1 to %System.Globalization.TextInfo addrspace(1)**
  %3 = load volatile %System.Globalization.TextInfo addrspace(1)*, %System.Globalization.TextInfo addrspace(1)** %2
  %4 = icmp ne %System.Globalization.TextInfo addrspace(1)* %3, null
  br i1 %4, label %10, label %5

; <label>:5                                       ; preds = %entry
  %6 = call %System.Globalization.CultureData addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureData addrspace(1)* ()*)()
  %7 = call %System.Globalization.TextInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.TextInfo addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Globalization.TextInfo addrspace(1)*, %System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.TextInfo addrspace(1)* %7, %System.Globalization.CultureData addrspace(1)* %6)
  %8 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 1012)
  %9 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 2032
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i8 addrspace(1)*, %System.Globalization.TextInfo addrspace(1)*)*)(i8 addrspace(1)* %9, %System.Globalization.TextInfo addrspace(1)* %7)
  fence seq_cst
  br label %10

; <label>:10                                      ; preds = %entry, %5
  %11 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 1012)
  %12 = getelementptr inbounds i8, i8 addrspace(1)* %11, i64 2032
  %13 = addrspacecast i8 addrspace(1)* %12 to %System.Globalization.TextInfo addrspace(1)**
  %14 = load volatile %System.Globalization.TextInfo addrspace(1)*, %System.Globalization.TextInfo addrspace(1)** %13
  ret %System.Globalization.TextInfo addrspace(1)* %14
}

INFO:  jitting method TextInfo::.ctor using LLILCJit
Successfully read TextInfo..ctor

define void @TextInfo..ctor(%System.Globalization.TextInfo addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)* %param1) {
entry:
  %this = alloca %System.Globalization.TextInfo addrspace(1)*
  %arg1 = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.TextInfo addrspace(1)* %param0, %System.Globalization.TextInfo addrspace(1)** %this
  store %System.Globalization.CultureData addrspace(1)* %param1, %System.Globalization.CultureData addrspace(1)** %arg1
  %0 = load %System.Globalization.TextInfo addrspace(1)*, %System.Globalization.TextInfo addrspace(1)** %this
  %1 = bitcast %System.Globalization.TextInfo addrspace(1)* %0 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %1)
  %2 = load %System.Globalization.TextInfo addrspace(1)*, %System.Globalization.TextInfo addrspace(1)** %this
  %3 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %arg1
  %4 = getelementptr inbounds %System.Globalization.TextInfo, %System.Globalization.TextInfo addrspace(1)* %2, i32 0, i32 3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Globalization.CultureData addrspace(1)* addrspace(1)*, %System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* addrspace(1)* %4, %System.Globalization.CultureData addrspace(1)* %3)
  %5 = load %System.Globalization.TextInfo addrspace(1)*, %System.Globalization.TextInfo addrspace(1)** %this
  %6 = load %System.Globalization.TextInfo addrspace(1)*, %System.Globalization.TextInfo addrspace(1)** %this
  %7 = getelementptr inbounds %System.Globalization.TextInfo, %System.Globalization.TextInfo addrspace(1)* %6, i32 0, i32 3
  %8 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)* addrspace(1)* %7, align 8
  %NullCheck = icmp ne %System.Globalization.CultureData addrspace(1)* %8, null
  br i1 %NullCheck, label %9, label %ThrowNullRef

; <label>:9                                       ; preds = %entry
  %10 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %8)
  %11 = getelementptr inbounds %System.Globalization.TextInfo, %System.Globalization.TextInfo addrspace(1)* %5, i32 0, i32 2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %11, %System.String addrspace(1)* %10)
  %12 = load %System.Globalization.TextInfo addrspace(1)*, %System.Globalization.TextInfo addrspace(1)** %this
  %13 = load %System.Globalization.TextInfo addrspace(1)*, %System.Globalization.TextInfo addrspace(1)** %this
  %14 = getelementptr inbounds %System.Globalization.TextInfo, %System.Globalization.TextInfo addrspace(1)* %13, i32 0, i32 3
  %15 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)* addrspace(1)* %14, align 8
  %NullCheck2 = icmp ne %System.Globalization.CultureData addrspace(1)* %15, null
  br i1 %NullCheck2, label %16, label %ThrowNullRef1

; <label>:16                                      ; preds = %9
  %17 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %15)
  %18 = getelementptr inbounds %System.Globalization.TextInfo, %System.Globalization.TextInfo addrspace(1)* %12, i32 0, i32 4
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %18, %System.String addrspace(1)* %17)
  ret void

ThrowNullRef:                                     ; preds = %entry
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef1:                                    ; preds = %9
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method CultureData::get_STEXTINFO using LLILCJit
Successfully read CultureData.get_STEXTINFO

define %System.String addrspace(1)* @CultureData.get_STEXTINFO(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 2
  %2 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %1, align 8
  ret %System.String addrspace(1)* %2
}

INFO:  jitting method TextInfo::GetCaseInsensitiveHashCode using LLILCJit
Successfully read TextInfo.GetCaseInsensitiveHashCode

define i32 @TextInfo.GetCaseInsensitiveHashCode(%System.Globalization.TextInfo addrspace(1)* %param0, %System.String addrspace(1)* %param1, i8 %param2, i64 %param3) {
entry:
  %this = alloca %System.Globalization.TextInfo addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  %arg2 = alloca i8
  %arg3 = alloca i64
  store %System.Globalization.TextInfo addrspace(1)* %param0, %System.Globalization.TextInfo addrspace(1)** %this
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  store i8 %param2, i8* %arg2
  store i64 %param3, i64* %arg3
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %1 = icmp ne %System.String addrspace(1)* %0, null
  br i1 %1, label %5, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %4 = call %System.ArgumentNullException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentNullException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %4, %System.String addrspace(1)* %3)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %4) #0
  unreachable

; <label>:5                                       ; preds = %entry
  %6 = load %System.Globalization.TextInfo addrspace(1)*, %System.Globalization.TextInfo addrspace(1)** %this
  %7 = getelementptr inbounds %System.Globalization.TextInfo, %System.Globalization.TextInfo addrspace(1)* %6, i32 0, i32 6
  %8 = load i64, i64 addrspace(1)* %7, align 8
  %9 = load %System.Globalization.TextInfo addrspace(1)*, %System.Globalization.TextInfo addrspace(1)** %this
  %10 = getelementptr inbounds %System.Globalization.TextInfo, %System.Globalization.TextInfo addrspace(1)* %9, i32 0, i32 7
  %11 = load i64, i64 addrspace(1)* %10, align 8
  %12 = load %System.Globalization.TextInfo addrspace(1)*, %System.Globalization.TextInfo addrspace(1)** %this
  %13 = getelementptr inbounds %System.Globalization.TextInfo, %System.Globalization.TextInfo addrspace(1)* %12, i32 0, i32 4
  %14 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %13, align 8
  %15 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %16 = load i8, i8* %arg2
  %17 = zext i8 %16 to i32
  %18 = load i64, i64* %arg3
  %19 = trunc i32 %17 to i8
  %20 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (i64, i64, %System.String addrspace(1)*, %System.String addrspace(1)*, i8, i64)*)(i64 %8, i64 %11, %System.String addrspace(1)* %14, %System.String addrspace(1)* %15, i8 %19, i64 %18)
  ret i32 %20
}

INFO:  jitting method Enumerator::Dispose using LLILCJit
Successfully read Enumerator.Dispose

define void @Enumerator.Dispose(%"System.Collections.Generic.Dictionary`2+Enumerator[System.__Canon,System.__Canon]" addrspace(1)* %param0, %System.RuntimeTypeHandle* %param1) {
entry:
  %this = alloca %"System.Collections.Generic.Dictionary`2+Enumerator[System.__Canon,System.__Canon]" addrspace(1)*
  %"$TypeArg" = alloca %System.RuntimeTypeHandle*
  store %"System.Collections.Generic.Dictionary`2+Enumerator[System.__Canon,System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.Dictionary`2+Enumerator[System.__Canon,System.__Canon]" addrspace(1)** %this
  store %System.RuntimeTypeHandle* %param1, %System.RuntimeTypeHandle** %"$TypeArg"
  ret void
}

INFO:  jitting method CompatibilitySwitches::InitializeSwitches using LLILCJit
Successfully read CompatibilitySwitches.InitializeSwitches

define void @CompatibilitySwitches.InitializeSwitches() {
entry:
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %1 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %0)
  %2 = zext i8 %1 to i32
  %3 = trunc i32 %2 to i8
  %4 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 154)
  %5 = getelementptr inbounds i8, i8 addrspace(1)* %4, i64 1989
  %6 = addrspacecast i8 addrspace(1)* %5 to i8*
  store i8 %3, i8* %6
  %7 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %8 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %7)
  %9 = zext i8 %8 to i32
  %10 = trunc i32 %9 to i8
  %11 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 154)
  %12 = getelementptr inbounds i8, i8 addrspace(1)* %11, i64 1990
  %13 = addrspacecast i8 addrspace(1)* %12 to i8*
  store i8 %10, i8* %13
  %14 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %15 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %14)
  %16 = zext i8 %15 to i32
  %17 = trunc i32 %16 to i8
  %18 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 154)
  %19 = getelementptr inbounds i8, i8 addrspace(1)* %18, i64 1988
  %20 = addrspacecast i8 addrspace(1)* %19 to i8*
  store i8 %17, i8* %20
  %21 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 154)
  %22 = getelementptr inbounds i8, i8 addrspace(1)* %21, i64 1988
  %23 = addrspacecast i8 addrspace(1)* %22 to i8*
  %24 = load i8, i8* %23
  %25 = zext i8 %24 to i32
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %31, label %27

; <label>:27                                      ; preds = %entry
  %28 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %29 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %28)
  %30 = zext i8 %29 to i32
  br label %32

; <label>:31                                      ; preds = %entry
  br label %32

; <label>:32                                      ; preds = %27, %31
  %33 = phi i32 [ %30, %27 ], [ 1, %31 ]
  %34 = trunc i32 %33 to i8
  %35 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 154)
  %36 = getelementptr inbounds i8, i8 addrspace(1)* %35, i64 1987
  %37 = addrspacecast i8 addrspace(1)* %36 to i8*
  store i8 %34, i8* %37
  %38 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 154)
  %39 = getelementptr inbounds i8, i8 addrspace(1)* %38, i64 1986
  %40 = addrspacecast i8 addrspace(1)* %39 to i8*
  store i8 1, i8* %40
  ret void
}

INFO:  jitting method CompatibilitySwitches::IsCompatibilitySwitchSet using LLILCJit
Failed to read CompatibilitySwitches.IsCompatibilitySwitchSet[Return refany or value class]
INFO:  jitting method AppDomain::IsCompatibilitySwitchSet using LLILCJit
Successfully read AppDomain.IsCompatibilitySwitchSet

define %"System.Nullable`1[System.Boolean]" @AppDomain.IsCompatibilitySwitchSet(%System.AppDomain addrspace(1)* %param0, %System.String addrspace(1)* %param1) {
entry:
  %this = alloca %System.AppDomain addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  %loc0 = alloca %"System.Nullable`1[System.Boolean]"
  store %System.AppDomain addrspace(1)* %param0, %System.AppDomain addrspace(1)** %this
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  %0 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %this
  %1 = getelementptr inbounds %System.AppDomain, %System.AppDomain addrspace(1)* %0, i32 0, i32 18
  %2 = load i8, i8 addrspace(1)* %1, align 8
  %3 = zext i8 %2 to i32
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %7, label %5

; <label>:5                                       ; preds = %entry
  %6 = addrspacecast %"System.Nullable`1[System.Boolean]"* %loc0 to %"System.Nullable`1[System.Boolean]" addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Nullable`1[System.Boolean]" addrspace(1)*, i32, i32)*)(%"System.Nullable`1[System.Boolean]" addrspace(1)* %6, i32 0, i32 2)
  br label %28

; <label>:7                                       ; preds = %entry
  %8 = addrspacecast %"System.Nullable`1[System.Boolean]"* %loc0 to %"System.Nullable`1[System.Boolean]" addrspace(1)*
  %9 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %this
  %10 = getelementptr inbounds %System.AppDomain, %System.AppDomain addrspace(1)* %9, i32 0, i32 14
  %11 = load %"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)*, %"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)* addrspace(1)* %10, align 8
  %12 = icmp eq %"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)* %11, null
  br i1 %12, label %23, label %13

; <label>:13                                      ; preds = %7
  %14 = load %System.AppDomain addrspace(1)*, %System.AppDomain addrspace(1)** %this
  %15 = getelementptr inbounds %System.AppDomain, %System.AppDomain addrspace(1)* %14, i32 0, i32 14
  %16 = load %"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)*, %"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)* addrspace(1)* %15, align 8
  %17 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %NullCheck = icmp ne %"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)* %16, null
  br i1 %NullCheck, label %18, label %ThrowNullRef

; <label>:18                                      ; preds = %13
  %19 = bitcast %"System.Collections.Generic.Dictionary`2[System.String,System.Object]" addrspace(1)* %16 to %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)*
  %20 = bitcast %System.String addrspace(1)* %17 to %System.__Canon addrspace(1)*
  %21 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)*, %System.__Canon addrspace(1)*)*)(%"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %19, %System.__Canon addrspace(1)* %20)
  %22 = zext i8 %21 to i32
  br label %24

; <label>:23                                      ; preds = %7
  br label %24

; <label>:24                                      ; preds = %18, %23
  %25 = phi %"System.Nullable`1[System.Boolean]" addrspace(1)* [ %8, %18 ], [ %8, %23 ]
  %26 = phi i32 [ %22, %18 ], [ 0, %23 ]
  %27 = trunc i32 %26 to i8
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Nullable`1[System.Boolean]" addrspace(1)*, i8)*)(%"System.Nullable`1[System.Boolean]" addrspace(1)* %25, i8 %27)
  br label %28

; <label>:28                                      ; preds = %5, %24
  %29 = load %"System.Nullable`1[System.Boolean]", %"System.Nullable`1[System.Boolean]"* %loc0
  ret %"System.Nullable`1[System.Boolean]" %29

ThrowNullRef:                                     ; preds = %13
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method Dictionary`2::ContainsKey using LLILCJit
Successfully read Dictionary`2.ContainsKey

define i8 @"Dictionary`2.ContainsKey"(%"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %param0, %System.__Canon addrspace(1)* %param1) {
entry:
  %this = alloca %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)*
  %arg1 = alloca %System.__Canon addrspace(1)*
  store %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)** %this
  store %System.__Canon addrspace(1)* %param1, %System.__Canon addrspace(1)** %arg1
  %0 = load %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)*, %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)** %this
  %1 = load %System.__Canon addrspace(1)*, %System.__Canon addrspace(1)** %arg1
  %2 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)*, %System.__Canon addrspace(1)*)*)(%"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %0, %System.__Canon addrspace(1)* %1)
  %3 = icmp slt i32 %2, 0
  %4 = sext i1 %3 to i32
  %5 = icmp eq i32 %4, 0
  %6 = sext i1 %5 to i32
  %7 = trunc i32 %6 to i8
  ret i8 %7
}

INFO:  jitting method Nullable`1::.ctor using LLILCJit
Successfully read Nullable`1..ctor

define void @"Nullable`1..ctor"(%"System.Nullable`1[System.Boolean]" addrspace(1)* %param0, i8 %param1) {
entry:
  %this = alloca %"System.Nullable`1[System.Boolean]" addrspace(1)*
  %arg1 = alloca i8
  store %"System.Nullable`1[System.Boolean]" addrspace(1)* %param0, %"System.Nullable`1[System.Boolean]" addrspace(1)** %this
  store i8 %param1, i8* %arg1
  %0 = load %"System.Nullable`1[System.Boolean]" addrspace(1)*, %"System.Nullable`1[System.Boolean]" addrspace(1)** %this
  %1 = load i8, i8* %arg1
  %2 = zext i8 %1 to i32
  %3 = trunc i32 %2 to i8
  %4 = getelementptr inbounds %"System.Nullable`1[System.Boolean]", %"System.Nullable`1[System.Boolean]" addrspace(1)* %0, i32 0, i32 1
  store i8 %3, i8 addrspace(1)* %4
  %5 = load %"System.Nullable`1[System.Boolean]" addrspace(1)*, %"System.Nullable`1[System.Boolean]" addrspace(1)** %this
  %6 = getelementptr inbounds %"System.Nullable`1[System.Boolean]", %"System.Nullable`1[System.Boolean]" addrspace(1)* %5, i32 0, i32 0
  store i8 1, i8 addrspace(1)* %6
  ret void
}

INFO:  jitting method AppDomain::InitializeDomainSecurity using LLILCJit
Failed to read AppDomain.InitializeDomainSecurity[Return refany or value class]
INFO:  jitting method AppDomainSetup::InternalGetApplicationTrust using LLILCJit
Successfully read AppDomainSetup.InternalGetApplicationTrust

define %System.Security.Policy.ApplicationTrust addrspace(1)* @AppDomainSetup.InternalGetApplicationTrust(%System.AppDomainSetup addrspace(1)* %param0) {
entry:
  %this = alloca %System.AppDomainSetup addrspace(1)*
  %loc0 = alloca %System.Security.Policy.ApplicationTrust addrspace(1)*
  store %System.AppDomainSetup addrspace(1)* %param0, %System.AppDomainSetup addrspace(1)** %this
  %0 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %this
  %1 = getelementptr inbounds %System.AppDomainSetup, %System.AppDomainSetup addrspace(1)* %0, i32 0, i32 5
  %2 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %System.String addrspace(1)* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %entry
  ret %System.Security.Policy.ApplicationTrust addrspace(1)* null

; <label>:5                                       ; preds = %entry
  %6 = load %System.AppDomainSetup addrspace(1)*, %System.AppDomainSetup addrspace(1)** %this
  %7 = getelementptr inbounds %System.AppDomainSetup, %System.AppDomainSetup addrspace(1)* %6, i32 0, i32 5
  %8 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %7, align 8
  %9 = call %System.Security.PermissionSet addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Security.PermissionSet addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %8)
  %10 = call %System.Security.Policy.ApplicationTrust addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Security.Policy.ApplicationTrust addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.Policy.ApplicationTrust addrspace(1)*, %System.Security.PermissionSet addrspace(1)*)*)(%System.Security.Policy.ApplicationTrust addrspace(1)* %10, %System.Security.PermissionSet addrspace(1)* %9)
  store %System.Security.Policy.ApplicationTrust addrspace(1)* %10, %System.Security.Policy.ApplicationTrust addrspace(1)** %loc0
  %11 = load %System.Security.Policy.ApplicationTrust addrspace(1)*, %System.Security.Policy.ApplicationTrust addrspace(1)** %loc0
  ret %System.Security.Policy.ApplicationTrust addrspace(1)* %11
}

INFO:  jitting method NamedPermissionSet::GetBuiltInSet using LLILCJit
Successfully read NamedPermissionSet.GetBuiltInSet

define %System.Security.PermissionSet addrspace(1)* @NamedPermissionSet.GetBuiltInSet(%System.String addrspace(1)* %param0) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %1 = icmp ne %System.String addrspace(1)* %0, null
  br i1 %1, label %3, label %2

; <label>:2                                       ; preds = %entry
  ret %System.Security.PermissionSet addrspace(1)* null

; <label>:3                                       ; preds = %entry
  %4 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %5 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %NullCheck = icmp ne %System.String addrspace(1)* %4, null
  br i1 %NullCheck, label %6, label %ThrowNullRef

; <label>:6                                       ; preds = %3
  %7 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %4, %System.String addrspace(1)* %5)
  %8 = zext i8 %7 to i32
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

; <label>:10                                      ; preds = %6
  %11 = call %System.Security.PermissionSet addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Security.PermissionSet addrspace(1)* ()*)()
  ret %System.Security.PermissionSet addrspace(1)* %11

; <label>:12                                      ; preds = %6
  %13 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %14 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %NullCheck2 = icmp ne %System.String addrspace(1)* %13, null
  br i1 %NullCheck2, label %15, label %ThrowNullRef1

; <label>:15                                      ; preds = %12
  %16 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %13, %System.String addrspace(1)* %14)
  %17 = zext i8 %16 to i32
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

; <label>:19                                      ; preds = %15
  %20 = call %System.Security.PermissionSet addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Security.PermissionSet addrspace(1)* ()*)()
  ret %System.Security.PermissionSet addrspace(1)* %20

; <label>:21                                      ; preds = %15
  %22 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %23 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %NullCheck4 = icmp ne %System.String addrspace(1)* %22, null
  br i1 %NullCheck4, label %24, label %ThrowNullRef3

; <label>:24                                      ; preds = %21
  %25 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %22, %System.String addrspace(1)* %23)
  %26 = zext i8 %25 to i32
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28

; <label>:28                                      ; preds = %24
  %29 = call %System.Security.PermissionSet addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Security.PermissionSet addrspace(1)* ()*)()
  ret %System.Security.PermissionSet addrspace(1)* %29

; <label>:30                                      ; preds = %24
  %31 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %32 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %NullCheck6 = icmp ne %System.String addrspace(1)* %31, null
  br i1 %NullCheck6, label %33, label %ThrowNullRef5

; <label>:33                                      ; preds = %30
  %34 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %31, %System.String addrspace(1)* %32)
  %35 = zext i8 %34 to i32
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %39, label %37

; <label>:37                                      ; preds = %33
  %38 = call %System.Security.PermissionSet addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Security.PermissionSet addrspace(1)* ()*)()
  ret %System.Security.PermissionSet addrspace(1)* %38

; <label>:39                                      ; preds = %33
  %40 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %41 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %NullCheck8 = icmp ne %System.String addrspace(1)* %40, null
  br i1 %NullCheck8, label %42, label %ThrowNullRef7

; <label>:42                                      ; preds = %39
  %43 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %40, %System.String addrspace(1)* %41)
  %44 = zext i8 %43 to i32
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %48, label %46

; <label>:46                                      ; preds = %42
  %47 = call %System.Security.PermissionSet addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Security.PermissionSet addrspace(1)* ()*)()
  ret %System.Security.PermissionSet addrspace(1)* %47

; <label>:48                                      ; preds = %42
  ret %System.Security.PermissionSet addrspace(1)* null

ThrowNullRef:                                     ; preds = %3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef1:                                    ; preds = %12
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef3:                                    ; preds = %21
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef5:                                    ; preds = %30
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef7:                                    ; preds = %39
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method NamedPermissionSet::CreateFullTrustSet using LLILCJit
Successfully read NamedPermissionSet.CreateFullTrustSet

define %System.Security.PermissionSet addrspace(1)* @NamedPermissionSet.CreateFullTrustSet() {
entry:
  %0 = call %System.Security.PermissionSet addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Security.PermissionSet addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.PermissionSet addrspace(1)*, i32)*)(%System.Security.PermissionSet addrspace(1)* %0, i32 1)
  ret %System.Security.PermissionSet addrspace(1)* %0
}

INFO:  jitting method PermissionSet::.ctor using LLILCJit
Successfully read PermissionSet..ctor

define void @PermissionSet..ctor(%System.Security.PermissionSet addrspace(1)* %param0, i32 %param1) {
entry:
  %this = alloca %System.Security.PermissionSet addrspace(1)*
  %arg1 = alloca i32
  store %System.Security.PermissionSet addrspace(1)* %param0, %System.Security.PermissionSet addrspace(1)** %this
  store i32 %param1, i32* %arg1
  %0 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.PermissionSet addrspace(1)*)*)(%System.Security.PermissionSet addrspace(1)* %0)
  %1 = load i32, i32* %arg1
  %2 = icmp ne i32 %1, 1
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %entry
  %4 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.PermissionSet addrspace(1)*, i8)*)(%System.Security.PermissionSet addrspace(1)* %4, i8 1)
  ret void

; <label>:5                                       ; preds = %entry
  %6 = load i32, i32* %arg1
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %10, label %8

; <label>:8                                       ; preds = %5
  %9 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.PermissionSet addrspace(1)*, i8)*)(%System.Security.PermissionSet addrspace(1)* %9, i8 0)
  ret void

; <label>:10                                      ; preds = %5
  %11 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %12 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %11)
  %13 = call %System.ArgumentException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %13, %System.String addrspace(1)* %12)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %13) #0
  unreachable
}

INFO:  jitting method PermissionSet::.ctor using LLILCJit
Successfully read PermissionSet..ctor

define void @PermissionSet..ctor(%System.Security.PermissionSet addrspace(1)* %param0) {
entry:
  %this = alloca %System.Security.PermissionSet addrspace(1)*
  store %System.Security.PermissionSet addrspace(1)* %param0, %System.Security.PermissionSet addrspace(1)** %this
  %0 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %1 = bitcast %System.Security.PermissionSet addrspace(1)* %0 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %1)
  %2 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.PermissionSet addrspace(1)*)*)(%System.Security.PermissionSet addrspace(1)* %2)
  %3 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %4 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %3, i32 0, i32 6
  store i8 1, i8 addrspace(1)* %4
  ret void
}

INFO:  jitting method PermissionSet::Reset using LLILCJit
Successfully read PermissionSet.Reset

define void @PermissionSet.Reset(%System.Security.PermissionSet addrspace(1)* %param0) {
entry:
  %this = alloca %System.Security.PermissionSet addrspace(1)*
  store %System.Security.PermissionSet addrspace(1)* %param0, %System.Security.PermissionSet addrspace(1)** %this
  %0 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %1 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %0, i32 0, i32 6
  store i8 0, i8 addrspace(1)* %1
  %2 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %3 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %2, i32 0, i32 7
  store i8 1, i8 addrspace(1)* %3
  %4 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %5 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %4, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.Util.TokenBasedSet addrspace(1)* addrspace(1)*, %System.Security.Util.TokenBasedSet addrspace(1)*)*)(%System.Security.Util.TokenBasedSet addrspace(1)* addrspace(1)* %5, %System.Security.Util.TokenBasedSet addrspace(1)* null)
  %6 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %7 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %6, i32 0, i32 8
  store i8 0, i8 addrspace(1)* %7
  %8 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %9 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %8, i32 0, i32 9
  store i8 0, i8 addrspace(1)* %9
  %10 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %11 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %10, i32 0, i32 10
  store i8 0, i8 addrspace(1)* %11
  %12 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %13 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %12, i32 0, i32 11
  store i8 0, i8 addrspace(1)* %13
  %14 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %15 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %14, i32 0, i32 3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.Util.TokenBasedSet addrspace(1)* addrspace(1)*, %System.Security.Util.TokenBasedSet addrspace(1)*)*)(%System.Security.Util.TokenBasedSet addrspace(1)* addrspace(1)* %15, %System.Security.Util.TokenBasedSet addrspace(1)* null)
  ret void
}

INFO:  jitting method PermissionSet::SetUnrestricted using LLILCJit
Successfully read PermissionSet.SetUnrestricted

define void @PermissionSet.SetUnrestricted(%System.Security.PermissionSet addrspace(1)* %param0, i8 %param1) {
entry:
  %this = alloca %System.Security.PermissionSet addrspace(1)*
  %arg1 = alloca i8
  store %System.Security.PermissionSet addrspace(1)* %param0, %System.Security.PermissionSet addrspace(1)** %this
  store i8 %param1, i8* %arg1
  %0 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %1 = load i8, i8* %arg1
  %2 = zext i8 %1 to i32
  %3 = trunc i32 %2 to i8
  %4 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %0, i32 0, i32 6
  store i8 %3, i8 addrspace(1)* %4
  %5 = load i8, i8* %arg1
  %6 = zext i8 %5 to i32
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

; <label>:8                                       ; preds = %entry
  %9 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %10 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %9, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.Util.TokenBasedSet addrspace(1)* addrspace(1)*, %System.Security.Util.TokenBasedSet addrspace(1)*)*)(%System.Security.Util.TokenBasedSet addrspace(1)* addrspace(1)* %10, %System.Security.Util.TokenBasedSet addrspace(1)* null)
  br label %11

; <label>:11                                      ; preds = %entry, %8
  ret void
}

INFO:  jitting method ApplicationTrust::.ctor using LLILCJit
Successfully read ApplicationTrust..ctor

define void @ApplicationTrust..ctor(%System.Security.Policy.ApplicationTrust addrspace(1)* %param0, %System.Security.PermissionSet addrspace(1)* %param1) {
entry:
  %this = alloca %System.Security.Policy.ApplicationTrust addrspace(1)*
  %arg1 = alloca %System.Security.PermissionSet addrspace(1)*
  store %System.Security.Policy.ApplicationTrust addrspace(1)* %param0, %System.Security.Policy.ApplicationTrust addrspace(1)** %this
  store %System.Security.PermissionSet addrspace(1)* %param1, %System.Security.PermissionSet addrspace(1)** %arg1
  %0 = load %System.Security.Policy.ApplicationTrust addrspace(1)*, %System.Security.Policy.ApplicationTrust addrspace(1)** %this
  %1 = bitcast %System.Security.Policy.ApplicationTrust addrspace(1)* %0 to %System.Security.Policy.EvidenceBase addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.Policy.EvidenceBase addrspace(1)*)*)(%System.Security.Policy.EvidenceBase addrspace(1)* %1)
  %2 = load %System.Security.Policy.ApplicationTrust addrspace(1)*, %System.Security.Policy.ApplicationTrust addrspace(1)** %this
  %3 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %arg1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.Policy.ApplicationTrust addrspace(1)*, %System.Security.PermissionSet addrspace(1)*)*)(%System.Security.Policy.ApplicationTrust addrspace(1)* %2, %System.Security.PermissionSet addrspace(1)* %3)
  %4 = load %System.Security.Policy.ApplicationTrust addrspace(1)*, %System.Security.Policy.ApplicationTrust addrspace(1)** %this
  %5 = call %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)*)*)(%"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)* %5)
  %6 = call %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)* (%"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)*)*)(%"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)* %5)
  %7 = bitcast %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)* %6 to %"System.Collections.Generic.IList`1[System.Security.Policy.StrongName]" addrspace(1)*
  %8 = getelementptr inbounds %System.Security.Policy.ApplicationTrust, %System.Security.Policy.ApplicationTrust addrspace(1)* %4, i32 0, i32 2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Collections.Generic.IList`1[System.Security.Policy.StrongName]" addrspace(1)* addrspace(1)*, %"System.Collections.Generic.IList`1[System.Security.Policy.StrongName]" addrspace(1)*)*)(%"System.Collections.Generic.IList`1[System.Security.Policy.StrongName]" addrspace(1)* addrspace(1)* %8, %"System.Collections.Generic.IList`1[System.Security.Policy.StrongName]" addrspace(1)* %7)
  ret void
}

INFO:  jitting method EvidenceBase::.ctor using LLILCJit
Successfully read EvidenceBase..ctor

define void @EvidenceBase..ctor(%System.Security.Policy.EvidenceBase addrspace(1)* %param0) {
entry:
  %this = alloca %System.Security.Policy.EvidenceBase addrspace(1)*
  store %System.Security.Policy.EvidenceBase addrspace(1)* %param0, %System.Security.Policy.EvidenceBase addrspace(1)** %this
  %0 = load %System.Security.Policy.EvidenceBase addrspace(1)*, %System.Security.Policy.EvidenceBase addrspace(1)** %this
  %1 = bitcast %System.Security.Policy.EvidenceBase addrspace(1)* %0 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %1)
  ret void
}

INFO:  jitting method ApplicationTrust::InitDefaultGrantSet using LLILCJit
Successfully read ApplicationTrust.InitDefaultGrantSet

define void @ApplicationTrust.InitDefaultGrantSet(%System.Security.Policy.ApplicationTrust addrspace(1)* %param0, %System.Security.PermissionSet addrspace(1)* %param1) {
entry:
  %this = alloca %System.Security.Policy.ApplicationTrust addrspace(1)*
  %arg1 = alloca %System.Security.PermissionSet addrspace(1)*
  store %System.Security.Policy.ApplicationTrust addrspace(1)* %param0, %System.Security.Policy.ApplicationTrust addrspace(1)** %this
  store %System.Security.PermissionSet addrspace(1)* %param1, %System.Security.PermissionSet addrspace(1)** %arg1
  %0 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %arg1
  %1 = icmp ne %System.Security.PermissionSet addrspace(1)* %0, null
  br i1 %1, label %5, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %4 = call %System.ArgumentNullException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentNullException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %4, %System.String addrspace(1)* %3)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %4) #0
  unreachable

; <label>:5                                       ; preds = %entry
  %6 = load %System.Security.Policy.ApplicationTrust addrspace(1)*, %System.Security.Policy.ApplicationTrust addrspace(1)** %this
  %7 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %arg1
  %8 = call %System.Security.Policy.PolicyStatement addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Security.Policy.PolicyStatement addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.Policy.PolicyStatement addrspace(1)*, %System.Security.PermissionSet addrspace(1)*)*)(%System.Security.Policy.PolicyStatement addrspace(1)* %8, %System.Security.PermissionSet addrspace(1)* %7)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.Policy.ApplicationTrust addrspace(1)*, %System.Security.Policy.PolicyStatement addrspace(1)*)*)(%System.Security.Policy.ApplicationTrust addrspace(1)* %6, %System.Security.Policy.PolicyStatement addrspace(1)* %8)
  ret void
}

INFO:  jitting method PolicyStatement::.ctor using LLILCJit
Successfully read PolicyStatement..ctor

define void @PolicyStatement..ctor(%System.Security.Policy.PolicyStatement addrspace(1)* %param0, %System.Security.PermissionSet addrspace(1)* %param1) {
entry:
  %this = alloca %System.Security.Policy.PolicyStatement addrspace(1)*
  %arg1 = alloca %System.Security.PermissionSet addrspace(1)*
  store %System.Security.Policy.PolicyStatement addrspace(1)* %param0, %System.Security.Policy.PolicyStatement addrspace(1)** %this
  store %System.Security.PermissionSet addrspace(1)* %param1, %System.Security.PermissionSet addrspace(1)** %arg1
  %0 = load %System.Security.Policy.PolicyStatement addrspace(1)*, %System.Security.Policy.PolicyStatement addrspace(1)** %this
  %1 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %arg1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.Policy.PolicyStatement addrspace(1)*, %System.Security.PermissionSet addrspace(1)*, i32)*)(%System.Security.Policy.PolicyStatement addrspace(1)* %0, %System.Security.PermissionSet addrspace(1)* %1, i32 0)
  ret void
}

INFO:  jitting method PolicyStatement::.ctor using LLILCJit
Successfully read PolicyStatement..ctor

define void @PolicyStatement..ctor(%System.Security.Policy.PolicyStatement addrspace(1)* %param0, %System.Security.PermissionSet addrspace(1)* %param1, i32 %param2) {
entry:
  %this = alloca %System.Security.Policy.PolicyStatement addrspace(1)*
  %arg1 = alloca %System.Security.PermissionSet addrspace(1)*
  %arg2 = alloca i32
  store %System.Security.Policy.PolicyStatement addrspace(1)* %param0, %System.Security.Policy.PolicyStatement addrspace(1)** %this
  store %System.Security.PermissionSet addrspace(1)* %param1, %System.Security.PermissionSet addrspace(1)** %arg1
  store i32 %param2, i32* %arg2
  %0 = load %System.Security.Policy.PolicyStatement addrspace(1)*, %System.Security.Policy.PolicyStatement addrspace(1)** %this
  %1 = bitcast %System.Security.Policy.PolicyStatement addrspace(1)* %0 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %1)
  %2 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %arg1
  %3 = icmp ne %System.Security.PermissionSet addrspace(1)* %2, null
  br i1 %3, label %8, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Security.Policy.PolicyStatement addrspace(1)*, %System.Security.Policy.PolicyStatement addrspace(1)** %this
  %6 = call %System.Security.PermissionSet addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Security.PermissionSet addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.PermissionSet addrspace(1)*, i8)*)(%System.Security.PermissionSet addrspace(1)* %6, i8 0)
  %7 = getelementptr inbounds %System.Security.Policy.PolicyStatement, %System.Security.Policy.PolicyStatement addrspace(1)* %5, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.PermissionSet addrspace(1)* addrspace(1)*, %System.Security.PermissionSet addrspace(1)*)*)(%System.Security.PermissionSet addrspace(1)* addrspace(1)* %7, %System.Security.PermissionSet addrspace(1)* %6)
  br label %22

; <label>:8                                       ; preds = %entry
  %9 = load %System.Security.Policy.PolicyStatement addrspace(1)*, %System.Security.Policy.PolicyStatement addrspace(1)** %this
  %10 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %arg1
  %11 = bitcast %System.Security.PermissionSet addrspace(1)* %10 to i64 addrspace(1)*
  %12 = load i64, i64 addrspace(1)* %11
  %13 = add i64 %12, 72
  %14 = inttoptr i64 %13 to i64*
  %15 = load i64, i64* %14
  %16 = add i64 %15, 32
  %17 = inttoptr i64 %16 to i64*
  %18 = load i64, i64* %17
  %19 = inttoptr i64 %18 to %System.Security.PermissionSet addrspace(1)* (%System.Security.PermissionSet addrspace(1)*)*
  %20 = call %System.Security.PermissionSet addrspace(1)* %19(%System.Security.PermissionSet addrspace(1)* %10)
  %21 = getelementptr inbounds %System.Security.Policy.PolicyStatement, %System.Security.Policy.PolicyStatement addrspace(1)* %9, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.PermissionSet addrspace(1)* addrspace(1)*, %System.Security.PermissionSet addrspace(1)*)*)(%System.Security.PermissionSet addrspace(1)* addrspace(1)* %21, %System.Security.PermissionSet addrspace(1)* %20)
  br label %22

; <label>:22                                      ; preds = %4, %8
  %23 = load i32, i32* %arg2
  %24 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (i32)*)(i32 %23)
  %25 = zext i8 %24 to i32
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %27

; <label>:27                                      ; preds = %22
  %28 = load %System.Security.Policy.PolicyStatement addrspace(1)*, %System.Security.Policy.PolicyStatement addrspace(1)** %this
  %29 = load i32, i32* %arg2
  %30 = getelementptr inbounds %System.Security.Policy.PolicyStatement, %System.Security.Policy.PolicyStatement addrspace(1)* %28, i32 0, i32 2
  store i32 %29, i32 addrspace(1)* %30
  br label %31

; <label>:31                                      ; preds = %22, %27
  ret void
}

INFO:  jitting method PermissionSet::Copy using LLILCJit
Successfully read PermissionSet.Copy

define %System.Security.PermissionSet addrspace(1)* @PermissionSet.Copy(%System.Security.PermissionSet addrspace(1)* %param0) {
entry:
  %this = alloca %System.Security.PermissionSet addrspace(1)*
  store %System.Security.PermissionSet addrspace(1)* %param0, %System.Security.PermissionSet addrspace(1)** %this
  %0 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %1 = call %System.Security.PermissionSet addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Security.PermissionSet addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)*)*)(%System.Security.PermissionSet addrspace(1)* %1, %System.Security.PermissionSet addrspace(1)* %0)
  ret %System.Security.PermissionSet addrspace(1)* %1
}

INFO:  jitting method PermissionSet::.ctor using LLILCJit
Successfully read PermissionSet..ctor

define void @PermissionSet..ctor(%System.Security.PermissionSet addrspace(1)* %param0, %System.Security.PermissionSet addrspace(1)* %param1) {
entry:
  %this = alloca %System.Security.PermissionSet addrspace(1)*
  %arg1 = alloca %System.Security.PermissionSet addrspace(1)*
  %loc0 = alloca i32
  %loc1 = alloca %System.Object addrspace(1)*
  %loc2 = alloca %System.Security.IPermission addrspace(1)*
  store %System.Security.PermissionSet addrspace(1)* %param0, %System.Security.PermissionSet addrspace(1)** %this
  store %System.Security.PermissionSet addrspace(1)* %param1, %System.Security.PermissionSet addrspace(1)** %arg1
  %0 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.PermissionSet addrspace(1)*)*)(%System.Security.PermissionSet addrspace(1)* %0)
  %1 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %arg1
  %2 = icmp ne %System.Security.PermissionSet addrspace(1)* %1, null
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %entry
  %4 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.PermissionSet addrspace(1)*)*)(%System.Security.PermissionSet addrspace(1)* %4)
  ret void

; <label>:5                                       ; preds = %entry
  %6 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %7 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %arg1
  %8 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %7, i32 0, i32 6
  %9 = load i8, i8 addrspace(1)* %8, align 8
  %10 = zext i8 %9 to i32
  %11 = trunc i32 %10 to i8
  %12 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %6, i32 0, i32 6
  store i8 %11, i8 addrspace(1)* %12
  %13 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %14 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %arg1
  %15 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %14, i32 0, i32 9
  %16 = load i8, i8 addrspace(1)* %15, align 8
  %17 = zext i8 %16 to i32
  %18 = trunc i32 %17 to i8
  %19 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %13, i32 0, i32 9
  store i8 %18, i8 addrspace(1)* %19
  %20 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %21 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %arg1
  %22 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %21, i32 0, i32 10
  %23 = load i8, i8 addrspace(1)* %22, align 8
  %24 = zext i8 %23 to i32
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %20, i32 0, i32 10
  store i8 %25, i8 addrspace(1)* %26
  %27 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %28 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %arg1
  %29 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %28, i32 0, i32 11
  %30 = load i8, i8 addrspace(1)* %29, align 8
  %31 = zext i8 %30 to i32
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %27, i32 0, i32 11
  store i8 %32, i8 addrspace(1)* %33
  %34 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %35 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %arg1
  %36 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %35, i32 0, i32 8
  %37 = load i8, i8 addrspace(1)* %36, align 8
  %38 = zext i8 %37 to i32
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %34, i32 0, i32 8
  store i8 %39, i8 addrspace(1)* %40
  %41 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %arg1
  %42 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %41, i32 0, i32 1
  %43 = load %System.Security.Util.TokenBasedSet addrspace(1)*, %System.Security.Util.TokenBasedSet addrspace(1)* addrspace(1)* %42, align 8
  %44 = icmp eq %System.Security.Util.TokenBasedSet addrspace(1)* %43, null
  br i1 %44, label %91, label %45

; <label>:45                                      ; preds = %5
  %46 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %47 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %arg1
  %48 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %47, i32 0, i32 1
  %49 = load %System.Security.Util.TokenBasedSet addrspace(1)*, %System.Security.Util.TokenBasedSet addrspace(1)* addrspace(1)* %48, align 8
  %50 = call %System.Security.Util.TokenBasedSet addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Security.Util.TokenBasedSet addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.Util.TokenBasedSet addrspace(1)*, %System.Security.Util.TokenBasedSet addrspace(1)*)*)(%System.Security.Util.TokenBasedSet addrspace(1)* %50, %System.Security.Util.TokenBasedSet addrspace(1)* %49)
  %51 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %46, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.Util.TokenBasedSet addrspace(1)* addrspace(1)*, %System.Security.Util.TokenBasedSet addrspace(1)*)*)(%System.Security.Util.TokenBasedSet addrspace(1)* addrspace(1)* %51, %System.Security.Util.TokenBasedSet addrspace(1)* %50)
  %52 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %53 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %52, i32 0, i32 1
  %54 = load %System.Security.Util.TokenBasedSet addrspace(1)*, %System.Security.Util.TokenBasedSet addrspace(1)* addrspace(1)* %53, align 8
  %NullCheck = icmp ne %System.Security.Util.TokenBasedSet addrspace(1)* %54, null
  br i1 %NullCheck, label %55, label %ThrowNullRef

; <label>:55                                      ; preds = %45
  %56 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.Security.Util.TokenBasedSet addrspace(1)*)*)(%System.Security.Util.TokenBasedSet addrspace(1)* %54)
  store i32 %56, i32* %loc0
  br label %83

; <label>:57                                      ; preds = %88
  %58 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %59 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %58, i32 0, i32 1
  %60 = load %System.Security.Util.TokenBasedSet addrspace(1)*, %System.Security.Util.TokenBasedSet addrspace(1)* addrspace(1)* %59, align 8
  %61 = load i32, i32* %loc0
  %NullCheck4 = icmp ne %System.Security.Util.TokenBasedSet addrspace(1)* %60, null
  br i1 %NullCheck4, label %62, label %ThrowNullRef3

; <label>:62                                      ; preds = %57
  %63 = call %System.Object addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Object addrspace(1)* (%System.Security.Util.TokenBasedSet addrspace(1)*, i32)*)(%System.Security.Util.TokenBasedSet addrspace(1)* %60, i32 %61)
  store %System.Object addrspace(1)* %63, %System.Object addrspace(1)** %loc1
  %64 = load %System.Object addrspace(1)*, %System.Object addrspace(1)** %loc1
  %65 = call %System.Security.IPermission addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Security.IPermission addrspace(1)* (i64, %System.Object addrspace(1)*)*)(i64 NORMALIZED_ADDRESS, %System.Object addrspace(1)* %64)
  store %System.Security.IPermission addrspace(1)* %65, %System.Security.IPermission addrspace(1)** %loc2
  %66 = load %System.Security.IPermission addrspace(1)*, %System.Security.IPermission addrspace(1)** %loc2
  %67 = icmp eq %System.Security.IPermission addrspace(1)* %66, null
  br i1 %67, label %80, label %68

; <label>:68                                      ; preds = %62
  %69 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %70 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %69, i32 0, i32 1
  %71 = load %System.Security.Util.TokenBasedSet addrspace(1)*, %System.Security.Util.TokenBasedSet addrspace(1)* addrspace(1)* %70, align 8
  %72 = load i32, i32* %loc0
  %73 = load %System.Security.IPermission addrspace(1)*, %System.Security.IPermission addrspace(1)** %loc2
  %74 = load i64, i64* inttoptr (i64 NORMALIZED_ADDRESS to i64*)
  %NullCheck6 = icmp ne %System.Security.IPermission addrspace(1)* %73, null
  br i1 %NullCheck6, label %75, label %ThrowNullRef5

; <label>:75                                      ; preds = %68
  %76 = inttoptr i64 %74 to %System.Security.IPermission addrspace(1)* (%System.Security.IPermission addrspace(1)*)*
  %77 = call %System.Security.IPermission addrspace(1)* %76(%System.Security.IPermission addrspace(1)* %73)
  %NullCheck8 = icmp ne %System.Security.Util.TokenBasedSet addrspace(1)* %71, null
  br i1 %NullCheck8, label %78, label %ThrowNullRef7

; <label>:78                                      ; preds = %75
  %79 = bitcast %System.Security.IPermission addrspace(1)* %77 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.Util.TokenBasedSet addrspace(1)*, i32, %System.Object addrspace(1)*)*)(%System.Security.Util.TokenBasedSet addrspace(1)* %71, i32 %72, %System.Object addrspace(1)* %79)
  br label %80

; <label>:80                                      ; preds = %62, %78
  %81 = load i32, i32* %loc0
  %82 = add i32 %81, 1
  store i32 %82, i32* %loc0
  br label %83

; <label>:83                                      ; preds = %55, %80
  %84 = load i32, i32* %loc0
  %85 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %86 = getelementptr inbounds %System.Security.PermissionSet, %System.Security.PermissionSet addrspace(1)* %85, i32 0, i32 1
  %87 = load %System.Security.Util.TokenBasedSet addrspace(1)*, %System.Security.Util.TokenBasedSet addrspace(1)* addrspace(1)* %86, align 8
  %NullCheck2 = icmp ne %System.Security.Util.TokenBasedSet addrspace(1)* %87, null
  br i1 %NullCheck2, label %88, label %ThrowNullRef1

; <label>:88                                      ; preds = %83
  %89 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.Security.Util.TokenBasedSet addrspace(1)*)*)(%System.Security.Util.TokenBasedSet addrspace(1)* %87)
  %90 = icmp sle i32 %84, %89
  br i1 %90, label %57, label %91

; <label>:91                                      ; preds = %5, %88
  ret void

ThrowNullRef:                                     ; preds = %45
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef1:                                    ; preds = %83
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef3:                                    ; preds = %57
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef5:                                    ; preds = %68
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable

ThrowNullRef7:                                    ; preds = %75
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method PolicyStatement::ValidProperties using LLILCJit
Successfully read PolicyStatement.ValidProperties

define i8 @PolicyStatement.ValidProperties(i32 %param0) {
entry:
  %arg0 = alloca i32
  store i32 %param0, i32* %arg0
  %0 = load i32, i32* %arg0
  %1 = and i32 %0, -4
  %2 = icmp ne i32 %1, 0
  br i1 %2, label %4, label %3

; <label>:3                                       ; preds = %entry
  ret i8 1

; <label>:4                                       ; preds = %entry
  %5 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %6 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %5)
  %7 = call %System.ArgumentException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %7, %System.String addrspace(1)* %6)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %7) #0
  unreachable
}

INFO:  jitting method ApplicationTrust::set_DefaultGrantSet using LLILCJit
Successfully read ApplicationTrust.set_DefaultGrantSet

define void @ApplicationTrust.set_DefaultGrantSet(%System.Security.Policy.ApplicationTrust addrspace(1)* %param0, %System.Security.Policy.PolicyStatement addrspace(1)* %param1) {
entry:
  %this = alloca %System.Security.Policy.ApplicationTrust addrspace(1)*
  %arg1 = alloca %System.Security.Policy.PolicyStatement addrspace(1)*
  store %System.Security.Policy.ApplicationTrust addrspace(1)* %param0, %System.Security.Policy.ApplicationTrust addrspace(1)** %this
  store %System.Security.Policy.PolicyStatement addrspace(1)* %param1, %System.Security.Policy.PolicyStatement addrspace(1)** %arg1
  %0 = load %System.Security.Policy.PolicyStatement addrspace(1)*, %System.Security.Policy.PolicyStatement addrspace(1)** %arg1
  %1 = icmp ne %System.Security.Policy.PolicyStatement addrspace(1)* %0, null
  br i1 %1, label %7, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.Security.Policy.ApplicationTrust addrspace(1)*, %System.Security.Policy.ApplicationTrust addrspace(1)** %this
  %4 = getelementptr inbounds %System.Security.Policy.ApplicationTrust, %System.Security.Policy.ApplicationTrust addrspace(1)* %3, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.Policy.PolicyStatement addrspace(1)* addrspace(1)*, %System.Security.Policy.PolicyStatement addrspace(1)*)*)(%System.Security.Policy.PolicyStatement addrspace(1)* addrspace(1)* %4, %System.Security.Policy.PolicyStatement addrspace(1)* null)
  %5 = load %System.Security.Policy.ApplicationTrust addrspace(1)*, %System.Security.Policy.ApplicationTrust addrspace(1)** %this
  %6 = getelementptr inbounds %System.Security.Policy.ApplicationTrust, %System.Security.Policy.ApplicationTrust addrspace(1)* %5, i32 0, i32 3
  store i32 0, i32 addrspace(1)* %6
  ret void

; <label>:7                                       ; preds = %entry
  %8 = load %System.Security.Policy.ApplicationTrust addrspace(1)*, %System.Security.Policy.ApplicationTrust addrspace(1)** %this
  %9 = load %System.Security.Policy.PolicyStatement addrspace(1)*, %System.Security.Policy.PolicyStatement addrspace(1)** %arg1
  %10 = getelementptr inbounds %System.Security.Policy.ApplicationTrust, %System.Security.Policy.ApplicationTrust addrspace(1)* %8, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.Policy.PolicyStatement addrspace(1)* addrspace(1)*, %System.Security.Policy.PolicyStatement addrspace(1)*)*)(%System.Security.Policy.PolicyStatement addrspace(1)* addrspace(1)* %10, %System.Security.Policy.PolicyStatement addrspace(1)* %9)
  %11 = load %System.Security.Policy.ApplicationTrust addrspace(1)*, %System.Security.Policy.ApplicationTrust addrspace(1)** %this
  %12 = load %System.Security.Policy.ApplicationTrust addrspace(1)*, %System.Security.Policy.ApplicationTrust addrspace(1)** %this
  %13 = getelementptr inbounds %System.Security.Policy.ApplicationTrust, %System.Security.Policy.ApplicationTrust addrspace(1)* %12, i32 0, i32 1
  %14 = load %System.Security.Policy.PolicyStatement addrspace(1)*, %System.Security.Policy.PolicyStatement addrspace(1)* addrspace(1)* %13, align 8
  %NullCheck = icmp ne %System.Security.Policy.PolicyStatement addrspace(1)* %14, null
  br i1 %NullCheck, label %15, label %ThrowNullRef

; <label>:15                                      ; preds = %7
  %16 = call %System.Security.PermissionSet addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Security.PermissionSet addrspace(1)* (%System.Security.Policy.PolicyStatement addrspace(1)*)*)(%System.Security.Policy.PolicyStatement addrspace(1)* %14)
  %17 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)*)*)(%System.Security.PermissionSet addrspace(1)* %16, %System.Security.PermissionSet addrspace(1)* null)
  %18 = getelementptr inbounds %System.Security.Policy.ApplicationTrust, %System.Security.Policy.ApplicationTrust addrspace(1)* %11, i32 0, i32 3
  store i32 %17, i32 addrspace(1)* %18
  ret void

ThrowNullRef:                                     ; preds = %7
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method PolicyStatement::get_PermissionSet using LLILCJit
Successfully read PolicyStatement.get_PermissionSet

define %System.Security.PermissionSet addrspace(1)* @PolicyStatement.get_PermissionSet(%System.Security.Policy.PolicyStatement addrspace(1)* %param0) {
entry:
  %this = alloca %System.Security.Policy.PolicyStatement addrspace(1)*
  %loc0 = alloca i8
  %loc1 = alloca %System.Security.PermissionSet addrspace(1)*
  %loc2 = alloca %System.Security.Policy.PolicyStatement addrspace(1)*
  store %System.Security.Policy.PolicyStatement addrspace(1)* %param0, %System.Security.Policy.PolicyStatement addrspace(1)** %this
  store i8 0, i8* %loc0
  %0 = load %System.Security.Policy.PolicyStatement addrspace(1)*, %System.Security.Policy.PolicyStatement addrspace(1)** %this
  store %System.Security.Policy.PolicyStatement addrspace(1)* %0, %System.Security.Policy.PolicyStatement addrspace(1)** %loc2
  %1 = addrspacecast i8* %loc0 to i8 addrspace(1)*
  %2 = bitcast %System.Security.Policy.PolicyStatement addrspace(1)* %0 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*, i8 addrspace(1)*)*)(%System.Object addrspace(1)* %2, i8 addrspace(1)* %1)
  %3 = load %System.Security.Policy.PolicyStatement addrspace(1)*, %System.Security.Policy.PolicyStatement addrspace(1)** %this
  %4 = getelementptr inbounds %System.Security.Policy.PolicyStatement, %System.Security.Policy.PolicyStatement addrspace(1)* %3, i32 0, i32 1
  %5 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)* addrspace(1)* %4, align 8
  %6 = bitcast %System.Security.PermissionSet addrspace(1)* %5 to i64 addrspace(1)*
  %7 = load i64, i64 addrspace(1)* %6
  %8 = add i64 %7, 72
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9
  %11 = add i64 %10, 32
  %12 = inttoptr i64 %11 to i64*
  %13 = load i64, i64* %12
  %14 = inttoptr i64 %13 to %System.Security.PermissionSet addrspace(1)* (%System.Security.PermissionSet addrspace(1)*)*
  %15 = call %System.Security.PermissionSet addrspace(1)* %14(%System.Security.PermissionSet addrspace(1)* %5)
  store %System.Security.PermissionSet addrspace(1)* %15, %System.Security.PermissionSet addrspace(1)** %loc1
  br label %16

; <label>:16                                      ; preds = %entry
  %17 = load i8, i8* %loc0
  %18 = zext i8 %17 to i32
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

; <label>:20                                      ; preds = %16
  %21 = load %System.Security.Policy.PolicyStatement addrspace(1)*, %System.Security.Policy.PolicyStatement addrspace(1)** %loc2
  %22 = bitcast %System.Security.Policy.PolicyStatement addrspace(1)* %21 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %22)
  br label %23

; <label>:23                                      ; preds = %16, %20
  br label %24

; <label>:24                                      ; preds = %23
  %25 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %loc1
  ret %System.Security.PermissionSet addrspace(1)* %25
}

INFO:  jitting method SecurityManager::GetSpecialFlags using LLILCJit
Failed to read SecurityManager.GetSpecialFlags[loadElem]
INFO:  jitting method List`1::.ctor using LLILCJit
Failed to read List`1..ctor[non-const derefAddress]
INFO:  jitting method List`1::AsReadOnly using LLILCJit
Failed to read List`1.AsReadOnly[non-const derefAddress]
INFO:  jitting method ReadOnlyCollection`1::.ctor using LLILCJit
Successfully read ReadOnlyCollection`1..ctor

define void @"ReadOnlyCollection`1..ctor"(%"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)* %param1) {
entry:
  %this = alloca %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)*
  %arg1 = alloca %"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)*
  store %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)* %param0, %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)** %this
  store %"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)* %param1, %"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)** %arg1
  %0 = load %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)*, %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)** %this
  %1 = bitcast %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)* %0 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %1)
  %2 = load %"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)*, %"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)** %arg1
  %3 = icmp ne %"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %entry
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i32)*)(i32 7)
  br label %5

; <label>:5                                       ; preds = %entry, %4
  %6 = load %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)*, %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)** %this
  %7 = load %"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)*, %"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)** %arg1
  %8 = getelementptr inbounds %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]", %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)* %6, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)* addrspace(1)*, %"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)*)*)(%"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)* addrspace(1)* %8, %"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)* %7)
  ret void
}

INFO:  jitting method DomainNeutralILStubClass::IL_STUB_PInvoke using LLILCJit
Failed to read DomainNeutralILStubClass.IL_STUB_PInvoke[Struct parameter]
INFO:  jitting method AppDomain::SetupDomainSecurity using LLILCJit
Failed to read AppDomain.SetupDomainSecurity[Return refany or value class]
INFO:  jitting method DomainNeutralILStubClass::IL_STUB_PInvoke using LLILCJit
Failed to read DomainNeutralILStubClass.IL_STUB_PInvoke[Struct parameter]
INFO:  jitting method AppDomain::RunInitializer using LLILCJit
Failed to read AppDomain.RunInitializer[non-const derefAddress]
INFO:  jitting method PermissionSet::.ctor using LLILCJit
Successfully read PermissionSet..ctor

define void @PermissionSet..ctor(%System.Security.PermissionSet addrspace(1)* %param0, i8 %param1) {
entry:
  %this = alloca %System.Security.PermissionSet addrspace(1)*
  %arg1 = alloca i8
  store %System.Security.PermissionSet addrspace(1)* %param0, %System.Security.PermissionSet addrspace(1)** %this
  store i8 %param1, i8* %arg1
  %0 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.PermissionSet addrspace(1)*)*)(%System.Security.PermissionSet addrspace(1)* %0)
  %1 = load %System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)** %this
  %2 = load i8, i8* %arg1
  %3 = zext i8 %2 to i32
  %4 = trunc i32 %3 to i8
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.PermissionSet addrspace(1)*, i8)*)(%System.Security.PermissionSet addrspace(1)* %1, i8 %4)
  ret void
}

INFO:  jitting method BringUpTest::Main using LLILCJit
Failed to read BringUpTest.Main[abs]
INFO:  jitting method BringUpTest::FPCall2 using LLILCJit
Successfully read BringUpTest.FPCall2

define float @BringUpTest.FPCall2(float %param0, float %param1, float %param2, float %param3) {
entry:
  %arg0 = alloca float
  %arg1 = alloca float
  %arg2 = alloca float
  %arg3 = alloca float
  store float %param0, float* %arg0
  store float %param1, float* %arg1
  store float %param2, float* %arg2
  store float %param3, float* %arg3
  %0 = load float, float* %arg0
  %1 = load float, float* %arg1
  %2 = call float inttoptr (i64 NORMALIZED_ADDRESS to float (float, float)*)(float %0, float %1)
  %3 = load float, float* %arg2
  %4 = load float, float* %arg3
  %5 = call float inttoptr (i64 NORMALIZED_ADDRESS to float (float, float)*)(float %3, float %4)
  %6 = call float inttoptr (i64 NORMALIZED_ADDRESS to float (float, float)*)(float %2, float %5)
  ret float %6
}

INFO:  jitting method BringUpTest::FPAvg2 using LLILCJit
Successfully read BringUpTest.FPAvg2

define float @BringUpTest.FPAvg2(float %param0, float %param1) {
entry:
  %arg0 = alloca float
  %arg1 = alloca float
  %loc0 = alloca float
  store float %param0, float* %arg0
  store float %param1, float* %arg1
  %0 = load float, float* %arg0
  %1 = load float, float* %arg1
  %2 = fadd float %0, %1
  %3 = fdiv float %2, 2.000000e+00
  store float %3, float* %loc0
  %4 = load float, float* %loc0
  ret float %4
}

INFO:  jitting method Console::WriteLine using LLILCJit
Successfully read Console.WriteLine

define void @Console.WriteLine(float %param0) {
entry:
  %arg0 = alloca float
  store float %param0, float* %arg0
  %0 = call %System.IO.TextWriter addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.IO.TextWriter addrspace(1)* ()*)()
  %1 = load float, float* %arg0
  %2 = bitcast %System.IO.TextWriter addrspace(1)* %0 to i64 addrspace(1)*
  %3 = load i64, i64 addrspace(1)* %2
  %4 = add i64 %3, 96
  %5 = inttoptr i64 %4 to i64*
  %6 = load i64, i64* %5
  %7 = add i64 %6, 48
  %8 = inttoptr i64 %7 to i64*
  %9 = load i64, i64* %8
  %10 = inttoptr i64 %9 to void (%System.IO.TextWriter addrspace(1)*, float)*
  call void %10(%System.IO.TextWriter addrspace(1)* %0, float %1)
  ret void
}

INFO:  jitting method Console::get_Out using LLILCJit
Failed to read Console.get_Out[Call HasTypeArg]
INFO:  jitting method Console::.cctor using LLILCJit
Successfully read Console..cctor

define void @Console..cctor() {
entry:
  %0 = call %System.Object addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Object addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %0)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i64, %System.Object addrspace(1)*)*)(i64 NORMALIZED_ADDRESS, %System.Object addrspace(1)* %0)
  ret void
}

INFO:  jitting method Console::EnsureInitialized using LLILCJit
Failed to read Console.EnsureInitialized[Call HasTypeArg]
INFO:  jitting method Console::<get_Out>b__2 using LLILCJit
Successfully read Console.<get_Out>b__2

define %System.IO.TextWriter addrspace(1)* @"Console.<get_Out>b__2"() {
entry:
  %0 = call %System.IO.Stream addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.IO.Stream addrspace(1)* ()*)()
  %1 = call %System.IO.TextWriter addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.IO.TextWriter addrspace(1)* (%System.IO.Stream addrspace(1)*)*)(%System.IO.Stream addrspace(1)* %0)
  ret %System.IO.TextWriter addrspace(1)* %1
}

INFO:  jitting method Console::OpenStandardOutput using LLILCJit
Successfully read Console.OpenStandardOutput

define %System.IO.Stream addrspace(1)* @Console.OpenStandardOutput() {
entry:
  %0 = call %System.IO.Stream addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.IO.Stream addrspace(1)* ()*)()
  ret %System.IO.Stream addrspace(1)* %0
}

INFO:  jitting method ConsolePal::OpenStandardOutput using LLILCJit
Successfully read ConsolePal.OpenStandardOutput

define %System.IO.Stream addrspace(1)* @ConsolePal.OpenStandardOutput() {
entry:
  %0 = call i64 inttoptr (i64 NORMALIZED_ADDRESS to i64 ()*)()
  %1 = call %System.IO.Stream addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.IO.Stream addrspace(1)* (i64, i32)*)(i64 %0, i32 2)
  ret %System.IO.Stream addrspace(1)* %1
}

INFO:  jitting method ConsolePal::get_OutputHandle using LLILCJit
Successfully read ConsolePal.get_OutputHandle

define i64 @ConsolePal.get_OutputHandle() {
entry:
  %0 = call i64 inttoptr (i64 NORMALIZED_ADDRESS to i64 (i32)*)(i32 -11)
  ret i64 %0
}

INFO:  jitting method DomainBoundILStubClass::IL_STUB_PInvoke using LLILCJit
Failed to read DomainBoundILStubClass.IL_STUB_PInvoke[publish secret param]
INFO:  jitting method ConsolePal::GetStandardFile using LLILCJit
Successfully read ConsolePal.GetStandardFile

define %System.IO.Stream addrspace(1)* @ConsolePal.GetStandardFile(i64 %param0, i32 %param1) {
entry:
  %arg0 = alloca i64
  %arg1 = alloca i32
  store i64 %param0, i64* %arg0
  store i32 %param1, i32* %arg1
  %0 = load i64, i64* %arg0
  %1 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (i64, i64)*)(i64 %0, i64 0)
  %2 = zext i8 %1 to i32
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %18, label %4

; <label>:4                                       ; preds = %entry
  %5 = load i64, i64* %arg0
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 1)
  %6 = load i64, i64* inttoptr (i64 NORMALIZED_ADDRESS to i64*)
  %7 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (i64, i64)*)(i64 %5, i64 %6)
  %8 = zext i8 %7 to i32
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %18, label %10

; <label>:10                                      ; preds = %4
  %11 = load i32, i32* %arg1
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %20, label %13

; <label>:13                                      ; preds = %10
  %14 = load i64, i64* %arg0
  %15 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (i64)*)(i64 %14)
  %16 = zext i8 %15 to i32
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %20, label %18

; <label>:18                                      ; preds = %entry, %4, %13
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 1377)
  %19 = load %System.IO.Stream addrspace(1)*, %System.IO.Stream addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.IO.Stream addrspace(1)**)
  ret %System.IO.Stream addrspace(1)* %19

; <label>:20                                      ; preds = %10, %13
  %21 = load i64, i64* %arg0
  %22 = load i32, i32* %arg1
  %23 = call %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.ConsolePal+WindowsConsoleStream" addrspace(1)*, i64, i32)*)(%"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %23, i64 %21, i32 %22)
  %24 = bitcast %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %23 to %System.IO.Stream addrspace(1)*
  ret %System.IO.Stream addrspace(1)* %24
}

INFO:  jitting method IntPtr::op_Equality using LLILCJit
Successfully read IntPtr.op_Equality

define i8 @IntPtr.op_Equality(i64 %param0, i64 %param1) {
entry:
  %arg0 = alloca i64
  %arg1 = alloca i64
  store i64 %param0, i64* %arg0
  store i64 %param1, i64* %arg1
  %0 = addrspacecast i64* %arg0 to i64 addrspace(1)*
  %1 = bitcast i64 addrspace(1)* %0 to i8 addrspace(1)*
  %2 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 0
  %3 = bitcast i8 addrspace(1)* %2 to i16* addrspace(1)*
  %4 = load i16*, i16* addrspace(1)* %3, align 8
  %5 = addrspacecast i64* %arg1 to i64 addrspace(1)*
  %6 = bitcast i64 addrspace(1)* %5 to i8 addrspace(1)*
  %7 = getelementptr inbounds i8, i8 addrspace(1)* %6, i64 0
  %8 = bitcast i8 addrspace(1)* %7 to i16* addrspace(1)*
  %9 = load i16*, i16* addrspace(1)* %8, align 8
  %10 = icmp eq i16* %4, %9
  %11 = sext i1 %10 to i32
  %12 = trunc i32 %11 to i8
  ret i8 %12
}

INFO:  jitting method Interop::.cctor using LLILCJit
Successfully read Interop..cctor

define void @Interop..cctor() {
entry:
  %0 = alloca i64
  %1 = bitcast i64* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 0, i32 0, i1 false)
  %2 = addrspacecast i64* %0 to i64 addrspace(1)*
  %3 = bitcast i64 addrspace(1)* %2 to %System.IntPtr addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IntPtr addrspace(1)*, i32)*)(%System.IntPtr addrspace(1)* %3, i32 -1)
  %4 = load i64, i64* %0
  store i64 %4, i64* inttoptr (i64 NORMALIZED_ADDRESS to i64*)
  ret void
}

INFO:  jitting method IntPtr::.ctor using LLILCJit
Successfully read IntPtr..ctor

define void @IntPtr..ctor(%System.IntPtr addrspace(1)* %param0, i32 %param1) {
entry:
  %this = alloca %System.IntPtr addrspace(1)*
  %arg1 = alloca i32
  store %System.IntPtr addrspace(1)* %param0, %System.IntPtr addrspace(1)** %this
  store i32 %param1, i32* %arg1
  %0 = load %System.IntPtr addrspace(1)*, %System.IntPtr addrspace(1)** %this
  %1 = load i32, i32* %arg1
  %2 = sext i32 %1 to i64
  %3 = inttoptr i64 %2 to i16*
  %4 = getelementptr inbounds %System.IntPtr, %System.IntPtr addrspace(1)* %0, i32 0, i32 0
  store i16* %3, i16* addrspace(1)* %4
  ret void
}

INFO:  jitting method ConsolePal::ConsoleHandleIsWritable using LLILCJit
Successfully read ConsolePal.ConsoleHandleIsWritable

define i8 @ConsolePal.ConsoleHandleIsWritable(i64 %param0) {
entry:
  %arg0 = alloca i64
  %loc0 = alloca i32
  %loc1 = alloca i8
  store i64 %param0, i64* %arg0
  store i8 65, i8* %loc1
  %0 = load i64, i64* %arg0
  %1 = addrspacecast i8* %loc1 to i8 addrspace(1)*
  %2 = ptrtoint i8 addrspace(1)* %1 to i64
  %3 = addrspacecast i32* %loc0 to i32 addrspace(1)*
  %4 = inttoptr i64 %2 to i8*
  %5 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (i64, i8*, i32, i32 addrspace(1)*, i64)*)(i64 %0, i8* %4, i32 0, i32 addrspace(1)* %3, i64 0)
  %6 = icmp ugt i32 %5, 0
  %7 = sext i1 %6 to i32
  %8 = trunc i32 %7 to i8
  ret i8 %8
}

INFO:  jitting method DomainBoundILStubClass::IL_STUB_PInvoke using LLILCJit
Failed to read DomainBoundILStubClass.IL_STUB_PInvoke[publish secret param]
INFO:  jitting method WindowsConsoleStream::.ctor using LLILCJit
Successfully read WindowsConsoleStream..ctor

define void @WindowsConsoleStream..ctor(%"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %param0, i64 %param1, i32 %param2) {
entry:
  %this = alloca %"System.ConsolePal+WindowsConsoleStream" addrspace(1)*
  %arg1 = alloca i64
  %arg2 = alloca i32
  store %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %param0, %"System.ConsolePal+WindowsConsoleStream" addrspace(1)** %this
  store i64 %param1, i64* %arg1
  store i32 %param2, i32* %arg2
  %0 = load %"System.ConsolePal+WindowsConsoleStream" addrspace(1)*, %"System.ConsolePal+WindowsConsoleStream" addrspace(1)** %this
  %1 = load i32, i32* %arg2
  %2 = bitcast %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %0 to %System.IO.ConsoleStream addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.ConsoleStream addrspace(1)*, i32)*)(%System.IO.ConsoleStream addrspace(1)* %2, i32 %1)
  %3 = load %"System.ConsolePal+WindowsConsoleStream" addrspace(1)*, %"System.ConsolePal+WindowsConsoleStream" addrspace(1)** %this
  %4 = load i64, i64* %arg1
  %5 = getelementptr inbounds %"System.ConsolePal+WindowsConsoleStream", %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %3, i32 0, i32 7
  store i64 %4, i64 addrspace(1)* %5
  %6 = load %"System.ConsolePal+WindowsConsoleStream" addrspace(1)*, %"System.ConsolePal+WindowsConsoleStream" addrspace(1)** %this
  %7 = load i64, i64* %arg1
  %8 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (i64)*)(i64 %7)
  %9 = icmp eq i32 %8, 3
  %10 = sext i1 %9 to i32
  %11 = trunc i32 %10 to i8
  %12 = getelementptr inbounds %"System.ConsolePal+WindowsConsoleStream", %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %6, i32 0, i32 5
  store i8 %11, i8 addrspace(1)* %12
  ret void
}

INFO:  jitting method ConsoleStream::.ctor using LLILCJit
Successfully read ConsoleStream..ctor

define void @ConsoleStream..ctor(%System.IO.ConsoleStream addrspace(1)* %param0, i32 %param1) {
entry:
  %this = alloca %System.IO.ConsoleStream addrspace(1)*
  %arg1 = alloca i32
  store %System.IO.ConsoleStream addrspace(1)* %param0, %System.IO.ConsoleStream addrspace(1)** %this
  store i32 %param1, i32* %arg1
  %0 = load %System.IO.ConsoleStream addrspace(1)*, %System.IO.ConsoleStream addrspace(1)** %this
  %1 = bitcast %System.IO.ConsoleStream addrspace(1)* %0 to %System.IO.Stream addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.Stream addrspace(1)*)*)(%System.IO.Stream addrspace(1)* %1)
  %2 = load %System.IO.ConsoleStream addrspace(1)*, %System.IO.ConsoleStream addrspace(1)** %this
  %3 = load i32, i32* %arg1
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 1
  %6 = sext i1 %5 to i32
  %7 = trunc i32 %6 to i8
  %8 = getelementptr inbounds %System.IO.ConsoleStream, %System.IO.ConsoleStream addrspace(1)* %2, i32 0, i32 3
  store i8 %7, i8 addrspace(1)* %8
  %9 = load %System.IO.ConsoleStream addrspace(1)*, %System.IO.ConsoleStream addrspace(1)** %this
  %10 = load i32, i32* %arg1
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 2
  %13 = sext i1 %12 to i32
  %14 = trunc i32 %13 to i8
  %15 = getelementptr inbounds %System.IO.ConsoleStream, %System.IO.ConsoleStream addrspace(1)* %9, i32 0, i32 4
  store i8 %14, i8 addrspace(1)* %15
  ret void
}

INFO:  jitting method Stream::.ctor using LLILCJit
Successfully read Stream..ctor

define void @Stream..ctor(%System.IO.Stream addrspace(1)* %param0) {
entry:
  %this = alloca %System.IO.Stream addrspace(1)*
  store %System.IO.Stream addrspace(1)* %param0, %System.IO.Stream addrspace(1)** %this
  %0 = load %System.IO.Stream addrspace(1)*, %System.IO.Stream addrspace(1)** %this
  %1 = bitcast %System.IO.Stream addrspace(1)* %0 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %1)
  ret void
}

INFO:  jitting method mincore::GetFileType using LLILCJit
Successfully read mincore.GetFileType

define i32 @mincore.GetFileType(i64 %param0) {
entry:
  %arg0 = alloca i64
  store i64 %param0, i64* %arg0
  %0 = load i64, i64* %arg0
  %1 = call i16* inttoptr (i64 NORMALIZED_ADDRESS to i16* (i64)*)(i64 %0)
  %2 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (i16*)*)(i16* %1)
  ret i32 %2
}

INFO:  jitting method IntPtr::op_Explicit using LLILCJit
Successfully read IntPtr.op_Explicit

define i16* @IntPtr.op_Explicit(i64 %param0) {
entry:
  %arg0 = alloca i64
  store i64 %param0, i64* %arg0
  %0 = addrspacecast i64* %arg0 to i64 addrspace(1)*
  %1 = bitcast i64 addrspace(1)* %0 to i8 addrspace(1)*
  %2 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 0
  %3 = bitcast i8 addrspace(1)* %2 to i16* addrspace(1)*
  %4 = load i16*, i16* addrspace(1)* %3, align 8
  ret i16* %4
}

INFO:  jitting method DomainBoundILStubClass::IL_STUB_PInvoke using LLILCJit
Failed to read DomainBoundILStubClass.IL_STUB_PInvoke[publish secret param]
INFO:  jitting method Console::CreateOutputWriter using LLILCJit
Successfully read Console.CreateOutputWriter

define %System.IO.TextWriter addrspace(1)* @Console.CreateOutputWriter(%System.IO.Stream addrspace(1)* %param0) {
entry:
  %arg0 = alloca %System.IO.Stream addrspace(1)*
  store %System.IO.Stream addrspace(1)* %param0, %System.IO.Stream addrspace(1)** %arg0
  %0 = load %System.IO.Stream addrspace(1)*, %System.IO.Stream addrspace(1)** %arg0
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 1377)
  %1 = load %System.IO.Stream addrspace(1)*, %System.IO.Stream addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.IO.Stream addrspace(1)**)
  %2 = icmp eq %System.IO.Stream addrspace(1)* %0, %1
  br i1 %2, label %16, label %3

; <label>:3                                       ; preds = %entry
  %4 = load %System.IO.Stream addrspace(1)*, %System.IO.Stream addrspace(1)** %arg0
  %5 = call %System.Text.Encoding addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.Encoding addrspace(1)* ()*)()
  %6 = call %System.IO.StreamWriter addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.IO.StreamWriter addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.StreamWriter addrspace(1)*, %System.IO.Stream addrspace(1)*, %System.Text.Encoding addrspace(1)*, i32, i8)*)(%System.IO.StreamWriter addrspace(1)* %6, %System.IO.Stream addrspace(1)* %4, %System.Text.Encoding addrspace(1)* %5, i32 256, i8 1)
  %7 = bitcast %System.IO.StreamWriter addrspace(1)* %6 to i64 addrspace(1)*
  %8 = load i64, i64 addrspace(1)* %7
  %9 = add i64 %8, 120
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10
  %12 = add i64 %11, 0
  %13 = inttoptr i64 %12 to i64*
  %14 = load i64, i64* %13
  %15 = inttoptr i64 %14 to void (%System.IO.StreamWriter addrspace(1)*, i8)*
  call void %15(%System.IO.StreamWriter addrspace(1)* %6, i8 1)
  br label %18

; <label>:16                                      ; preds = %entry
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 1436)
  %17 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.IO.StreamWriter addrspace(1)**)
  br label %18

; <label>:18                                      ; preds = %3, %16
  %19 = phi %System.IO.StreamWriter addrspace(1)* [ %6, %3 ], [ %17, %16 ]
  %20 = bitcast %System.IO.StreamWriter addrspace(1)* %19 to %System.IO.TextWriter addrspace(1)*
  %21 = call %System.IO.TextWriter addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.IO.TextWriter addrspace(1)* (%System.IO.TextWriter addrspace(1)*)*)(%System.IO.TextWriter addrspace(1)* %20)
  ret %System.IO.TextWriter addrspace(1)* %21
}

INFO:  jitting method Stream::.cctor using LLILCJit
Successfully read Stream..cctor

define void @Stream..cctor() {
entry:
  %0 = call %"System.IO.Stream+NullStream" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.IO.Stream+NullStream" addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.IO.Stream+NullStream" addrspace(1)*)*)(%"System.IO.Stream+NullStream" addrspace(1)* %0)
  %1 = bitcast %"System.IO.Stream+NullStream" addrspace(1)* %0 to %System.IO.Stream addrspace(1)*
  %2 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 1377)
  %3 = getelementptr inbounds i8, i8 addrspace(1)* %2, i64 2680
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i8 addrspace(1)*, %System.IO.Stream addrspace(1)*)*)(i8 addrspace(1)* %3, %System.IO.Stream addrspace(1)* %1)
  ret void
}

INFO:  jitting method NullStream::.ctor using LLILCJit
Successfully read NullStream..ctor

define void @NullStream..ctor(%"System.IO.Stream+NullStream" addrspace(1)* %param0) {
entry:
  %this = alloca %"System.IO.Stream+NullStream" addrspace(1)*
  store %"System.IO.Stream+NullStream" addrspace(1)* %param0, %"System.IO.Stream+NullStream" addrspace(1)** %this
  %0 = load %"System.IO.Stream+NullStream" addrspace(1)*, %"System.IO.Stream+NullStream" addrspace(1)** %this
  %1 = bitcast %"System.IO.Stream+NullStream" addrspace(1)* %0 to %System.IO.Stream addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.Stream addrspace(1)*)*)(%System.IO.Stream addrspace(1)* %1)
  ret void
}

INFO:  jitting method ConsolePal::get_OutputEncoding using LLILCJit
Successfully read ConsolePal.get_OutputEncoding

define %System.Text.Encoding addrspace(1)* @ConsolePal.get_OutputEncoding() {
entry:
  %0 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 ()*)()
  %1 = call %System.Text.Encoding addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.Encoding addrspace(1)* (i32)*)(i32 %0)
  ret %System.Text.Encoding addrspace(1)* %1
}

INFO:  jitting method mincore::GetConsoleOutputCP using LLILCJit
Successfully read mincore.GetConsoleOutputCP

define i32 @mincore.GetConsoleOutputCP() {
entry:
  %0 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 ()*)()
  ret i32 %0
}

INFO:  jitting method DomainBoundILStubClass::IL_STUB_PInvoke using LLILCJit
Failed to read DomainBoundILStubClass.IL_STUB_PInvoke[publish secret param]
INFO:  jitting method ConsolePal::GetEncoding using LLILCJit
Successfully read ConsolePal.GetEncoding

define %System.Text.Encoding addrspace(1)* @ConsolePal.GetEncoding(i32 %param0) {
entry:
  %arg0 = alloca i32
  %loc0 = alloca %System.Text.Encoding addrspace(1)*
  store i32 %param0, i32* %arg0
  %0 = load i32, i32* %arg0
  %1 = call %System.Text.Encoding addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.Encoding addrspace(1)* (i32)*)(i32 %0)
  store %System.Text.Encoding addrspace(1)* %1, %System.Text.Encoding addrspace(1)** %loc0
  %2 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)** %loc0
  %3 = call %System.Text.ConsoleEncoding addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.ConsoleEncoding addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.ConsoleEncoding addrspace(1)*, %System.Text.Encoding addrspace(1)*)*)(%System.Text.ConsoleEncoding addrspace(1)* %3, %System.Text.Encoding addrspace(1)* %2)
  %4 = bitcast %System.Text.ConsoleEncoding addrspace(1)* %3 to %System.Text.Encoding addrspace(1)*
  store %System.Text.Encoding addrspace(1)* %4, %System.Text.Encoding addrspace(1)** %loc0
  br label %5

; <label>:5                                       ; preds = %entry
  %6 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)** %loc0
  ret %System.Text.Encoding addrspace(1)* %6
}

INFO:  jitting method Encoding::GetEncoding using LLILCJit
Failed to read Encoding.GetEncoding[convertToHelperArgumentType]
INFO:  jitting method EncodingProvider::GetEncodingFromProvider using LLILCJit
Failed to read EncodingProvider.GetEncodingFromProvider[loadElem]
INFO:  jitting method EncodingProvider::.cctor using LLILCJit
Successfully read EncodingProvider..cctor

define void @EncodingProvider..cctor() {
entry:
  %0 = call %System.Object addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Object addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %0)
  %1 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 1059)
  %2 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 2384
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i8 addrspace(1)*, %System.Object addrspace(1)*)*)(i8 addrspace(1)* %2, %System.Object addrspace(1)* %0)
  ret void
}

INFO:  jitting method Encoding::get_InternalSyncObject using LLILCJit
Failed to read Encoding.get_InternalSyncObject[Call HasTypeArg]
INFO:  jitting method Hashtable::.ctor using LLILCJit
Failed to read Hashtable..ctor[Volatile store]
INFO:  jitting method Hashtable::get_Item using LLILCJit
Failed to read Hashtable.get_Item[loadElemA]
INFO:  jitting method Hashtable::InitHash using LLILCJit
Successfully read Hashtable.InitHash

define i32 @Hashtable.InitHash(%System.Collections.Hashtable addrspace(1)* %param0, %System.Object addrspace(1)* %param1, i32 %param2, i32 addrspace(1)* %param3, i32 addrspace(1)* %param4) {
entry:
  %this = alloca %System.Collections.Hashtable addrspace(1)*
  %arg1 = alloca %System.Object addrspace(1)*
  %arg2 = alloca i32
  %arg3 = alloca i32 addrspace(1)*
  %arg4 = alloca i32 addrspace(1)*
  %loc0 = alloca i32
  store %System.Collections.Hashtable addrspace(1)* %param0, %System.Collections.Hashtable addrspace(1)** %this
  store %System.Object addrspace(1)* %param1, %System.Object addrspace(1)** %arg1
  store i32 %param2, i32* %arg2
  store i32 addrspace(1)* %param3, i32 addrspace(1)** %arg3
  store i32 addrspace(1)* %param4, i32 addrspace(1)** %arg4
  %0 = load %System.Collections.Hashtable addrspace(1)*, %System.Collections.Hashtable addrspace(1)** %this
  %1 = load %System.Object addrspace(1)*, %System.Object addrspace(1)** %arg1
  %2 = bitcast %System.Collections.Hashtable addrspace(1)* %0 to i64 addrspace(1)*
  %3 = load i64, i64 addrspace(1)* %2
  %4 = add i64 %3, 72
  %5 = inttoptr i64 %4 to i64*
  %6 = load i64, i64* %5
  %7 = add i64 %6, 40
  %8 = inttoptr i64 %7 to i64*
  %9 = load i64, i64* %8
  %10 = inttoptr i64 %9 to i32 (%System.Collections.Hashtable addrspace(1)*, %System.Object addrspace(1)*)*
  %11 = call i32 %10(%System.Collections.Hashtable addrspace(1)* %0, %System.Object addrspace(1)* %1)
  %12 = and i32 %11, 2147483647
  store i32 %12, i32* %loc0
  %13 = load i32 addrspace(1)*, i32 addrspace(1)** %arg3
  %14 = load i32, i32* %loc0
  store i32 %14, i32 addrspace(1)* %13, align 8
  %15 = load i32 addrspace(1)*, i32 addrspace(1)** %arg4
  %16 = load i32 addrspace(1)*, i32 addrspace(1)** %arg3
  %17 = load i32, i32 addrspace(1)* %16, align 8
  %18 = mul i32 %17, 101
  %19 = load i32, i32* %arg2
  %20 = sub i32 %19, 1
  %21 = urem i32 %18, %20
  %22 = add i32 1, %21
  store i32 %22, i32 addrspace(1)* %15, align 8
  %23 = load i32, i32* %loc0
  ret i32 %23
}

INFO:  jitting method Hashtable::GetHash using LLILCJit
Successfully read Hashtable.GetHash

define i32 @Hashtable.GetHash(%System.Collections.Hashtable addrspace(1)* %param0, %System.Object addrspace(1)* %param1) {
entry:
  %this = alloca %System.Collections.Hashtable addrspace(1)*
  %arg1 = alloca %System.Object addrspace(1)*
  store %System.Collections.Hashtable addrspace(1)* %param0, %System.Collections.Hashtable addrspace(1)** %this
  store %System.Object addrspace(1)* %param1, %System.Object addrspace(1)** %arg1
  %0 = load %System.Collections.Hashtable addrspace(1)*, %System.Collections.Hashtable addrspace(1)** %this
  %1 = getelementptr inbounds %System.Collections.Hashtable, %System.Collections.Hashtable addrspace(1)* %0, i32 0, i32 4
  %2 = load %System.Collections.IEqualityComparer addrspace(1)*, %System.Collections.IEqualityComparer addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp eq %System.Collections.IEqualityComparer addrspace(1)* %2, null
  br i1 %3, label %13, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Collections.Hashtable addrspace(1)*, %System.Collections.Hashtable addrspace(1)** %this
  %6 = getelementptr inbounds %System.Collections.Hashtable, %System.Collections.Hashtable addrspace(1)* %5, i32 0, i32 4
  %7 = load %System.Collections.IEqualityComparer addrspace(1)*, %System.Collections.IEqualityComparer addrspace(1)* addrspace(1)* %6, align 8
  %8 = load %System.Object addrspace(1)*, %System.Object addrspace(1)** %arg1
  %9 = load i64, i64* inttoptr (i64 NORMALIZED_ADDRESS to i64*)
  %NullCheck = icmp ne %System.Collections.IEqualityComparer addrspace(1)* %7, null
  br i1 %NullCheck, label %10, label %ThrowNullRef

; <label>:10                                      ; preds = %4
  %11 = inttoptr i64 %9 to i32 (%System.Collections.IEqualityComparer addrspace(1)*, %System.Object addrspace(1)*)*
  %12 = call i32 %11(%System.Collections.IEqualityComparer addrspace(1)* %7, %System.Object addrspace(1)* %8)
  ret i32 %12

; <label>:13                                      ; preds = %entry
  %14 = load %System.Object addrspace(1)*, %System.Object addrspace(1)** %arg1
  %15 = bitcast %System.Object addrspace(1)* %14 to i64 addrspace(1)*
  %16 = load i64, i64 addrspace(1)* %15
  %17 = add i64 %16, 64
  %18 = inttoptr i64 %17 to i64*
  %19 = load i64, i64* %18
  %20 = add i64 %19, 16
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21
  %23 = inttoptr i64 %22 to i32 (%System.Object addrspace(1)*)*
  %24 = call i32 %23(%System.Object addrspace(1)* %14)
  ret i32 %24

ThrowNullRef:                                     ; preds = %4
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method Int32::GetHashCode using LLILCJit
Successfully read Int32.GetHashCode

define i32 @Int32.GetHashCode(%System.Int32 addrspace(1)* %param0) {
entry:
  %this = alloca %System.Int32 addrspace(1)*
  store %System.Int32 addrspace(1)* %param0, %System.Int32 addrspace(1)** %this
  %0 = load %System.Int32 addrspace(1)*, %System.Int32 addrspace(1)** %this
  %1 = addrspacecast %System.Int32 addrspace(1)* %0 to i32*
  %2 = load i32, i32* %1, align 8
  ret i32 %2
}

INFO:  jitting method Encoding::get_UTF8 using LLILCJit
Successfully read Encoding.get_UTF8

define %System.Text.Encoding addrspace(1)* @Encoding.get_UTF8() {
entry:
  %0 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 1030)
  %1 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 2272
  %2 = addrspacecast i8 addrspace(1)* %1 to %System.Text.Encoding addrspace(1)**
  %3 = load volatile %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)** %2
  %4 = icmp ne %System.Text.Encoding addrspace(1)* %3, null
  br i1 %4, label %10, label %5

; <label>:5                                       ; preds = %entry
  %6 = call %System.Text.UTF8Encoding addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.UTF8Encoding addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.UTF8Encoding addrspace(1)*, i8)*)(%System.Text.UTF8Encoding addrspace(1)* %6, i8 1)
  %7 = bitcast %System.Text.UTF8Encoding addrspace(1)* %6 to %System.Text.Encoding addrspace(1)*
  %8 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 1030)
  %9 = getelementptr inbounds i8, i8 addrspace(1)* %8, i64 2272
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i8 addrspace(1)*, %System.Text.Encoding addrspace(1)*)*)(i8 addrspace(1)* %9, %System.Text.Encoding addrspace(1)* %7)
  fence seq_cst
  br label %10

; <label>:10                                      ; preds = %entry, %5
  %11 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 1030)
  %12 = getelementptr inbounds i8, i8 addrspace(1)* %11, i64 2272
  %13 = addrspacecast i8 addrspace(1)* %12 to %System.Text.Encoding addrspace(1)**
  %14 = load volatile %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)** %13
  ret %System.Text.Encoding addrspace(1)* %14
}

INFO:  jitting method UTF8Encoding::.ctor using LLILCJit
Successfully read UTF8Encoding..ctor

define void @UTF8Encoding..ctor(%System.Text.UTF8Encoding addrspace(1)* %param0, i8 %param1) {
entry:
  %this = alloca %System.Text.UTF8Encoding addrspace(1)*
  %arg1 = alloca i8
  store %System.Text.UTF8Encoding addrspace(1)* %param0, %System.Text.UTF8Encoding addrspace(1)** %this
  store i8 %param1, i8* %arg1
  %0 = load %System.Text.UTF8Encoding addrspace(1)*, %System.Text.UTF8Encoding addrspace(1)** %this
  %1 = load i8, i8* %arg1
  %2 = zext i8 %1 to i32
  %3 = trunc i32 %2 to i8
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.UTF8Encoding addrspace(1)*, i8, i8)*)(%System.Text.UTF8Encoding addrspace(1)* %0, i8 %3, i8 0)
  ret void
}

INFO:  jitting method UTF8Encoding::.ctor using LLILCJit
Successfully read UTF8Encoding..ctor

define void @UTF8Encoding..ctor(%System.Text.UTF8Encoding addrspace(1)* %param0, i8 %param1, i8 %param2) {
entry:
  %this = alloca %System.Text.UTF8Encoding addrspace(1)*
  %arg1 = alloca i8
  %arg2 = alloca i8
  store %System.Text.UTF8Encoding addrspace(1)* %param0, %System.Text.UTF8Encoding addrspace(1)** %this
  store i8 %param1, i8* %arg1
  store i8 %param2, i8* %arg2
  %0 = load %System.Text.UTF8Encoding addrspace(1)*, %System.Text.UTF8Encoding addrspace(1)** %this
  %1 = bitcast %System.Text.UTF8Encoding addrspace(1)* %0 to %System.Text.Encoding addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.Encoding addrspace(1)*, i32)*)(%System.Text.Encoding addrspace(1)* %1, i32 65001)
  %2 = load %System.Text.UTF8Encoding addrspace(1)*, %System.Text.UTF8Encoding addrspace(1)** %this
  %3 = load i8, i8* %arg1
  %4 = zext i8 %3 to i32
  %5 = trunc i32 %4 to i8
  %6 = getelementptr inbounds %System.Text.UTF8Encoding, %System.Text.UTF8Encoding addrspace(1)* %2, i32 0, i32 7
  store i8 %5, i8 addrspace(1)* %6
  %7 = load %System.Text.UTF8Encoding addrspace(1)*, %System.Text.UTF8Encoding addrspace(1)** %this
  %8 = load i8, i8* %arg2
  %9 = zext i8 %8 to i32
  %10 = trunc i32 %9 to i8
  %11 = getelementptr inbounds %System.Text.UTF8Encoding, %System.Text.UTF8Encoding addrspace(1)* %7, i32 0, i32 8
  store i8 %10, i8 addrspace(1)* %11
  %12 = load %System.Text.UTF8Encoding addrspace(1)*, %System.Text.UTF8Encoding addrspace(1)** %this
  %13 = getelementptr inbounds %System.Text.UTF8Encoding, %System.Text.UTF8Encoding addrspace(1)* %12, i32 0, i32 8
  %14 = load i8, i8 addrspace(1)* %13, align 8
  %15 = zext i8 %14 to i32
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %29, label %17

; <label>:17                                      ; preds = %entry
  %18 = load %System.Text.UTF8Encoding addrspace(1)*, %System.Text.UTF8Encoding addrspace(1)** %this
  %19 = bitcast %System.Text.UTF8Encoding addrspace(1)* %18 to i64 addrspace(1)*
  %20 = load i64, i64 addrspace(1)* %19
  %21 = add i64 %20, 64
  %22 = inttoptr i64 %21 to i64*
  %23 = load i64, i64* %22
  %24 = add i64 %23, 32
  %25 = inttoptr i64 %24 to i64*
  %26 = load i64, i64* %25
  %27 = bitcast %System.Text.UTF8Encoding addrspace(1)* %18 to %System.Text.Encoding addrspace(1)*
  %28 = inttoptr i64 %26 to void (%System.Text.Encoding addrspace(1)*)*
  call void %28(%System.Text.Encoding addrspace(1)* %27)
  br label %29

; <label>:29                                      ; preds = %entry, %17
  ret void
}

INFO:  jitting method Encoding::.ctor using LLILCJit
Successfully read Encoding..ctor

define void @Encoding..ctor(%System.Text.Encoding addrspace(1)* %param0, i32 %param1) {
entry:
  %this = alloca %System.Text.Encoding addrspace(1)*
  %arg1 = alloca i32
  store %System.Text.Encoding addrspace(1)* %param0, %System.Text.Encoding addrspace(1)** %this
  store i32 %param1, i32* %arg1
  %0 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)** %this
  %1 = getelementptr inbounds %System.Text.Encoding, %System.Text.Encoding addrspace(1)* %0, i32 0, i32 6
  store i8 1, i8 addrspace(1)* %1
  %2 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)** %this
  %3 = bitcast %System.Text.Encoding addrspace(1)* %2 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %3)
  %4 = load i32, i32* %arg1
  %5 = icmp sge i32 %4, 0
  br i1 %5, label %9, label %6

; <label>:6                                       ; preds = %entry
  %7 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %8 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %8, %System.String addrspace(1)* %7)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %8) #0
  unreachable

; <label>:9                                       ; preds = %entry
  %10 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)** %this
  %11 = load i32, i32* %arg1
  %12 = getelementptr inbounds %System.Text.Encoding, %System.Text.Encoding addrspace(1)* %10, i32 0, i32 4
  store i32 %11, i32 addrspace(1)* %12
  %13 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)** %this
  %14 = bitcast %System.Text.Encoding addrspace(1)* %13 to i64 addrspace(1)*
  %15 = load i64, i64 addrspace(1)* %14
  %16 = add i64 %15, 64
  %17 = inttoptr i64 %16 to i64*
  %18 = load i64, i64* %17
  %19 = add i64 %18, 32
  %20 = inttoptr i64 %19 to i64*
  %21 = load i64, i64* %20
  %22 = inttoptr i64 %21 to void (%System.Text.Encoding addrspace(1)*)*
  call void %22(%System.Text.Encoding addrspace(1)* %13)
  ret void
}

INFO:  jitting method UTF8Encoding::SetDefaultFallbacks using LLILCJit
Successfully read UTF8Encoding.SetDefaultFallbacks

define void @UTF8Encoding.SetDefaultFallbacks(%System.Text.UTF8Encoding addrspace(1)* %param0) {
entry:
  %this = alloca %System.Text.UTF8Encoding addrspace(1)*
  store %System.Text.UTF8Encoding addrspace(1)* %param0, %System.Text.UTF8Encoding addrspace(1)** %this
  %0 = load %System.Text.UTF8Encoding addrspace(1)*, %System.Text.UTF8Encoding addrspace(1)** %this
  %1 = getelementptr inbounds %System.Text.UTF8Encoding, %System.Text.UTF8Encoding addrspace(1)* %0, i32 0, i32 8
  %2 = load i8, i8 addrspace(1)* %1, align 8
  %3 = zext i8 %2 to i32
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %12, label %5

; <label>:5                                       ; preds = %entry
  %6 = load %System.Text.UTF8Encoding addrspace(1)*, %System.Text.UTF8Encoding addrspace(1)** %this
  %7 = call %System.Text.EncoderFallback addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.EncoderFallback addrspace(1)* ()*)()
  %8 = getelementptr inbounds %System.Text.UTF8Encoding, %System.Text.UTF8Encoding addrspace(1)* %6, i32 0, i32 2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.EncoderFallback addrspace(1)* addrspace(1)*, %System.Text.EncoderFallback addrspace(1)*)*)(%System.Text.EncoderFallback addrspace(1)* addrspace(1)* %8, %System.Text.EncoderFallback addrspace(1)* %7)
  %9 = load %System.Text.UTF8Encoding addrspace(1)*, %System.Text.UTF8Encoding addrspace(1)** %this
  %10 = call %System.Text.DecoderFallback addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.DecoderFallback addrspace(1)* ()*)()
  %11 = getelementptr inbounds %System.Text.UTF8Encoding, %System.Text.UTF8Encoding addrspace(1)* %9, i32 0, i32 3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.DecoderFallback addrspace(1)* addrspace(1)*, %System.Text.DecoderFallback addrspace(1)*)*)(%System.Text.DecoderFallback addrspace(1)* addrspace(1)* %11, %System.Text.DecoderFallback addrspace(1)* %10)
  ret void

; <label>:12                                      ; preds = %entry
  %13 = load %System.Text.UTF8Encoding addrspace(1)*, %System.Text.UTF8Encoding addrspace(1)** %this
  %14 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %15 = call %System.Text.EncoderReplacementFallback addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.EncoderReplacementFallback addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.EncoderReplacementFallback addrspace(1)*, %System.String addrspace(1)*)*)(%System.Text.EncoderReplacementFallback addrspace(1)* %15, %System.String addrspace(1)* %14)
  %16 = bitcast %System.Text.EncoderReplacementFallback addrspace(1)* %15 to %System.Text.EncoderFallback addrspace(1)*
  %17 = getelementptr inbounds %System.Text.UTF8Encoding, %System.Text.UTF8Encoding addrspace(1)* %13, i32 0, i32 2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.EncoderFallback addrspace(1)* addrspace(1)*, %System.Text.EncoderFallback addrspace(1)*)*)(%System.Text.EncoderFallback addrspace(1)* addrspace(1)* %17, %System.Text.EncoderFallback addrspace(1)* %16)
  %18 = load %System.Text.UTF8Encoding addrspace(1)*, %System.Text.UTF8Encoding addrspace(1)** %this
  %19 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %20 = call %System.Text.DecoderReplacementFallback addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.DecoderReplacementFallback addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.DecoderReplacementFallback addrspace(1)*, %System.String addrspace(1)*)*)(%System.Text.DecoderReplacementFallback addrspace(1)* %20, %System.String addrspace(1)* %19)
  %21 = bitcast %System.Text.DecoderReplacementFallback addrspace(1)* %20 to %System.Text.DecoderFallback addrspace(1)*
  %22 = getelementptr inbounds %System.Text.UTF8Encoding, %System.Text.UTF8Encoding addrspace(1)* %18, i32 0, i32 3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.DecoderFallback addrspace(1)* addrspace(1)*, %System.Text.DecoderFallback addrspace(1)*)*)(%System.Text.DecoderFallback addrspace(1)* addrspace(1)* %22, %System.Text.DecoderFallback addrspace(1)* %21)
  ret void
}

INFO:  jitting method EncoderReplacementFallback::.ctor using LLILCJit
Failed to read EncoderReplacementFallback..ctor[storeElem]
INFO:  jitting method Char::IsSurrogate using LLILCJit
Successfully read Char.IsSurrogate

define i8 @Char.IsSurrogate(%System.String addrspace(1)* %param0, i32 %param1) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  %arg1 = alloca i32
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  store i32 %param1, i32* %arg1
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %1 = icmp ne %System.String addrspace(1)* %0, null
  br i1 %1, label %5, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %4 = call %System.ArgumentNullException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentNullException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %4, %System.String addrspace(1)* %3)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %4) #0
  unreachable

; <label>:5                                       ; preds = %entry
  %6 = load i32, i32* %arg1
  %7 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %8 = getelementptr inbounds %System.String, %System.String addrspace(1)* %7, i32 0, i32 1
  %9 = load i32, i32 addrspace(1)* %8
  %10 = icmp ult i32 %6, %9
  br i1 %10, label %14, label %11

; <label>:11                                      ; preds = %5
  %12 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %13 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %13, %System.String addrspace(1)* %12)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %13) #0
  unreachable

; <label>:14                                      ; preds = %5
  %15 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg0
  %16 = load i32, i32* %arg1
  %17 = getelementptr inbounds %System.String, %System.String addrspace(1)* %15, i32 0, i32 2, i32 %16
  %18 = load i16, i16 addrspace(1)* %17
  %19 = zext i16 %18 to i32
  %20 = trunc i32 %19 to i16
  %21 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (i16)*)(i16 %20)
  %22 = zext i8 %21 to i32
  %23 = trunc i32 %22 to i8
  ret i8 %23
}

INFO:  jitting method Char::IsSurrogate using LLILCJit
Successfully read Char.IsSurrogate

define i8 @Char.IsSurrogate(i16 %param0) {
entry:
  %arg0 = alloca i16
  store i16 %param0, i16* %arg0
  %0 = load i16, i16* %arg0
  %1 = zext i16 %0 to i32
  %2 = icmp slt i32 %1, 55296
  br i1 %2, label %11, label %3

; <label>:3                                       ; preds = %entry
  %4 = load i16, i16* %arg0
  %5 = zext i16 %4 to i32
  %6 = icmp sgt i32 %5, 57343
  %7 = sext i1 %6 to i32
  %8 = icmp eq i32 %7, 0
  %9 = sext i1 %8 to i32
  %10 = trunc i32 %9 to i8
  ret i8 %10

; <label>:11                                      ; preds = %entry
  ret i8 0
}

INFO:  jitting method DecoderReplacementFallback::.ctor using LLILCJit
Failed to read DecoderReplacementFallback..ctor[storeElem]
INFO:  jitting method Hashtable::Add using LLILCJit
Successfully read Hashtable.Add

define void @Hashtable.Add(%System.Collections.Hashtable addrspace(1)* %param0, %System.Object addrspace(1)* %param1, %System.Object addrspace(1)* %param2) {
entry:
  %this = alloca %System.Collections.Hashtable addrspace(1)*
  %arg1 = alloca %System.Object addrspace(1)*
  %arg2 = alloca %System.Object addrspace(1)*
  store %System.Collections.Hashtable addrspace(1)* %param0, %System.Collections.Hashtable addrspace(1)** %this
  store %System.Object addrspace(1)* %param1, %System.Object addrspace(1)** %arg1
  store %System.Object addrspace(1)* %param2, %System.Object addrspace(1)** %arg2
  %0 = load %System.Collections.Hashtable addrspace(1)*, %System.Collections.Hashtable addrspace(1)** %this
  %1 = load %System.Object addrspace(1)*, %System.Object addrspace(1)** %arg1
  %2 = load %System.Object addrspace(1)*, %System.Object addrspace(1)** %arg2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Collections.Hashtable addrspace(1)*, %System.Object addrspace(1)*, %System.Object addrspace(1)*, i8)*)(%System.Collections.Hashtable addrspace(1)* %0, %System.Object addrspace(1)* %1, %System.Object addrspace(1)* %2, i8 1)
  ret void
}

INFO:  jitting method Hashtable::Insert using LLILCJit
Failed to read Hashtable.Insert[loadElemA]
INFO:  jitting method ConsoleEncoding::.ctor using LLILCJit
Successfully read ConsoleEncoding..ctor

define void @ConsoleEncoding..ctor(%System.Text.ConsoleEncoding addrspace(1)* %param0, %System.Text.Encoding addrspace(1)* %param1) {
entry:
  %this = alloca %System.Text.ConsoleEncoding addrspace(1)*
  %arg1 = alloca %System.Text.Encoding addrspace(1)*
  store %System.Text.ConsoleEncoding addrspace(1)* %param0, %System.Text.ConsoleEncoding addrspace(1)** %this
  store %System.Text.Encoding addrspace(1)* %param1, %System.Text.Encoding addrspace(1)** %arg1
  %0 = load %System.Text.ConsoleEncoding addrspace(1)*, %System.Text.ConsoleEncoding addrspace(1)** %this
  %1 = bitcast %System.Text.ConsoleEncoding addrspace(1)* %0 to %System.Text.Encoding addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.Encoding addrspace(1)*)*)(%System.Text.Encoding addrspace(1)* %1)
  %2 = load %System.Text.ConsoleEncoding addrspace(1)*, %System.Text.ConsoleEncoding addrspace(1)** %this
  %3 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)** %arg1
  %4 = getelementptr inbounds %System.Text.ConsoleEncoding, %System.Text.ConsoleEncoding addrspace(1)* %2, i32 0, i32 8
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.Encoding addrspace(1)* addrspace(1)*, %System.Text.Encoding addrspace(1)*)*)(%System.Text.Encoding addrspace(1)* addrspace(1)* %4, %System.Text.Encoding addrspace(1)* %3)
  ret void
}

INFO:  jitting method Encoding::.ctor using LLILCJit
Successfully read Encoding..ctor

define void @Encoding..ctor(%System.Text.Encoding addrspace(1)* %param0) {
entry:
  %this = alloca %System.Text.Encoding addrspace(1)*
  store %System.Text.Encoding addrspace(1)* %param0, %System.Text.Encoding addrspace(1)** %this
  %0 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.Encoding addrspace(1)*, i32)*)(%System.Text.Encoding addrspace(1)* %0, i32 0)
  ret void
}

INFO:  jitting method Encoding::SetDefaultFallbacks using LLILCJit
Successfully read Encoding.SetDefaultFallbacks

define void @Encoding.SetDefaultFallbacks(%System.Text.Encoding addrspace(1)* %param0) {
entry:
  %this = alloca %System.Text.Encoding addrspace(1)*
  store %System.Text.Encoding addrspace(1)* %param0, %System.Text.Encoding addrspace(1)** %this
  %0 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)** %this
  %1 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)** %this
  %2 = call %System.Text.InternalEncoderBestFitFallback addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.InternalEncoderBestFitFallback addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.InternalEncoderBestFitFallback addrspace(1)*, %System.Text.Encoding addrspace(1)*)*)(%System.Text.InternalEncoderBestFitFallback addrspace(1)* %2, %System.Text.Encoding addrspace(1)* %1)
  %3 = bitcast %System.Text.InternalEncoderBestFitFallback addrspace(1)* %2 to %System.Text.EncoderFallback addrspace(1)*
  %4 = getelementptr inbounds %System.Text.Encoding, %System.Text.Encoding addrspace(1)* %0, i32 0, i32 2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.EncoderFallback addrspace(1)* addrspace(1)*, %System.Text.EncoderFallback addrspace(1)*)*)(%System.Text.EncoderFallback addrspace(1)* addrspace(1)* %4, %System.Text.EncoderFallback addrspace(1)* %3)
  %5 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)** %this
  %6 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)** %this
  %7 = call %System.Text.InternalDecoderBestFitFallback addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.InternalDecoderBestFitFallback addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.InternalDecoderBestFitFallback addrspace(1)*, %System.Text.Encoding addrspace(1)*)*)(%System.Text.InternalDecoderBestFitFallback addrspace(1)* %7, %System.Text.Encoding addrspace(1)* %6)
  %8 = bitcast %System.Text.InternalDecoderBestFitFallback addrspace(1)* %7 to %System.Text.DecoderFallback addrspace(1)*
  %9 = getelementptr inbounds %System.Text.Encoding, %System.Text.Encoding addrspace(1)* %5, i32 0, i32 3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.DecoderFallback addrspace(1)* addrspace(1)*, %System.Text.DecoderFallback addrspace(1)*)*)(%System.Text.DecoderFallback addrspace(1)* addrspace(1)* %9, %System.Text.DecoderFallback addrspace(1)* %8)
  ret void
}

INFO:  jitting method InternalEncoderBestFitFallback::.ctor using LLILCJit
Successfully read InternalEncoderBestFitFallback..ctor

define void @InternalEncoderBestFitFallback..ctor(%System.Text.InternalEncoderBestFitFallback addrspace(1)* %param0, %System.Text.Encoding addrspace(1)* %param1) {
entry:
  %this = alloca %System.Text.InternalEncoderBestFitFallback addrspace(1)*
  %arg1 = alloca %System.Text.Encoding addrspace(1)*
  store %System.Text.InternalEncoderBestFitFallback addrspace(1)* %param0, %System.Text.InternalEncoderBestFitFallback addrspace(1)** %this
  store %System.Text.Encoding addrspace(1)* %param1, %System.Text.Encoding addrspace(1)** %arg1
  %0 = load %System.Text.InternalEncoderBestFitFallback addrspace(1)*, %System.Text.InternalEncoderBestFitFallback addrspace(1)** %this
  %1 = bitcast %System.Text.InternalEncoderBestFitFallback addrspace(1)* %0 to %System.Text.EncoderFallback addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.EncoderFallback addrspace(1)*)*)(%System.Text.EncoderFallback addrspace(1)* %1)
  %2 = load %System.Text.InternalEncoderBestFitFallback addrspace(1)*, %System.Text.InternalEncoderBestFitFallback addrspace(1)** %this
  %3 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)** %arg1
  %4 = getelementptr inbounds %System.Text.InternalEncoderBestFitFallback, %System.Text.InternalEncoderBestFitFallback addrspace(1)* %2, i32 0, i32 3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.Encoding addrspace(1)* addrspace(1)*, %System.Text.Encoding addrspace(1)*)*)(%System.Text.Encoding addrspace(1)* addrspace(1)* %4, %System.Text.Encoding addrspace(1)* %3)
  %5 = load %System.Text.InternalEncoderBestFitFallback addrspace(1)*, %System.Text.InternalEncoderBestFitFallback addrspace(1)** %this
  %6 = getelementptr inbounds %System.Text.InternalEncoderBestFitFallback, %System.Text.InternalEncoderBestFitFallback addrspace(1)* %5, i32 0, i32 1
  store i8 1, i8 addrspace(1)* %6
  ret void
}

INFO:  jitting method EncoderFallback::.ctor using LLILCJit
Successfully read EncoderFallback..ctor

define void @EncoderFallback..ctor(%System.Text.EncoderFallback addrspace(1)* %param0) {
entry:
  %this = alloca %System.Text.EncoderFallback addrspace(1)*
  store %System.Text.EncoderFallback addrspace(1)* %param0, %System.Text.EncoderFallback addrspace(1)** %this
  %0 = load %System.Text.EncoderFallback addrspace(1)*, %System.Text.EncoderFallback addrspace(1)** %this
  %1 = bitcast %System.Text.EncoderFallback addrspace(1)* %0 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %1)
  ret void
}

INFO:  jitting method InternalDecoderBestFitFallback::.ctor using LLILCJit
Successfully read InternalDecoderBestFitFallback..ctor

define void @InternalDecoderBestFitFallback..ctor(%System.Text.InternalDecoderBestFitFallback addrspace(1)* %param0, %System.Text.Encoding addrspace(1)* %param1) {
entry:
  %this = alloca %System.Text.InternalDecoderBestFitFallback addrspace(1)*
  %arg1 = alloca %System.Text.Encoding addrspace(1)*
  store %System.Text.InternalDecoderBestFitFallback addrspace(1)* %param0, %System.Text.InternalDecoderBestFitFallback addrspace(1)** %this
  store %System.Text.Encoding addrspace(1)* %param1, %System.Text.Encoding addrspace(1)** %arg1
  %0 = load %System.Text.InternalDecoderBestFitFallback addrspace(1)*, %System.Text.InternalDecoderBestFitFallback addrspace(1)** %this
  %1 = getelementptr inbounds %System.Text.InternalDecoderBestFitFallback, %System.Text.InternalDecoderBestFitFallback addrspace(1)* %0, i32 0, i32 5
  store i16 63, i16 addrspace(1)* %1
  %2 = load %System.Text.InternalDecoderBestFitFallback addrspace(1)*, %System.Text.InternalDecoderBestFitFallback addrspace(1)** %this
  %3 = bitcast %System.Text.InternalDecoderBestFitFallback addrspace(1)* %2 to %System.Text.DecoderFallback addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.DecoderFallback addrspace(1)*)*)(%System.Text.DecoderFallback addrspace(1)* %3)
  %4 = load %System.Text.InternalDecoderBestFitFallback addrspace(1)*, %System.Text.InternalDecoderBestFitFallback addrspace(1)** %this
  %5 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)** %arg1
  %6 = getelementptr inbounds %System.Text.InternalDecoderBestFitFallback, %System.Text.InternalDecoderBestFitFallback addrspace(1)* %4, i32 0, i32 3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.Encoding addrspace(1)* addrspace(1)*, %System.Text.Encoding addrspace(1)*)*)(%System.Text.Encoding addrspace(1)* addrspace(1)* %6, %System.Text.Encoding addrspace(1)* %5)
  %7 = load %System.Text.InternalDecoderBestFitFallback addrspace(1)*, %System.Text.InternalDecoderBestFitFallback addrspace(1)** %this
  %8 = getelementptr inbounds %System.Text.InternalDecoderBestFitFallback, %System.Text.InternalDecoderBestFitFallback addrspace(1)* %7, i32 0, i32 1
  store i8 1, i8 addrspace(1)* %8
  ret void
}

INFO:  jitting method DecoderFallback::.ctor using LLILCJit
Successfully read DecoderFallback..ctor

define void @DecoderFallback..ctor(%System.Text.DecoderFallback addrspace(1)* %param0) {
entry:
  %this = alloca %System.Text.DecoderFallback addrspace(1)*
  store %System.Text.DecoderFallback addrspace(1)* %param0, %System.Text.DecoderFallback addrspace(1)** %this
  %0 = load %System.Text.DecoderFallback addrspace(1)*, %System.Text.DecoderFallback addrspace(1)** %this
  %1 = bitcast %System.Text.DecoderFallback addrspace(1)* %0 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %1)
  ret void
}

INFO:  jitting method StreamWriter::.ctor using LLILCJit
Successfully read StreamWriter..ctor

define void @StreamWriter..ctor(%System.IO.StreamWriter addrspace(1)* %param0, %System.IO.Stream addrspace(1)* %param1, %System.Text.Encoding addrspace(1)* %param2, i32 %param3, i8 %param4) {
entry:
  %this = alloca %System.IO.StreamWriter addrspace(1)*
  %arg1 = alloca %System.IO.Stream addrspace(1)*
  %arg2 = alloca %System.Text.Encoding addrspace(1)*
  %arg3 = alloca i32
  %arg4 = alloca i8
  store %System.IO.StreamWriter addrspace(1)* %param0, %System.IO.StreamWriter addrspace(1)** %this
  store %System.IO.Stream addrspace(1)* %param1, %System.IO.Stream addrspace(1)** %arg1
  store %System.Text.Encoding addrspace(1)* %param2, %System.Text.Encoding addrspace(1)** %arg2
  store i32 %param3, i32* %arg3
  store i8 %param4, i8* %arg4
  %0 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %1 = bitcast %System.IO.StreamWriter addrspace(1)* %0 to %System.IO.TextWriter addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.TextWriter addrspace(1)*, %System.IFormatProvider addrspace(1)*)*)(%System.IO.TextWriter addrspace(1)* %1, %System.IFormatProvider addrspace(1)* null)
  %2 = load %System.IO.Stream addrspace(1)*, %System.IO.Stream addrspace(1)** %arg1
  %3 = icmp eq %System.IO.Stream addrspace(1)* %2, null
  br i1 %3, label %7, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)** %arg2
  %6 = icmp ne %System.Text.Encoding addrspace(1)* %5, null
  br i1 %6, label %17, label %7

; <label>:7                                       ; preds = %entry, %4
  %8 = load %System.IO.Stream addrspace(1)*, %System.IO.Stream addrspace(1)** %arg1
  %9 = icmp eq %System.IO.Stream addrspace(1)* %8, null
  br i1 %9, label %12, label %10

; <label>:10                                      ; preds = %7
  %11 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  br label %14

; <label>:12                                      ; preds = %7
  %13 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  br label %14

; <label>:14                                      ; preds = %10, %12
  %15 = phi %System.String addrspace(1)* [ %11, %10 ], [ %13, %12 ]
  %16 = call %System.ArgumentNullException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentNullException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %16, %System.String addrspace(1)* %15)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %16) #0
  unreachable

; <label>:17                                      ; preds = %4
  %18 = load %System.IO.Stream addrspace(1)*, %System.IO.Stream addrspace(1)** %arg1
  %19 = bitcast %System.IO.Stream addrspace(1)* %18 to i64 addrspace(1)*
  %20 = load i64, i64 addrspace(1)* %19
  %21 = add i64 %20, 64
  %22 = inttoptr i64 %21 to i64*
  %23 = load i64, i64* %22
  %24 = add i64 %23, 56
  %25 = inttoptr i64 %24 to i64*
  %26 = load i64, i64* %25
  %27 = inttoptr i64 %26 to i8 (%System.IO.Stream addrspace(1)*)*
  %28 = call i8 %27(%System.IO.Stream addrspace(1)* %18)
  %29 = zext i8 %28 to i32
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %35, label %31

; <label>:31                                      ; preds = %17
  %32 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %33 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %32)
  %34 = call %System.ArgumentException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %34, %System.String addrspace(1)* %33)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %34) #0
  unreachable

; <label>:35                                      ; preds = %17
  %36 = load i32, i32* %arg3
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %43, label %38

; <label>:38                                      ; preds = %35
  %39 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %40 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %41 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %40)
  %42 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %42, %System.String addrspace(1)* %39, %System.String addrspace(1)* %41)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %42) #0
  unreachable

; <label>:43                                      ; preds = %35
  %44 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %45 = load %System.IO.Stream addrspace(1)*, %System.IO.Stream addrspace(1)** %arg1
  %46 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)** %arg2
  %47 = load i32, i32* %arg3
  %48 = load i8, i8* %arg4
  %49 = zext i8 %48 to i32
  %50 = trunc i32 %49 to i8
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.StreamWriter addrspace(1)*, %System.IO.Stream addrspace(1)*, %System.Text.Encoding addrspace(1)*, i32, i8)*)(%System.IO.StreamWriter addrspace(1)* %44, %System.IO.Stream addrspace(1)* %45, %System.Text.Encoding addrspace(1)* %46, i32 %47, i8 %50)
  ret void
}

INFO:  jitting method TextWriter::.ctor using LLILCJit
Failed to read TextWriter..ctor[storeElem]
INFO:  jitting method ConsoleStream::get_CanWrite using LLILCJit
Successfully read ConsoleStream.get_CanWrite

define i8 @ConsoleStream.get_CanWrite(%System.IO.ConsoleStream addrspace(1)* %param0) {
entry:
  %this = alloca %System.IO.ConsoleStream addrspace(1)*
  store %System.IO.ConsoleStream addrspace(1)* %param0, %System.IO.ConsoleStream addrspace(1)** %this
  %0 = load %System.IO.ConsoleStream addrspace(1)*, %System.IO.ConsoleStream addrspace(1)** %this
  %1 = getelementptr inbounds %System.IO.ConsoleStream, %System.IO.ConsoleStream addrspace(1)* %0, i32 0, i32 4
  %2 = load i8, i8 addrspace(1)* %1, align 8
  %3 = zext i8 %2 to i32
  %4 = trunc i32 %3 to i8
  ret i8 %4
}

INFO:  jitting method StreamWriter::Init using LLILCJit
Successfully read StreamWriter.Init

define void @StreamWriter.Init(%System.IO.StreamWriter addrspace(1)* %param0, %System.IO.Stream addrspace(1)* %param1, %System.Text.Encoding addrspace(1)* %param2, i32 %param3, i8 %param4) {
entry:
  %this = alloca %System.IO.StreamWriter addrspace(1)*
  %arg1 = alloca %System.IO.Stream addrspace(1)*
  %arg2 = alloca %System.Text.Encoding addrspace(1)*
  %arg3 = alloca i32
  %arg4 = alloca i8
  store %System.IO.StreamWriter addrspace(1)* %param0, %System.IO.StreamWriter addrspace(1)** %this
  store %System.IO.Stream addrspace(1)* %param1, %System.IO.Stream addrspace(1)** %arg1
  store %System.Text.Encoding addrspace(1)* %param2, %System.Text.Encoding addrspace(1)** %arg2
  store i32 %param3, i32* %arg3
  store i8 %param4, i8* %arg4
  %0 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %1 = load %System.IO.Stream addrspace(1)*, %System.IO.Stream addrspace(1)** %arg1
  %2 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %0, i32 0, i32 3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.Stream addrspace(1)* addrspace(1)*, %System.IO.Stream addrspace(1)*)*)(%System.IO.Stream addrspace(1)* addrspace(1)* %2, %System.IO.Stream addrspace(1)* %1)
  %3 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %4 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)** %arg2
  %5 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %3, i32 0, i32 4
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.Encoding addrspace(1)* addrspace(1)*, %System.Text.Encoding addrspace(1)*)*)(%System.Text.Encoding addrspace(1)* addrspace(1)* %5, %System.Text.Encoding addrspace(1)* %4)
  %6 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %7 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %8 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %7, i32 0, i32 4
  %9 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)* addrspace(1)* %8, align 8
  %10 = bitcast %System.Text.Encoding addrspace(1)* %9 to i64 addrspace(1)*
  %11 = load i64, i64 addrspace(1)* %10
  %12 = add i64 %11, 96
  %13 = inttoptr i64 %12 to i64*
  %14 = load i64, i64* %13
  %15 = add i64 %14, 8
  %16 = inttoptr i64 %15 to i64*
  %17 = load i64, i64* %16
  %18 = inttoptr i64 %17 to %System.Text.Encoder addrspace(1)* (%System.Text.Encoding addrspace(1)*)*
  %19 = call %System.Text.Encoder addrspace(1)* %18(%System.Text.Encoding addrspace(1)* %9)
  %20 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %6, i32 0, i32 5
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.Encoder addrspace(1)* addrspace(1)*, %System.Text.Encoder addrspace(1)*)*)(%System.Text.Encoder addrspace(1)* addrspace(1)* %20, %System.Text.Encoder addrspace(1)* %19)
  %21 = load i32, i32* %arg3
  %22 = icmp sge i32 %21, 128
  br i1 %22, label %24, label %23

; <label>:23                                      ; preds = %entry
  store i32 128, i32* %arg3
  br label %24

; <label>:24                                      ; preds = %entry, %23
  %25 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %26 = load i32, i32* %arg3
  %27 = sext i32 %26 to i64
  %28 = call %"System.Char[]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Char[]" addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 %27)
  %29 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %25, i32 0, i32 7
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Char[]" addrspace(1)* addrspace(1)*, %"System.Char[]" addrspace(1)*)*)(%"System.Char[]" addrspace(1)* addrspace(1)* %29, %"System.Char[]" addrspace(1)* %28)
  %30 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %31 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %32 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %31, i32 0, i32 4
  %33 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)* addrspace(1)* %32, align 8
  %34 = load i32, i32* %arg3
  %35 = bitcast %System.Text.Encoding addrspace(1)* %33 to i64 addrspace(1)*
  %36 = load i64, i64 addrspace(1)* %35
  %37 = add i64 %36, 96
  %38 = inttoptr i64 %37 to i64*
  %39 = load i64, i64* %38
  %40 = add i64 %39, 16
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41
  %43 = inttoptr i64 %42 to i32 (%System.Text.Encoding addrspace(1)*, i32)*
  %44 = call i32 %43(%System.Text.Encoding addrspace(1)* %33, i32 %34)
  %45 = sext i32 %44 to i64
  %46 = call %"System.Byte[]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Byte[]" addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 %45)
  %47 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %30, i32 0, i32 6
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Byte[]" addrspace(1)* addrspace(1)*, %"System.Byte[]" addrspace(1)*)*)(%"System.Byte[]" addrspace(1)* addrspace(1)* %47, %"System.Byte[]" addrspace(1)* %46)
  %48 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %49 = load i32, i32* %arg3
  %50 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %48, i32 0, i32 10
  store i32 %49, i32 addrspace(1)* %50
  %51 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %52 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %51, i32 0, i32 3
  %53 = load %System.IO.Stream addrspace(1)*, %System.IO.Stream addrspace(1)* addrspace(1)* %52, align 8
  %54 = bitcast %System.IO.Stream addrspace(1)* %53 to i64 addrspace(1)*
  %55 = load i64, i64 addrspace(1)* %54
  %56 = add i64 %55, 64
  %57 = inttoptr i64 %56 to i64*
  %58 = load i64, i64* %57
  %59 = add i64 %58, 40
  %60 = inttoptr i64 %59 to i64*
  %61 = load i64, i64* %60
  %62 = inttoptr i64 %61 to i8 (%System.IO.Stream addrspace(1)*)*
  %63 = call i8 %62(%System.IO.Stream addrspace(1)* %53)
  %64 = zext i8 %63 to i32
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %84, label %66

; <label>:66                                      ; preds = %24
  %67 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %68 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %67, i32 0, i32 3
  %69 = load %System.IO.Stream addrspace(1)*, %System.IO.Stream addrspace(1)* addrspace(1)* %68, align 8
  %70 = bitcast %System.IO.Stream addrspace(1)* %69 to i64 addrspace(1)*
  %71 = load i64, i64 addrspace(1)* %70
  %72 = add i64 %71, 72
  %73 = inttoptr i64 %72 to i64*
  %74 = load i64, i64* %73
  %75 = add i64 %74, 8
  %76 = inttoptr i64 %75 to i64*
  %77 = load i64, i64* %76
  %78 = inttoptr i64 %77 to i64 (%System.IO.Stream addrspace(1)*)*
  %79 = call i64 %78(%System.IO.Stream addrspace(1)* %69)
  %80 = icmp sle i64 %79, 0
  br i1 %80, label %84, label %81

; <label>:81                                      ; preds = %66
  %82 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %83 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %82, i32 0, i32 12
  store i8 1, i8 addrspace(1)* %83
  br label %84

; <label>:84                                      ; preds = %24, %66, %81
  %85 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %86 = load i8, i8* %arg4
  %87 = zext i8 %86 to i32
  %88 = icmp eq i32 %87, 0
  %89 = sext i1 %88 to i32
  %90 = trunc i32 %89 to i8
  %91 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %85, i32 0, i32 13
  store i8 %90, i8 addrspace(1)* %91
  ret void
}

INFO:  jitting method ConsoleEncoding::GetEncoder using LLILCJit
Successfully read ConsoleEncoding.GetEncoder

define %System.Text.Encoder addrspace(1)* @ConsoleEncoding.GetEncoder(%System.Text.ConsoleEncoding addrspace(1)* %param0) {
entry:
  %this = alloca %System.Text.ConsoleEncoding addrspace(1)*
  store %System.Text.ConsoleEncoding addrspace(1)* %param0, %System.Text.ConsoleEncoding addrspace(1)** %this
  %0 = load %System.Text.ConsoleEncoding addrspace(1)*, %System.Text.ConsoleEncoding addrspace(1)** %this
  %1 = getelementptr inbounds %System.Text.ConsoleEncoding, %System.Text.ConsoleEncoding addrspace(1)* %0, i32 0, i32 8
  %2 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)* addrspace(1)* %1, align 8
  %3 = bitcast %System.Text.Encoding addrspace(1)* %2 to i64 addrspace(1)*
  %4 = load i64, i64 addrspace(1)* %3
  %5 = add i64 %4, 96
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6
  %8 = add i64 %7, 8
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9
  %11 = inttoptr i64 %10 to %System.Text.Encoder addrspace(1)* (%System.Text.Encoding addrspace(1)*)*
  %12 = call %System.Text.Encoder addrspace(1)* %11(%System.Text.Encoding addrspace(1)* %2)
  ret %System.Text.Encoder addrspace(1)* %12
}

INFO:  jitting method UTF8Encoding::GetEncoder using LLILCJit
Successfully read UTF8Encoding.GetEncoder

define %System.Text.Encoder addrspace(1)* @UTF8Encoding.GetEncoder(%System.Text.UTF8Encoding addrspace(1)* %param0) {
entry:
  %this = alloca %System.Text.UTF8Encoding addrspace(1)*
  store %System.Text.UTF8Encoding addrspace(1)* %param0, %System.Text.UTF8Encoding addrspace(1)** %this
  %0 = load %System.Text.UTF8Encoding addrspace(1)*, %System.Text.UTF8Encoding addrspace(1)** %this
  %1 = call %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)*, %System.Text.UTF8Encoding addrspace(1)*)*)(%"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)* %1, %System.Text.UTF8Encoding addrspace(1)* %0)
  %2 = bitcast %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)* %1 to %System.Text.Encoder addrspace(1)*
  ret %System.Text.Encoder addrspace(1)* %2
}

INFO:  jitting method UTF8Encoder::.ctor using LLILCJit
Successfully read UTF8Encoder..ctor

define void @UTF8Encoder..ctor(%"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)* %param0, %System.Text.UTF8Encoding addrspace(1)* %param1) {
entry:
  %this = alloca %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)*
  %arg1 = alloca %System.Text.UTF8Encoding addrspace(1)*
  store %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)* %param0, %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)** %this
  store %System.Text.UTF8Encoding addrspace(1)* %param1, %System.Text.UTF8Encoding addrspace(1)** %arg1
  %0 = load %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)*, %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)** %this
  %1 = load %System.Text.UTF8Encoding addrspace(1)*, %System.Text.UTF8Encoding addrspace(1)** %arg1
  %2 = bitcast %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)* %0 to %System.Text.EncoderNLS addrspace(1)*
  %3 = bitcast %System.Text.UTF8Encoding addrspace(1)* %1 to %System.Text.Encoding addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.EncoderNLS addrspace(1)*, %System.Text.Encoding addrspace(1)*)*)(%System.Text.EncoderNLS addrspace(1)* %2, %System.Text.Encoding addrspace(1)* %3)
  ret void
}

INFO:  jitting method EncoderNLS::.ctor using LLILCJit
Successfully read EncoderNLS..ctor

define void @EncoderNLS..ctor(%System.Text.EncoderNLS addrspace(1)* %param0, %System.Text.Encoding addrspace(1)* %param1) {
entry:
  %this = alloca %System.Text.EncoderNLS addrspace(1)*
  %arg1 = alloca %System.Text.Encoding addrspace(1)*
  store %System.Text.EncoderNLS addrspace(1)* %param0, %System.Text.EncoderNLS addrspace(1)** %this
  store %System.Text.Encoding addrspace(1)* %param1, %System.Text.Encoding addrspace(1)** %arg1
  %0 = load %System.Text.EncoderNLS addrspace(1)*, %System.Text.EncoderNLS addrspace(1)** %this
  %1 = bitcast %System.Text.EncoderNLS addrspace(1)* %0 to %System.Text.Encoder addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.Encoder addrspace(1)*)*)(%System.Text.Encoder addrspace(1)* %1)
  %2 = load %System.Text.EncoderNLS addrspace(1)*, %System.Text.EncoderNLS addrspace(1)** %this
  %3 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)** %arg1
  %4 = getelementptr inbounds %System.Text.EncoderNLS, %System.Text.EncoderNLS addrspace(1)* %2, i32 0, i32 3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.Encoding addrspace(1)* addrspace(1)*, %System.Text.Encoding addrspace(1)*)*)(%System.Text.Encoding addrspace(1)* addrspace(1)* %4, %System.Text.Encoding addrspace(1)* %3)
  %5 = load %System.Text.EncoderNLS addrspace(1)*, %System.Text.EncoderNLS addrspace(1)** %this
  %6 = load %System.Text.EncoderNLS addrspace(1)*, %System.Text.EncoderNLS addrspace(1)** %this
  %7 = getelementptr inbounds %System.Text.EncoderNLS, %System.Text.EncoderNLS addrspace(1)* %6, i32 0, i32 3
  %8 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)* addrspace(1)* %7, align 8
  %NullCheck = icmp ne %System.Text.Encoding addrspace(1)* %8, null
  br i1 %NullCheck, label %9, label %ThrowNullRef

; <label>:9                                       ; preds = %entry
  %10 = call %System.Text.EncoderFallback addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.EncoderFallback addrspace(1)* (%System.Text.Encoding addrspace(1)*)*)(%System.Text.Encoding addrspace(1)* %8)
  %11 = getelementptr inbounds %System.Text.EncoderNLS, %System.Text.EncoderNLS addrspace(1)* %5, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.EncoderFallback addrspace(1)* addrspace(1)*, %System.Text.EncoderFallback addrspace(1)*)*)(%System.Text.EncoderFallback addrspace(1)* addrspace(1)* %11, %System.Text.EncoderFallback addrspace(1)* %10)
  %12 = load %System.Text.EncoderNLS addrspace(1)*, %System.Text.EncoderNLS addrspace(1)** %this
  %13 = bitcast %System.Text.EncoderNLS addrspace(1)* %12 to i64 addrspace(1)*
  %14 = load i64, i64 addrspace(1)* %13
  %15 = add i64 %14, 64
  %16 = inttoptr i64 %15 to i64*
  %17 = load i64, i64* %16
  %18 = add i64 %17, 32
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19
  %21 = bitcast %System.Text.EncoderNLS addrspace(1)* %12 to %System.Text.Encoder addrspace(1)*
  %22 = inttoptr i64 %20 to void (%System.Text.Encoder addrspace(1)*)*
  call void %22(%System.Text.Encoder addrspace(1)* %21)
  ret void

ThrowNullRef:                                     ; preds = %entry
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method Encoder::.ctor using LLILCJit
Successfully read Encoder..ctor

define void @Encoder..ctor(%System.Text.Encoder addrspace(1)* %param0) {
entry:
  %this = alloca %System.Text.Encoder addrspace(1)*
  store %System.Text.Encoder addrspace(1)* %param0, %System.Text.Encoder addrspace(1)** %this
  %0 = load %System.Text.Encoder addrspace(1)*, %System.Text.Encoder addrspace(1)** %this
  %1 = bitcast %System.Text.Encoder addrspace(1)* %0 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %1)
  ret void
}

INFO:  jitting method Encoding::get_EncoderFallback using LLILCJit
Successfully read Encoding.get_EncoderFallback

define %System.Text.EncoderFallback addrspace(1)* @Encoding.get_EncoderFallback(%System.Text.Encoding addrspace(1)* %param0) {
entry:
  %this = alloca %System.Text.Encoding addrspace(1)*
  store %System.Text.Encoding addrspace(1)* %param0, %System.Text.Encoding addrspace(1)** %this
  %0 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)** %this
  %1 = getelementptr inbounds %System.Text.Encoding, %System.Text.Encoding addrspace(1)* %0, i32 0, i32 2
  %2 = load %System.Text.EncoderFallback addrspace(1)*, %System.Text.EncoderFallback addrspace(1)* addrspace(1)* %1, align 8
  ret %System.Text.EncoderFallback addrspace(1)* %2
}

INFO:  jitting method UTF8Encoder::Reset using LLILCJit
Successfully read UTF8Encoder.Reset

define void @UTF8Encoder.Reset(%"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)* %param0) {
entry:
  %this = alloca %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)*
  store %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)* %param0, %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)** %this
  %0 = load %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)*, %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)** %this
  %1 = getelementptr inbounds %"System.Text.UTF8Encoding+UTF8Encoder", %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)* %0, i32 0, i32 8
  store i32 0, i32 addrspace(1)* %1
  %2 = load %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)*, %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)** %this
  %3 = getelementptr inbounds %"System.Text.UTF8Encoding+UTF8Encoder", %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)* %2, i32 0, i32 2
  %4 = load %System.Text.EncoderFallbackBuffer addrspace(1)*, %System.Text.EncoderFallbackBuffer addrspace(1)* addrspace(1)* %3, align 8
  %5 = icmp eq %System.Text.EncoderFallbackBuffer addrspace(1)* %4, null
  br i1 %5, label %19, label %6

; <label>:6                                       ; preds = %entry
  %7 = load %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)*, %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)** %this
  %8 = getelementptr inbounds %"System.Text.UTF8Encoding+UTF8Encoder", %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)* %7, i32 0, i32 2
  %9 = load %System.Text.EncoderFallbackBuffer addrspace(1)*, %System.Text.EncoderFallbackBuffer addrspace(1)* addrspace(1)* %8, align 8
  %10 = bitcast %System.Text.EncoderFallbackBuffer addrspace(1)* %9 to i64 addrspace(1)*
  %11 = load i64, i64 addrspace(1)* %10
  %12 = add i64 %11, 72
  %13 = inttoptr i64 %12 to i64*
  %14 = load i64, i64* %13
  %15 = add i64 %14, 8
  %16 = inttoptr i64 %15 to i64*
  %17 = load i64, i64* %16
  %18 = inttoptr i64 %17 to void (%System.Text.EncoderFallbackBuffer addrspace(1)*)*
  call void %18(%System.Text.EncoderFallbackBuffer addrspace(1)* %9)
  br label %19

; <label>:19                                      ; preds = %entry, %6
  ret void
}

INFO:  jitting method ConsoleEncoding::GetMaxByteCount using LLILCJit
Successfully read ConsoleEncoding.GetMaxByteCount

define i32 @ConsoleEncoding.GetMaxByteCount(%System.Text.ConsoleEncoding addrspace(1)* %param0, i32 %param1) {
entry:
  %this = alloca %System.Text.ConsoleEncoding addrspace(1)*
  %arg1 = alloca i32
  store %System.Text.ConsoleEncoding addrspace(1)* %param0, %System.Text.ConsoleEncoding addrspace(1)** %this
  store i32 %param1, i32* %arg1
  %0 = load %System.Text.ConsoleEncoding addrspace(1)*, %System.Text.ConsoleEncoding addrspace(1)** %this
  %1 = getelementptr inbounds %System.Text.ConsoleEncoding, %System.Text.ConsoleEncoding addrspace(1)* %0, i32 0, i32 8
  %2 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)* addrspace(1)* %1, align 8
  %3 = load i32, i32* %arg1
  %4 = bitcast %System.Text.Encoding addrspace(1)* %2 to i64 addrspace(1)*
  %5 = load i64, i64 addrspace(1)* %4
  %6 = add i64 %5, 96
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7
  %9 = add i64 %8, 16
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10
  %12 = inttoptr i64 %11 to i32 (%System.Text.Encoding addrspace(1)*, i32)*
  %13 = call i32 %12(%System.Text.Encoding addrspace(1)* %2, i32 %3)
  ret i32 %13
}

INFO:  jitting method UTF8Encoding::GetMaxByteCount using LLILCJit
Successfully read UTF8Encoding.GetMaxByteCount

define i32 @UTF8Encoding.GetMaxByteCount(%System.Text.UTF8Encoding addrspace(1)* %param0, i32 %param1) {
entry:
  %this = alloca %System.Text.UTF8Encoding addrspace(1)*
  %arg1 = alloca i32
  %loc0 = alloca i64
  store %System.Text.UTF8Encoding addrspace(1)* %param0, %System.Text.UTF8Encoding addrspace(1)** %this
  store i32 %param1, i32* %arg1
  %0 = load i32, i32* %arg1
  %1 = icmp sge i32 %0, 0
  br i1 %1, label %7, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %4 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %5 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %4)
  %6 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %6, %System.String addrspace(1)* %3, %System.String addrspace(1)* %5)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %6) #0
  unreachable

; <label>:7                                       ; preds = %entry
  %8 = load i32, i32* %arg1
  %9 = sext i32 %8 to i64
  %10 = add i64 %9, 1
  store i64 %10, i64* %loc0
  %11 = load %System.Text.UTF8Encoding addrspace(1)*, %System.Text.UTF8Encoding addrspace(1)** %this
  %12 = bitcast %System.Text.UTF8Encoding addrspace(1)* %11 to %System.Text.Encoding addrspace(1)*
  %13 = call %System.Text.EncoderFallback addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.EncoderFallback addrspace(1)* (%System.Text.Encoding addrspace(1)*)*)(%System.Text.Encoding addrspace(1)* %12)
  %14 = bitcast %System.Text.EncoderFallback addrspace(1)* %13 to i64 addrspace(1)*
  %15 = load i64, i64 addrspace(1)* %14
  %16 = add i64 %15, 64
  %17 = inttoptr i64 %16 to i64*
  %18 = load i64, i64* %17
  %19 = add i64 %18, 40
  %20 = inttoptr i64 %19 to i64*
  %21 = load i64, i64* %20
  %22 = inttoptr i64 %21 to i32 (%System.Text.EncoderFallback addrspace(1)*)*
  %23 = call i32 %22(%System.Text.EncoderFallback addrspace(1)* %13)
  %24 = icmp sle i32 %23, 1
  br i1 %24, label %42, label %25

; <label>:25                                      ; preds = %7
  %26 = load i64, i64* %loc0
  %27 = load %System.Text.UTF8Encoding addrspace(1)*, %System.Text.UTF8Encoding addrspace(1)** %this
  %28 = bitcast %System.Text.UTF8Encoding addrspace(1)* %27 to %System.Text.Encoding addrspace(1)*
  %29 = call %System.Text.EncoderFallback addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.EncoderFallback addrspace(1)* (%System.Text.Encoding addrspace(1)*)*)(%System.Text.Encoding addrspace(1)* %28)
  %30 = bitcast %System.Text.EncoderFallback addrspace(1)* %29 to i64 addrspace(1)*
  %31 = load i64, i64 addrspace(1)* %30
  %32 = add i64 %31, 64
  %33 = inttoptr i64 %32 to i64*
  %34 = load i64, i64* %33
  %35 = add i64 %34, 40
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36
  %38 = inttoptr i64 %37 to i32 (%System.Text.EncoderFallback addrspace(1)*)*
  %39 = call i32 %38(%System.Text.EncoderFallback addrspace(1)* %29)
  %40 = sext i32 %39 to i64
  %41 = mul i64 %26, %40
  store i64 %41, i64* %loc0
  br label %42

; <label>:42                                      ; preds = %7, %25
  %43 = load i64, i64* %loc0
  %44 = mul i64 %43, 3
  store i64 %44, i64* %loc0
  %45 = load i64, i64* %loc0
  %46 = icmp sle i64 %45, 2147483647
  br i1 %46, label %52, label %47

; <label>:47                                      ; preds = %42
  %48 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %49 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %50 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %49)
  %51 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %51, %System.String addrspace(1)* %48, %System.String addrspace(1)* %50)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %51) #0
  unreachable

; <label>:52                                      ; preds = %42
  %53 = load i64, i64* %loc0
  %54 = trunc i64 %53 to i32
  ret i32 %54
}

INFO:  jitting method EncoderReplacementFallback::get_MaxCharCount using LLILCJit
Successfully read EncoderReplacementFallback.get_MaxCharCount

define i32 @EncoderReplacementFallback.get_MaxCharCount(%System.Text.EncoderReplacementFallback addrspace(1)* %param0) {
entry:
  %this = alloca %System.Text.EncoderReplacementFallback addrspace(1)*
  store %System.Text.EncoderReplacementFallback addrspace(1)* %param0, %System.Text.EncoderReplacementFallback addrspace(1)** %this
  %0 = load %System.Text.EncoderReplacementFallback addrspace(1)*, %System.Text.EncoderReplacementFallback addrspace(1)** %this
  %1 = getelementptr inbounds %System.Text.EncoderReplacementFallback, %System.Text.EncoderReplacementFallback addrspace(1)* %0, i32 0, i32 3
  %2 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %1, align 8
  %3 = getelementptr inbounds %System.String, %System.String addrspace(1)* %2, i32 0, i32 1
  %4 = load i32, i32 addrspace(1)* %3
  ret i32 %4
}

INFO:  jitting method ConsoleStream::get_CanSeek using LLILCJit
Successfully read ConsoleStream.get_CanSeek

define i8 @ConsoleStream.get_CanSeek(%System.IO.ConsoleStream addrspace(1)* %param0) {
entry:
  %this = alloca %System.IO.ConsoleStream addrspace(1)*
  store %System.IO.ConsoleStream addrspace(1)* %param0, %System.IO.ConsoleStream addrspace(1)** %this
  ret i8 0
}

INFO:  jitting method StreamWriter::set_AutoFlush using LLILCJit
Successfully read StreamWriter.set_AutoFlush

define void @StreamWriter.set_AutoFlush(%System.IO.StreamWriter addrspace(1)* %param0, i8 %param1) {
entry:
  %this = alloca %System.IO.StreamWriter addrspace(1)*
  %arg1 = alloca i8
  store %System.IO.StreamWriter addrspace(1)* %param0, %System.IO.StreamWriter addrspace(1)** %this
  store i8 %param1, i8* %arg1
  %0 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.StreamWriter addrspace(1)*)*)(%System.IO.StreamWriter addrspace(1)* %0)
  %1 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %2 = load i8, i8* %arg1
  %3 = zext i8 %2 to i32
  %4 = trunc i32 %3 to i8
  %5 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %1, i32 0, i32 11
  store i8 %4, i8 addrspace(1)* %5
  %6 = load i8, i8* %arg1
  %7 = zext i8 %6 to i32
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

; <label>:9                                       ; preds = %entry
  %10 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.StreamWriter addrspace(1)*, i8, i8)*)(%System.IO.StreamWriter addrspace(1)* %10, i8 1, i8 0)
  br label %11

; <label>:11                                      ; preds = %entry, %9
  ret void
}

INFO:  jitting method StreamWriter::CheckAsyncTaskInProgress using LLILCJit
Successfully read StreamWriter.CheckAsyncTaskInProgress

define void @StreamWriter.CheckAsyncTaskInProgress(%System.IO.StreamWriter addrspace(1)* %param0) {
entry:
  %this = alloca %System.IO.StreamWriter addrspace(1)*
  %loc0 = alloca %System.Threading.Tasks.Task addrspace(1)*
  store %System.IO.StreamWriter addrspace(1)* %param0, %System.IO.StreamWriter addrspace(1)** %this
  %0 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %1 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %0, i32 0, i32 8
  %2 = load volatile %System.Threading.Tasks.Task addrspace(1)*, %System.Threading.Tasks.Task addrspace(1)* addrspace(1)* %1, align 8
  store %System.Threading.Tasks.Task addrspace(1)* %2, %System.Threading.Tasks.Task addrspace(1)** %loc0
  %3 = load %System.Threading.Tasks.Task addrspace(1)*, %System.Threading.Tasks.Task addrspace(1)** %loc0
  %4 = icmp eq %System.Threading.Tasks.Task addrspace(1)* %3, null
  br i1 %4, label %15, label %5

; <label>:5                                       ; preds = %entry
  %6 = load %System.Threading.Tasks.Task addrspace(1)*, %System.Threading.Tasks.Task addrspace(1)** %loc0
  %NullCheck = icmp ne %System.Threading.Tasks.Task addrspace(1)* %6, null
  br i1 %NullCheck, label %7, label %ThrowNullRef

; <label>:7                                       ; preds = %5
  %8 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.Threading.Tasks.Task addrspace(1)*)*)(%System.Threading.Tasks.Task addrspace(1)* %6)
  %9 = zext i8 %8 to i32
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %15, label %11

; <label>:11                                      ; preds = %7
  %12 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %13 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %12)
  %14 = call %System.InvalidOperationException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.InvalidOperationException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.InvalidOperationException addrspace(1)*, %System.String addrspace(1)*)*)(%System.InvalidOperationException addrspace(1)* %14, %System.String addrspace(1)* %13)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.InvalidOperationException addrspace(1)*)*)(%System.InvalidOperationException addrspace(1)* %14) #0
  unreachable

; <label>:15                                      ; preds = %entry, %7
  ret void

ThrowNullRef:                                     ; preds = %5
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method StreamWriter::Flush using LLILCJit
Successfully read StreamWriter.Flush

define void @StreamWriter.Flush(%System.IO.StreamWriter addrspace(1)* %param0, i8 %param1, i8 %param2) {
entry:
  %this = alloca %System.IO.StreamWriter addrspace(1)*
  %arg1 = alloca i8
  %arg2 = alloca i8
  %loc0 = alloca %"System.Byte[]" addrspace(1)*
  %loc1 = alloca i32
  store %System.IO.StreamWriter addrspace(1)* %param0, %System.IO.StreamWriter addrspace(1)** %this
  store i8 %param1, i8* %arg1
  store i8 %param2, i8* %arg2
  %0 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %1 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %0, i32 0, i32 3
  %2 = load %System.IO.Stream addrspace(1)*, %System.IO.Stream addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %System.IO.Stream addrspace(1)* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %entry
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)()
  br label %5

; <label>:5                                       ; preds = %entry, %4
  %6 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %7 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %6, i32 0, i32 9
  %8 = load i32, i32 addrspace(1)* %7, align 8
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %23, label %10

; <label>:10                                      ; preds = %5
  %11 = load i8, i8* %arg1
  %12 = zext i8 %11 to i32
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %18, label %14

; <label>:14                                      ; preds = %10
  %15 = load i8, i8* %arg2
  %16 = zext i8 %15 to i32
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %22, label %18

; <label>:18                                      ; preds = %10, %14
  %19 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 ()*)()
  %20 = zext i8 %19 to i32
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22

; <label>:22                                      ; preds = %14, %18
  ret void

; <label>:23                                      ; preds = %5, %18
  %24 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %25 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %24, i32 0, i32 12
  %26 = load i8, i8 addrspace(1)* %25, align 8
  %27 = zext i8 %26 to i32
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %70, label %29

; <label>:29                                      ; preds = %23
  %30 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %31 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %30, i32 0, i32 12
  store i8 1, i8 addrspace(1)* %31
  %32 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %33 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %32, i32 0, i32 4
  %34 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)* addrspace(1)* %33, align 8
  %35 = bitcast %System.Text.Encoding addrspace(1)* %34 to i64 addrspace(1)*
  %36 = load i64, i64 addrspace(1)* %35
  %37 = add i64 %36, 64
  %38 = inttoptr i64 %37 to i64*
  %39 = load i64, i64* %38
  %40 = add i64 %39, 40
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41
  %43 = inttoptr i64 %42 to %"System.Byte[]" addrspace(1)* (%System.Text.Encoding addrspace(1)*)*
  %44 = call %"System.Byte[]" addrspace(1)* %43(%System.Text.Encoding addrspace(1)* %34)
  store %"System.Byte[]" addrspace(1)* %44, %"System.Byte[]" addrspace(1)** %loc0
  %45 = load %"System.Byte[]" addrspace(1)*, %"System.Byte[]" addrspace(1)** %loc0
  %46 = getelementptr inbounds %"System.Byte[]", %"System.Byte[]" addrspace(1)* %45, i32 0, i32 1
  %47 = load i32, i32 addrspace(1)* %46
  %48 = zext i32 %47 to i64
  %49 = trunc i64 %48 to i32
  %50 = icmp sle i32 %49, 0
  br i1 %50, label %70, label %51

; <label>:51                                      ; preds = %29
  %52 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %53 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %52, i32 0, i32 3
  %54 = load %System.IO.Stream addrspace(1)*, %System.IO.Stream addrspace(1)* addrspace(1)* %53, align 8
  %55 = load %"System.Byte[]" addrspace(1)*, %"System.Byte[]" addrspace(1)** %loc0
  %56 = load %"System.Byte[]" addrspace(1)*, %"System.Byte[]" addrspace(1)** %loc0
  %57 = getelementptr inbounds %"System.Byte[]", %"System.Byte[]" addrspace(1)* %56, i32 0, i32 1
  %58 = load i32, i32 addrspace(1)* %57
  %59 = zext i32 %58 to i64
  %60 = trunc i64 %59 to i32
  %61 = bitcast %System.IO.Stream addrspace(1)* %54 to i64 addrspace(1)*
  %62 = load i64, i64 addrspace(1)* %61
  %63 = add i64 %62, 88
  %64 = inttoptr i64 %63 to i64*
  %65 = load i64, i64* %64
  %66 = add i64 %65, 56
  %67 = inttoptr i64 %66 to i64*
  %68 = load i64, i64* %67
  %69 = inttoptr i64 %68 to void (%System.IO.Stream addrspace(1)*, %"System.Byte[]" addrspace(1)*, i32, i32)*
  call void %69(%System.IO.Stream addrspace(1)* %54, %"System.Byte[]" addrspace(1)* %55, i32 0, i32 %60)
  br label %70

; <label>:70                                      ; preds = %23, %29, %51
  %71 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %72 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %71, i32 0, i32 5
  %73 = load %System.Text.Encoder addrspace(1)*, %System.Text.Encoder addrspace(1)* addrspace(1)* %72, align 8
  %74 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %75 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %74, i32 0, i32 7
  %76 = load %"System.Char[]" addrspace(1)*, %"System.Char[]" addrspace(1)* addrspace(1)* %75, align 8
  %77 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %78 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %77, i32 0, i32 9
  %79 = load i32, i32 addrspace(1)* %78, align 8
  %80 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %81 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %80, i32 0, i32 6
  %82 = load %"System.Byte[]" addrspace(1)*, %"System.Byte[]" addrspace(1)* addrspace(1)* %81, align 8
  %83 = load i8, i8* %arg2
  %84 = zext i8 %83 to i32
  %85 = bitcast %System.Text.Encoder addrspace(1)* %73 to i64 addrspace(1)*
  %86 = load i64, i64 addrspace(1)* %85
  %87 = add i64 %86, 64
  %88 = inttoptr i64 %87 to i64*
  %89 = load i64, i64* %88
  %90 = add i64 %89, 56
  %91 = inttoptr i64 %90 to i64*
  %92 = load i64, i64* %91
  %93 = trunc i32 %84 to i8
  %94 = inttoptr i64 %92 to i32 (%System.Text.Encoder addrspace(1)*, %"System.Char[]" addrspace(1)*, i32, i32, %"System.Byte[]" addrspace(1)*, i32, i8)*
  %95 = call i32 %94(%System.Text.Encoder addrspace(1)* %73, %"System.Char[]" addrspace(1)* %76, i32 0, i32 %79, %"System.Byte[]" addrspace(1)* %82, i32 0, i8 %93)
  store i32 %95, i32* %loc1
  %96 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %97 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %96, i32 0, i32 9
  store i32 0, i32 addrspace(1)* %97
  %98 = load i32, i32* %loc1
  %99 = icmp sle i32 %98, 0
  br i1 %99, label %117, label %100

; <label>:100                                     ; preds = %70
  %101 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %102 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %101, i32 0, i32 3
  %103 = load %System.IO.Stream addrspace(1)*, %System.IO.Stream addrspace(1)* addrspace(1)* %102, align 8
  %104 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %105 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %104, i32 0, i32 6
  %106 = load %"System.Byte[]" addrspace(1)*, %"System.Byte[]" addrspace(1)* addrspace(1)* %105, align 8
  %107 = load i32, i32* %loc1
  %108 = bitcast %System.IO.Stream addrspace(1)* %103 to i64 addrspace(1)*
  %109 = load i64, i64 addrspace(1)* %108
  %110 = add i64 %109, 88
  %111 = inttoptr i64 %110 to i64*
  %112 = load i64, i64* %111
  %113 = add i64 %112, 56
  %114 = inttoptr i64 %113 to i64*
  %115 = load i64, i64* %114
  %116 = inttoptr i64 %115 to void (%System.IO.Stream addrspace(1)*, %"System.Byte[]" addrspace(1)*, i32, i32)*
  call void %116(%System.IO.Stream addrspace(1)* %103, %"System.Byte[]" addrspace(1)* %106, i32 0, i32 %107)
  br label %117

; <label>:117                                     ; preds = %70, %100
  %118 = load i8, i8* %arg1
  %119 = zext i8 %118 to i32
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %134, label %121

; <label>:121                                     ; preds = %117
  %122 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %123 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %122, i32 0, i32 3
  %124 = load %System.IO.Stream addrspace(1)*, %System.IO.Stream addrspace(1)* addrspace(1)* %123, align 8
  %125 = bitcast %System.IO.Stream addrspace(1)* %124 to i64 addrspace(1)*
  %126 = load i64, i64 addrspace(1)* %125
  %127 = add i64 %126, 80
  %128 = inttoptr i64 %127 to i64*
  %129 = load i64, i64* %128
  %130 = add i64 %129, 24
  %131 = inttoptr i64 %130 to i64*
  %132 = load i64, i64* %131
  %133 = inttoptr i64 %132 to void (%System.IO.Stream addrspace(1)*)*
  call void %133(%System.IO.Stream addrspace(1)* %124)
  br label %134

; <label>:134                                     ; preds = %117, %121
  ret void
}

INFO:  jitting method CompatibilitySwitches::get_IsAppEarlierThanWindowsPhone8 using LLILCJit
Successfully read CompatibilitySwitches.get_IsAppEarlierThanWindowsPhone8

define i8 @CompatibilitySwitches.get_IsAppEarlierThanWindowsPhone8() {
entry:
  %0 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 154)
  %1 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 1987
  %2 = addrspacecast i8 addrspace(1)* %1 to i8*
  %3 = load i8, i8* %2
  %4 = zext i8 %3 to i32
  %5 = trunc i32 %4 to i8
  ret i8 %5
}

INFO:  jitting method SyncTextWriter::GetSynchronizedTextWriter using LLILCJit
Successfully read SyncTextWriter.GetSynchronizedTextWriter

define %System.IO.TextWriter addrspace(1)* @SyncTextWriter.GetSynchronizedTextWriter(%System.IO.TextWriter addrspace(1)* %param0) {
entry:
  %arg0 = alloca %System.IO.TextWriter addrspace(1)*
  store %System.IO.TextWriter addrspace(1)* %param0, %System.IO.TextWriter addrspace(1)** %arg0
  %0 = load %System.IO.TextWriter addrspace(1)*, %System.IO.TextWriter addrspace(1)** %arg0
  %1 = icmp ne %System.IO.TextWriter addrspace(1)* %0, null
  br i1 %1, label %5, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %4 = call %System.ArgumentNullException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentNullException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %4, %System.String addrspace(1)* %3)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %4) #0
  unreachable

; <label>:5                                       ; preds = %entry
  %6 = load %System.IO.TextWriter addrspace(1)*, %System.IO.TextWriter addrspace(1)** %arg0
  %7 = call %System.IO.SyncTextWriter addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.IO.SyncTextWriter addrspace(1)* (i64, %System.IO.TextWriter addrspace(1)*)*)(i64 NORMALIZED_ADDRESS, %System.IO.TextWriter addrspace(1)* %6)
  %8 = icmp ne %System.IO.SyncTextWriter addrspace(1)* %7, null
  br i1 %8, label %13, label %9

; <label>:9                                       ; preds = %5
  %10 = load %System.IO.TextWriter addrspace(1)*, %System.IO.TextWriter addrspace(1)** %arg0
  %11 = call %System.IO.SyncTextWriter addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.IO.SyncTextWriter addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.SyncTextWriter addrspace(1)*, %System.IO.TextWriter addrspace(1)*)*)(%System.IO.SyncTextWriter addrspace(1)* %11, %System.IO.TextWriter addrspace(1)* %10)
  %12 = bitcast %System.IO.SyncTextWriter addrspace(1)* %11 to %System.IO.TextWriter addrspace(1)*
  ret %System.IO.TextWriter addrspace(1)* %12

; <label>:13                                      ; preds = %5
  %14 = load %System.IO.TextWriter addrspace(1)*, %System.IO.TextWriter addrspace(1)** %arg0
  ret %System.IO.TextWriter addrspace(1)* %14
}

INFO:  jitting method SyncTextWriter::.ctor using LLILCJit
Successfully read SyncTextWriter..ctor

define void @SyncTextWriter..ctor(%System.IO.SyncTextWriter addrspace(1)* %param0, %System.IO.TextWriter addrspace(1)* %param1) {
entry:
  %this = alloca %System.IO.SyncTextWriter addrspace(1)*
  %arg1 = alloca %System.IO.TextWriter addrspace(1)*
  store %System.IO.SyncTextWriter addrspace(1)* %param0, %System.IO.SyncTextWriter addrspace(1)** %this
  store %System.IO.TextWriter addrspace(1)* %param1, %System.IO.TextWriter addrspace(1)** %arg1
  %0 = load %System.IO.SyncTextWriter addrspace(1)*, %System.IO.SyncTextWriter addrspace(1)** %this
  %1 = call %System.Object addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Object addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %1)
  %2 = getelementptr inbounds %System.IO.SyncTextWriter, %System.IO.SyncTextWriter addrspace(1)* %0, i32 0, i32 3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)* addrspace(1)*, %System.Object addrspace(1)*)*)(%System.Object addrspace(1)* addrspace(1)* %2, %System.Object addrspace(1)* %1)
  %3 = load %System.IO.SyncTextWriter addrspace(1)*, %System.IO.SyncTextWriter addrspace(1)** %this
  %4 = load %System.IO.TextWriter addrspace(1)*, %System.IO.TextWriter addrspace(1)** %arg1
  %5 = bitcast %System.IO.TextWriter addrspace(1)* %4 to i64 addrspace(1)*
  %6 = load i64, i64 addrspace(1)* %5
  %7 = add i64 %6, 64
  %8 = inttoptr i64 %7 to i64*
  %9 = load i64, i64* %8
  %10 = add i64 %9, 32
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  %13 = inttoptr i64 %12 to %System.IFormatProvider addrspace(1)* (%System.IO.TextWriter addrspace(1)*)*
  %14 = call %System.IFormatProvider addrspace(1)* %13(%System.IO.TextWriter addrspace(1)* %4)
  %15 = bitcast %System.IO.SyncTextWriter addrspace(1)* %3 to %System.IO.TextWriter addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.TextWriter addrspace(1)*, %System.IFormatProvider addrspace(1)*)*)(%System.IO.TextWriter addrspace(1)* %15, %System.IFormatProvider addrspace(1)* %14)
  %16 = load %System.IO.SyncTextWriter addrspace(1)*, %System.IO.SyncTextWriter addrspace(1)** %this
  %17 = load %System.IO.TextWriter addrspace(1)*, %System.IO.TextWriter addrspace(1)** %arg1
  %18 = getelementptr inbounds %System.IO.SyncTextWriter, %System.IO.SyncTextWriter addrspace(1)* %16, i32 0, i32 4
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.TextWriter addrspace(1)* addrspace(1)*, %System.IO.TextWriter addrspace(1)*)*)(%System.IO.TextWriter addrspace(1)* addrspace(1)* %18, %System.IO.TextWriter addrspace(1)* %17)
  ret void
}

INFO:  jitting method TextWriter::get_FormatProvider using LLILCJit
Successfully read TextWriter.get_FormatProvider

define %System.IFormatProvider addrspace(1)* @TextWriter.get_FormatProvider(%System.IO.TextWriter addrspace(1)* %param0) {
entry:
  %this = alloca %System.IO.TextWriter addrspace(1)*
  store %System.IO.TextWriter addrspace(1)* %param0, %System.IO.TextWriter addrspace(1)** %this
  %0 = load %System.IO.TextWriter addrspace(1)*, %System.IO.TextWriter addrspace(1)** %this
  %1 = getelementptr inbounds %System.IO.TextWriter, %System.IO.TextWriter addrspace(1)* %0, i32 0, i32 2
  %2 = load %System.IFormatProvider addrspace(1)*, %System.IFormatProvider addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %System.IFormatProvider addrspace(1)* %2, null
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %entry
  %5 = call %System.Threading.Thread addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Threading.Thread addrspace(1)* ()*)()
  %NullCheck = icmp ne %System.Threading.Thread addrspace(1)* %5, null
  br i1 %NullCheck, label %6, label %ThrowNullRef

; <label>:6                                       ; preds = %4
  %7 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* (%System.Threading.Thread addrspace(1)*)*)(%System.Threading.Thread addrspace(1)* %5)
  %8 = bitcast %System.Globalization.CultureInfo addrspace(1)* %7 to %System.IFormatProvider addrspace(1)*
  ret %System.IFormatProvider addrspace(1)* %8

; <label>:9                                       ; preds = %entry
  %10 = load %System.IO.TextWriter addrspace(1)*, %System.IO.TextWriter addrspace(1)** %this
  %11 = getelementptr inbounds %System.IO.TextWriter, %System.IO.TextWriter addrspace(1)* %10, i32 0, i32 2
  %12 = load %System.IFormatProvider addrspace(1)*, %System.IFormatProvider addrspace(1)* addrspace(1)* %11, align 8
  ret %System.IFormatProvider addrspace(1)* %12

ThrowNullRef:                                     ; preds = %4
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method Thread::get_CurrentThread using LLILCJit
Failed to read Thread.get_CurrentThread[Call intrinsic]
INFO:  jitting method Object::Finalize using LLILCJit
Successfully read Object.Finalize

define void @Object.Finalize(%System.Object addrspace(1)* %param0) {
entry:
  %this = alloca %System.Object addrspace(1)*
  store %System.Object addrspace(1)* %param0, %System.Object addrspace(1)** %this
  ret void
}

INFO:  jitting method CriticalFinalizerObject::Finalize using LLILCJit
Successfully read CriticalFinalizerObject.Finalize

define void @CriticalFinalizerObject.Finalize(%System.Runtime.ConstrainedExecution.CriticalFinalizerObject addrspace(1)* %param0) {
entry:
  %this = alloca %System.Runtime.ConstrainedExecution.CriticalFinalizerObject addrspace(1)*
  store %System.Runtime.ConstrainedExecution.CriticalFinalizerObject addrspace(1)* %param0, %System.Runtime.ConstrainedExecution.CriticalFinalizerObject addrspace(1)** %this
  br label %0

; <label>:0                                       ; preds = %entry
  %1 = load %System.Runtime.ConstrainedExecution.CriticalFinalizerObject addrspace(1)*, %System.Runtime.ConstrainedExecution.CriticalFinalizerObject addrspace(1)** %this
  %2 = bitcast %System.Runtime.ConstrainedExecution.CriticalFinalizerObject addrspace(1)* %1 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %2)
  br label %3

; <label>:3                                       ; preds = %0
  ret void
}

INFO:  jitting method Thread::Finalize using LLILCJit
Successfully read Thread.Finalize

define void @Thread.Finalize(%System.Threading.Thread addrspace(1)* %param0) {
entry:
  %this = alloca %System.Threading.Thread addrspace(1)*
  store %System.Threading.Thread addrspace(1)* %param0, %System.Threading.Thread addrspace(1)** %this
  %0 = load %System.Threading.Thread addrspace(1)*, %System.Threading.Thread addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Threading.Thread addrspace(1)*)*)(%System.Threading.Thread addrspace(1)* %0)
  br label %1

; <label>:1                                       ; preds = %entry
  %2 = load %System.Threading.Thread addrspace(1)*, %System.Threading.Thread addrspace(1)** %this
  %3 = bitcast %System.Threading.Thread addrspace(1)* %2 to %System.Runtime.ConstrainedExecution.CriticalFinalizerObject addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Runtime.ConstrainedExecution.CriticalFinalizerObject addrspace(1)*)*)(%System.Runtime.ConstrainedExecution.CriticalFinalizerObject addrspace(1)* %3)
  br label %4

; <label>:4                                       ; preds = %1
  ret void
}

INFO:  jitting method Thread::get_CurrentCulture using LLILCJit
Successfully read Thread.get_CurrentCulture

define %System.Globalization.CultureInfo addrspace(1)* @Thread.get_CurrentCulture(%System.Threading.Thread addrspace(1)* %param0) {
entry:
  %this = alloca %System.Threading.Thread addrspace(1)*
  store %System.Threading.Thread addrspace(1)* %param0, %System.Threading.Thread addrspace(1)** %this
  %0 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 ()*)()
  %1 = zext i8 %0 to i32
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %11, label %3

; <label>:3                                       ; preds = %entry
  %4 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* ()*)()
  %5 = icmp ne %System.Globalization.CultureInfo addrspace(1)* %4, null
  br i1 %5, label %9, label %6

; <label>:6                                       ; preds = %3
  %7 = load %System.Threading.Thread addrspace(1)*, %System.Threading.Thread addrspace(1)** %this
  %8 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* (%System.Threading.Thread addrspace(1)*)*)(%System.Threading.Thread addrspace(1)* %7)
  br label %9

; <label>:9                                       ; preds = %3, %6
  %10 = phi %System.Globalization.CultureInfo addrspace(1)* [ %4, %3 ], [ %8, %6 ]
  ret %System.Globalization.CultureInfo addrspace(1)* %10

; <label>:11                                      ; preds = %entry
  %12 = load %System.Threading.Thread addrspace(1)*, %System.Threading.Thread addrspace(1)** %this
  %13 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* (%System.Threading.Thread addrspace(1)*)*)(%System.Threading.Thread addrspace(1)* %12)
  ret %System.Globalization.CultureInfo addrspace(1)* %13
}

INFO:  jitting method AppDomain::IsAppXModel using LLILCJit
Successfully read AppDomain.IsAppXModel

define i8 @AppDomain.IsAppXModel() {
entry:
  %0 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 ()*)()
  %1 = and i32 %0, 2
  %2 = icmp eq i32 %1, 0
  %3 = sext i1 %2 to i32
  %4 = icmp eq i32 %3, 0
  %5 = sext i1 %4 to i32
  %6 = trunc i32 %5 to i8
  ret i8 %6
}

INFO:  jitting method AppDomain::get_Flags using LLILCJit
Successfully read AppDomain.get_Flags

define i32 @AppDomain.get_Flags() {
entry:
  %0 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 123)
  %1 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 1980
  %2 = addrspacecast i8 addrspace(1)* %1 to i32*
  %3 = load i32, i32* %2
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %10, label %5

; <label>:5                                       ; preds = %entry
  %6 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 ()*)()
  %7 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 123)
  %8 = getelementptr inbounds i8, i8 addrspace(1)* %7, i64 1980
  %9 = addrspacecast i8 addrspace(1)* %8 to i32*
  store i32 %6, i32* %9
  br label %10

; <label>:10                                      ; preds = %entry, %5
  %11 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 123)
  %12 = getelementptr inbounds i8, i8 addrspace(1)* %11, i64 1980
  %13 = addrspacecast i8 addrspace(1)* %12 to i32*
  %14 = load i32, i32* %13
  ret i32 %14
}

INFO:  jitting method DomainNeutralILStubClass::IL_STUB_PInvoke using LLILCJit
Failed to read DomainNeutralILStubClass.IL_STUB_PInvoke[publish secret param]
INFO:  jitting method Thread::GetCurrentCultureNoAppX using LLILCJit
Successfully read Thread.GetCurrentCultureNoAppX

define %System.Globalization.CultureInfo addrspace(1)* @Thread.GetCurrentCultureNoAppX(%System.Threading.Thread addrspace(1)* %param0) {
entry:
  %this = alloca %System.Threading.Thread addrspace(1)*
  %loc0 = alloca %System.Globalization.CultureInfo addrspace(1)*
  store %System.Threading.Thread addrspace(1)* %param0, %System.Threading.Thread addrspace(1)** %this
  %0 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 392)
  %1 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 24
  %2 = addrspacecast i8 addrspace(1)* %1 to %System.Globalization.CultureInfo addrspace(1)**
  %3 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %2
  %4 = icmp ne %System.Globalization.CultureInfo addrspace(1)* %3, null
  br i1 %4, label %13, label %5

; <label>:5                                       ; preds = %entry
  %6 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* ()*)()
  store %System.Globalization.CultureInfo addrspace(1)* %6, %System.Globalization.CultureInfo addrspace(1)** %loc0
  %7 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %loc0
  %8 = icmp ne %System.Globalization.CultureInfo addrspace(1)* %7, null
  br i1 %8, label %11, label %9

; <label>:9                                       ; preds = %5
  %10 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* ()*)()
  ret %System.Globalization.CultureInfo addrspace(1)* %10

; <label>:11                                      ; preds = %5
  %12 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %loc0
  ret %System.Globalization.CultureInfo addrspace(1)* %12

; <label>:13                                      ; preds = %entry
  %14 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 392)
  %15 = getelementptr inbounds i8, i8 addrspace(1)* %14, i64 24
  %16 = addrspacecast i8 addrspace(1)* %15 to %System.Globalization.CultureInfo addrspace(1)**
  %17 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %16
  ret %System.Globalization.CultureInfo addrspace(1)* %17
}

INFO:  jitting method CultureInfo::get_DefaultThreadCurrentCulture using LLILCJit
Successfully read CultureInfo.get_DefaultThreadCurrentCulture

define %System.Globalization.CultureInfo addrspace(1)* @CultureInfo.get_DefaultThreadCurrentCulture() {
entry:
  %0 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 979)
  %1 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 1744
  %2 = addrspacecast i8 addrspace(1)* %1 to %System.Globalization.CultureInfo addrspace(1)**
  %3 = load volatile %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %2
  ret %System.Globalization.CultureInfo addrspace(1)* %3
}

INFO:  jitting method SyncTextWriter::WriteLine using LLILCJit
Successfully read SyncTextWriter.WriteLine

define void @SyncTextWriter.WriteLine(%System.IO.SyncTextWriter addrspace(1)* %param0, float %param1) {
entry:
  %this = alloca %System.IO.SyncTextWriter addrspace(1)*
  %arg1 = alloca float
  %loc0 = alloca %System.Object addrspace(1)*
  %loc1 = alloca i8
  store %System.IO.SyncTextWriter addrspace(1)* %param0, %System.IO.SyncTextWriter addrspace(1)** %this
  store float %param1, float* %arg1
  store i8 0, i8* %loc1
  %0 = load %System.IO.SyncTextWriter addrspace(1)*, %System.IO.SyncTextWriter addrspace(1)** %this
  %1 = getelementptr inbounds %System.IO.SyncTextWriter, %System.IO.SyncTextWriter addrspace(1)* %0, i32 0, i32 3
  %2 = load %System.Object addrspace(1)*, %System.Object addrspace(1)* addrspace(1)* %1, align 8
  store %System.Object addrspace(1)* %2, %System.Object addrspace(1)** %loc0
  %3 = load %System.Object addrspace(1)*, %System.Object addrspace(1)** %loc0
  %4 = addrspacecast i8* %loc1 to i8 addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*, i8 addrspace(1)*)*)(%System.Object addrspace(1)* %3, i8 addrspace(1)* %4)
  %5 = load %System.IO.SyncTextWriter addrspace(1)*, %System.IO.SyncTextWriter addrspace(1)** %this
  %6 = getelementptr inbounds %System.IO.SyncTextWriter, %System.IO.SyncTextWriter addrspace(1)* %5, i32 0, i32 4
  %7 = load %System.IO.TextWriter addrspace(1)*, %System.IO.TextWriter addrspace(1)* addrspace(1)* %6, align 8
  %8 = load float, float* %arg1
  %9 = bitcast %System.IO.TextWriter addrspace(1)* %7 to i64 addrspace(1)*
  %10 = load i64, i64 addrspace(1)* %9
  %11 = add i64 %10, 96
  %12 = inttoptr i64 %11 to i64*
  %13 = load i64, i64* %12
  %14 = add i64 %13, 48
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15
  %17 = inttoptr i64 %16 to void (%System.IO.TextWriter addrspace(1)*, float)*
  call void %17(%System.IO.TextWriter addrspace(1)* %7, float %8)
  br label %18

; <label>:18                                      ; preds = %entry
  %19 = load i8, i8* %loc1
  %20 = zext i8 %19 to i32
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %24, label %22

; <label>:22                                      ; preds = %18
  %23 = load %System.Object addrspace(1)*, %System.Object addrspace(1)** %loc0
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %23)
  br label %24

; <label>:24                                      ; preds = %18, %22
  br label %25

; <label>:25                                      ; preds = %24
  ret void
}

INFO:  jitting method TextWriter::WriteLine using LLILCJit
Successfully read TextWriter.WriteLine

define void @TextWriter.WriteLine(%System.IO.TextWriter addrspace(1)* %param0, float %param1) {
entry:
  %this = alloca %System.IO.TextWriter addrspace(1)*
  %arg1 = alloca float
  store %System.IO.TextWriter addrspace(1)* %param0, %System.IO.TextWriter addrspace(1)** %this
  store float %param1, float* %arg1
  %0 = load %System.IO.TextWriter addrspace(1)*, %System.IO.TextWriter addrspace(1)** %this
  %1 = load float, float* %arg1
  %2 = bitcast %System.IO.TextWriter addrspace(1)* %0 to i64 addrspace(1)*
  %3 = load i64, i64 addrspace(1)* %2
  %4 = add i64 %3, 80
  %5 = inttoptr i64 %4 to i64*
  %6 = load i64, i64* %5
  %7 = add i64 %6, 32
  %8 = inttoptr i64 %7 to i64*
  %9 = load i64, i64* %8
  %10 = inttoptr i64 %9 to void (%System.IO.TextWriter addrspace(1)*, float)*
  call void %10(%System.IO.TextWriter addrspace(1)* %0, float %1)
  %11 = load %System.IO.TextWriter addrspace(1)*, %System.IO.TextWriter addrspace(1)** %this
  %12 = bitcast %System.IO.TextWriter addrspace(1)* %11 to i64 addrspace(1)*
  %13 = load i64, i64 addrspace(1)* %12
  %14 = add i64 %13, 88
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15
  %17 = add i64 %16, 40
  %18 = inttoptr i64 %17 to i64*
  %19 = load i64, i64* %18
  %20 = inttoptr i64 %19 to void (%System.IO.TextWriter addrspace(1)*)*
  call void %20(%System.IO.TextWriter addrspace(1)* %11)
  ret void
}

INFO:  jitting method TextWriter::Write using LLILCJit
Successfully read TextWriter.Write

define void @TextWriter.Write(%System.IO.TextWriter addrspace(1)* %param0, float %param1) {
entry:
  %this = alloca %System.IO.TextWriter addrspace(1)*
  %arg1 = alloca float
  store %System.IO.TextWriter addrspace(1)* %param0, %System.IO.TextWriter addrspace(1)** %this
  store float %param1, float* %arg1
  %0 = load %System.IO.TextWriter addrspace(1)*, %System.IO.TextWriter addrspace(1)** %this
  %1 = addrspacecast float* %arg1 to float addrspace(1)*
  %2 = load %System.IO.TextWriter addrspace(1)*, %System.IO.TextWriter addrspace(1)** %this
  %3 = bitcast %System.IO.TextWriter addrspace(1)* %2 to i64 addrspace(1)*
  %4 = load i64, i64 addrspace(1)* %3
  %5 = add i64 %4, 64
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6
  %8 = add i64 %7, 32
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9
  %11 = inttoptr i64 %10 to %System.IFormatProvider addrspace(1)* (%System.IO.TextWriter addrspace(1)*)*
  %12 = call %System.IFormatProvider addrspace(1)* %11(%System.IO.TextWriter addrspace(1)* %2)
  %13 = bitcast float addrspace(1)* %1 to %System.Single addrspace(1)*
  %14 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Single addrspace(1)*, %System.IFormatProvider addrspace(1)*)*)(%System.Single addrspace(1)* %13, %System.IFormatProvider addrspace(1)* %12)
  %15 = bitcast %System.IO.TextWriter addrspace(1)* %0 to i64 addrspace(1)*
  %16 = load i64, i64 addrspace(1)* %15
  %17 = add i64 %16, 80
  %18 = inttoptr i64 %17 to i64*
  %19 = load i64, i64* %18
  %20 = add i64 %19, 56
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21
  %23 = inttoptr i64 %22 to void (%System.IO.TextWriter addrspace(1)*, %System.String addrspace(1)*)*
  call void %23(%System.IO.TextWriter addrspace(1)* %0, %System.String addrspace(1)* %14)
  ret void
}

INFO:  jitting method Single::ToString using LLILCJit
Successfully read Single.ToString

define %System.String addrspace(1)* @Single.ToString(%System.Single addrspace(1)* %param0, %System.IFormatProvider addrspace(1)* %param1) {
entry:
  %this = alloca %System.Single addrspace(1)*
  %arg1 = alloca %System.IFormatProvider addrspace(1)*
  store %System.Single addrspace(1)* %param0, %System.Single addrspace(1)** %this
  store %System.IFormatProvider addrspace(1)* %param1, %System.IFormatProvider addrspace(1)** %arg1
  %0 = load %System.Single addrspace(1)*, %System.Single addrspace(1)** %this
  %1 = addrspacecast %System.Single addrspace(1)* %0 to float*
  %2 = load float, float* %1, align 8
  %3 = load %System.IFormatProvider addrspace(1)*, %System.IFormatProvider addrspace(1)** %arg1
  %4 = call %System.Globalization.NumberFormatInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.NumberFormatInfo addrspace(1)* (%System.IFormatProvider addrspace(1)*)*)(%System.IFormatProvider addrspace(1)* %3)
  %5 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (float, %System.String addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)*)*)(float %2, %System.String addrspace(1)* null, %System.Globalization.NumberFormatInfo addrspace(1)* %4)
  ret %System.String addrspace(1)* %5
}

INFO:  jitting method NumberFormatInfo::GetInstance using LLILCJit
Failed to read NumberFormatInfo.GetInstance[convertHandle]
INFO:  jitting method CultureInfo::get_NumberFormat using LLILCJit
Successfully read CultureInfo.get_NumberFormat

define %System.Globalization.NumberFormatInfo addrspace(1)* @CultureInfo.get_NumberFormat(%System.Globalization.CultureInfo addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureInfo addrspace(1)*
  %loc0 = alloca %System.Globalization.NumberFormatInfo addrspace(1)*
  store %System.Globalization.CultureInfo addrspace(1)* %param0, %System.Globalization.CultureInfo addrspace(1)** %this
  %0 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %0, i32 0, i32 3
  %2 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %System.Globalization.NumberFormatInfo addrspace(1)* %2, null
  br i1 %3, label %19, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %6 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %5, i32 0, i32 6
  %7 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)* addrspace(1)* %6, align 8
  %8 = call %System.Globalization.NumberFormatInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.NumberFormatInfo addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.NumberFormatInfo addrspace(1)* %8, %System.Globalization.CultureData addrspace(1)* %7)
  store %System.Globalization.NumberFormatInfo addrspace(1)* %8, %System.Globalization.NumberFormatInfo addrspace(1)** %loc0
  %9 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %loc0
  %10 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %11 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %10, i32 0, i32 11
  %12 = load i8, i8 addrspace(1)* %11, align 8
  %13 = zext i8 %12 to i32
  %14 = trunc i32 %13 to i8
  %15 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %9, i32 0, i32 29
  store i8 %14, i8 addrspace(1)* %15
  %16 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %17 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %loc0
  %18 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %16, i32 0, i32 3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Globalization.NumberFormatInfo addrspace(1)* addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)*)*)(%System.Globalization.NumberFormatInfo addrspace(1)* addrspace(1)* %18, %System.Globalization.NumberFormatInfo addrspace(1)* %17)
  br label %19

; <label>:19                                      ; preds = %entry, %4
  %20 = load %System.Globalization.CultureInfo addrspace(1)*, %System.Globalization.CultureInfo addrspace(1)** %this
  %21 = getelementptr inbounds %System.Globalization.CultureInfo, %System.Globalization.CultureInfo addrspace(1)* %20, i32 0, i32 3
  %22 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)* addrspace(1)* %21, align 8
  ret %System.Globalization.NumberFormatInfo addrspace(1)* %22
}

INFO:  jitting method NumberFormatInfo::.ctor using LLILCJit
Failed to read NumberFormatInfo..ctor[storeElem]
INFO:  jitting method CultureData::GetNFIValues using LLILCJit
Successfully read CultureData.GetNFIValues

define void @CultureData.GetNFIValues(%System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.NumberFormatInfo addrspace(1)* %param1) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  %arg1 = alloca %System.Globalization.NumberFormatInfo addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  store %System.Globalization.NumberFormatInfo addrspace(1)* %param1, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %0 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %1 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %0)
  %2 = zext i8 %1 to i32
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %65, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %6 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %7 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %6, i32 0, i32 18
  %8 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %7, align 8
  %9 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %5, i32 0, i32 4
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %9, %System.String addrspace(1)* %8)
  %10 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %11 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %12 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %11, i32 0, i32 19
  %13 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %12, align 8
  %14 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %10, i32 0, i32 5
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %14, %System.String addrspace(1)* %13)
  %15 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %16 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %17 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %16, i32 0, i32 23
  %18 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %17, align 8
  %19 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %15, i32 0, i32 7
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %19, %System.String addrspace(1)* %18)
  %20 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %21 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %22 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %21, i32 0, i32 22
  %23 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %22, align 8
  %24 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %20, i32 0, i32 6
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %24, %System.String addrspace(1)* %23)
  %25 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %26 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %27 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %26, i32 0, i32 51
  %28 = load i32, i32 addrspace(1)* %27, align 8
  %29 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %25, i32 0, i32 21
  store i32 %28, i32 addrspace(1)* %29
  %30 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %31 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %32 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %31, i32 0, i32 52
  %33 = load i32, i32 addrspace(1)* %32, align 8
  %34 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %30, i32 0, i32 25
  store i32 %33, i32 addrspace(1)* %34
  %35 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %36 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %37 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %36, i32 0, i32 29
  %38 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %37, align 8
  %39 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %35, i32 0, i32 10
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %39, %System.String addrspace(1)* %38)
  %40 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %41 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %42 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %41, i32 0, i32 35
  %43 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %42, align 8
  %44 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %40, i32 0, i32 8
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %44, %System.String addrspace(1)* %43)
  %45 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %46 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %47 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %46, i32 0, i32 34
  %48 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %47, align 8
  %49 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %45, i32 0, i32 9
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %49, %System.String addrspace(1)* %48)
  %50 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %51 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %52 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %51, i32 0, i32 55
  %53 = load i32, i32 addrspace(1)* %52, align 8
  %54 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %50, i32 0, i32 22
  store i32 %53, i32 addrspace(1)* %54
  %55 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %56 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %57 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %56, i32 0, i32 57
  %58 = load i32, i32 addrspace(1)* %57, align 8
  %59 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %55, i32 0, i32 24
  store i32 %58, i32 addrspace(1)* %59
  %60 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %61 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %62 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %61, i32 0, i32 56
  %63 = load i32, i32 addrspace(1)* %62, align 8
  %64 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %60, i32 0, i32 23
  store i32 %63, i32 addrspace(1)* %64
  br label %76

; <label>:65                                      ; preds = %entry
  %66 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %67 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %66, i32 0, i32 2
  %68 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %67, align 8
  %69 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %70 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %71 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %70)
  %72 = zext i8 %71 to i32
  %73 = trunc i32 %72 to i8
  %74 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)*, i8)*)(%System.String addrspace(1)* %68, %System.Globalization.NumberFormatInfo addrspace(1)* %69, i8 %73)
  %75 = zext i8 %74 to i32
  br label %76

; <label>:76                                      ; preds = %4, %65
  %77 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %78 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %79 = call %"System.Int32[]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Int32[]" addrspace(1)* (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %78)
  %80 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %77, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Int32[]" addrspace(1)* addrspace(1)*, %"System.Int32[]" addrspace(1)*)*)(%"System.Int32[]" addrspace(1)* addrspace(1)* %80, %"System.Int32[]" addrspace(1)* %79)
  %81 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %82 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %83 = call %"System.Int32[]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Int32[]" addrspace(1)* (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %82)
  %84 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %81, i32 0, i32 2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Int32[]" addrspace(1)* addrspace(1)*, %"System.Int32[]" addrspace(1)*)*)(%"System.Int32[]" addrspace(1)* addrspace(1)* %84, %"System.Int32[]" addrspace(1)* %83)
  %85 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %86 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %87 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %86)
  %88 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %85, i32 0, i32 27
  store i32 %87, i32 addrspace(1)* %88
  %89 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %90 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %91 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %90)
  %92 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %89, i32 0, i32 26
  store i32 %91, i32 addrspace(1)* %92
  %93 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %94 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %95 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %94)
  %96 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %93, i32 0, i32 17
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %96, %System.String addrspace(1)* %95)
  %97 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %98 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %99 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %98)
  %100 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %97, i32 0, i32 18
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %100, %System.String addrspace(1)* %99)
  %101 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %102 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %103 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %102)
  %104 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %101, i32 0, i32 14
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %104, %System.String addrspace(1)* %103)
  %105 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %106 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %107 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %106)
  %108 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %105, i32 0, i32 13
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %108, %System.String addrspace(1)* %107)
  %109 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %110 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %111 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %110)
  %112 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %109, i32 0, i32 12
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %112, %System.String addrspace(1)* %111)
  %113 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %114 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %115 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %114, i32 0, i32 21
  %116 = load i32, i32 addrspace(1)* %115, align 8
  %117 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %113, i32 0, i32 28
  store i32 %116, i32 addrspace(1)* %117
  %118 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %119 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %120 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %119, i32 0, i32 6
  %121 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %120, align 8
  %122 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %118, i32 0, i32 15
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %122, %System.String addrspace(1)* %121)
  %123 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %124 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %125 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %124, i32 0, i32 1
  %126 = load %"System.Int32[]" addrspace(1)*, %"System.Int32[]" addrspace(1)* addrspace(1)* %125, align 8
  %127 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %123, i32 0, i32 3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Int32[]" addrspace(1)* addrspace(1)*, %"System.Int32[]" addrspace(1)*)*)(%"System.Int32[]" addrspace(1)* addrspace(1)* %127, %"System.Int32[]" addrspace(1)* %126)
  %128 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %129 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %130 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %129, i32 0, i32 7
  %131 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %130, align 8
  %132 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %128, i32 0, i32 16
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %132, %System.String addrspace(1)* %131)
  %133 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %134 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %133, i32 0, i32 4
  %135 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %134, align 8
  %136 = icmp eq %System.String addrspace(1)* %135, null
  br i1 %136, label %144, label %137

; <label>:137                                     ; preds = %76
  %138 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %139 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %138, i32 0, i32 4
  %140 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %139, align 8
  %141 = getelementptr inbounds %System.String, %System.String addrspace(1)* %140, i32 0, i32 1
  %142 = load i32, i32 addrspace(1)* %141
  %143 = icmp ne i32 %142, 0
  br i1 %143, label %148, label %144

; <label>:144                                     ; preds = %76, %137
  %145 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %146 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %147 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %145, i32 0, i32 4
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %147, %System.String addrspace(1)* %146)
  br label %148

; <label>:148                                     ; preds = %137, %144
  %149 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %150 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %149, i32 0, i32 9
  %151 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %150, align 8
  %152 = icmp eq %System.String addrspace(1)* %151, null
  br i1 %152, label %160, label %153

; <label>:153                                     ; preds = %148
  %154 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %155 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %154, i32 0, i32 9
  %156 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %155, align 8
  %157 = getelementptr inbounds %System.String, %System.String addrspace(1)* %156, i32 0, i32 1
  %158 = load i32, i32 addrspace(1)* %157
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %166, label %160

; <label>:160                                     ; preds = %148, %153
  %161 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %162 = load %System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %163 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %162, i32 0, i32 6
  %164 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %163, align 8
  %165 = getelementptr inbounds %System.Globalization.NumberFormatInfo, %System.Globalization.NumberFormatInfo addrspace(1)* %161, i32 0, i32 9
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %165, %System.String addrspace(1)* %164)
  br label %166

; <label>:166                                     ; preds = %153, %160
  ret void
}

INFO:  jitting method CultureData::get_IsInvariantCulture using LLILCJit
Successfully read CultureData.get_IsInvariantCulture

define i8 @CultureData.get_IsInvariantCulture(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %1 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %0)
  %2 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %1)
  %3 = zext i8 %2 to i32
  %4 = trunc i32 %3 to i8
  ret i8 %4
}

INFO:  jitting method CultureData::get_WAGROUPING using LLILCJit
Successfully read CultureData.get_WAGROUPING

define %"System.Int32[]" addrspace(1)* @CultureData.get_WAGROUPING(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 21
  %2 = load %"System.Int32[]" addrspace(1)*, %"System.Int32[]" addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %"System.Int32[]" addrspace(1)* %2, null
  br i1 %3, label %10, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %6 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %7 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*, i32)*)(%System.Globalization.CultureData addrspace(1)* %6, i32 16)
  %8 = call %"System.Int32[]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Int32[]" addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %7)
  %9 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %5, i32 0, i32 21
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Int32[]" addrspace(1)* addrspace(1)*, %"System.Int32[]" addrspace(1)*)*)(%"System.Int32[]" addrspace(1)* addrspace(1)* %9, %"System.Int32[]" addrspace(1)* %8)
  br label %10

; <label>:10                                      ; preds = %entry, %4
  %11 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %12 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %11, i32 0, i32 21
  %13 = load %"System.Int32[]" addrspace(1)*, %"System.Int32[]" addrspace(1)* addrspace(1)* %12, align 8
  ret %"System.Int32[]" addrspace(1)* %13
}

INFO:  jitting method CultureData::DoGetLocaleInfo using LLILCJit
Successfully read CultureData.DoGetLocaleInfo

define %System.String addrspace(1)* @CultureData.DoGetLocaleInfo(%System.Globalization.CultureData addrspace(1)* %param0, i32 %param1) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  %arg1 = alloca i32
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  store i32 %param1, i32* %arg1
  %0 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %1 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %2 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %1, i32 0, i32 2
  %3 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %2, align 8
  %4 = load i32, i32* %arg1
  %5 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*, %System.String addrspace(1)*, i32)*)(%System.Globalization.CultureData addrspace(1)* %0, %System.String addrspace(1)* %3, i32 %4)
  ret %System.String addrspace(1)* %5
}

INFO:  jitting method CultureData::DoGetLocaleInfo using LLILCJit
Successfully read CultureData.DoGetLocaleInfo

define %System.String addrspace(1)* @CultureData.DoGetLocaleInfo(%System.Globalization.CultureData addrspace(1)* %param0, %System.String addrspace(1)* %param1, i32 %param2) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  %arg2 = alloca i32
  %loc0 = alloca %System.String addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  store i32 %param2, i32* %arg2
  %0 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %1 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %0)
  %2 = zext i8 %1 to i32
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %7, label %4

; <label>:4                                       ; preds = %entry
  %5 = load i32, i32* %arg2
  %6 = or i32 %5, -2147483648
  store i32 %6, i32* %arg2
  br label %7

; <label>:7                                       ; preds = %entry, %4
  %8 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %9 = load i32, i32* %arg2
  %10 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*, i32)*)(%System.String addrspace(1)* %8, i32 %9)
  store %System.String addrspace(1)* %10, %System.String addrspace(1)** %loc0
  %11 = load %System.String addrspace(1)*, %System.String addrspace(1)** %loc0
  %12 = icmp ne %System.String addrspace(1)* %11, null
  br i1 %12, label %15, label %13

; <label>:13                                      ; preds = %7
  %14 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  store %System.String addrspace(1)* %14, %System.String addrspace(1)** %loc0
  br label %15

; <label>:15                                      ; preds = %7, %13
  %16 = load %System.String addrspace(1)*, %System.String addrspace(1)** %loc0
  ret %System.String addrspace(1)* %16
}

INFO:  jitting method CultureData::ConvertWin32GroupString using LLILCJit
Failed to read CultureData.ConvertWin32GroupString[storeElem]
INFO:  jitting method CultureData::get_WAMONGROUPING using LLILCJit
Successfully read CultureData.get_WAMONGROUPING

define %"System.Int32[]" addrspace(1)* @CultureData.get_WAMONGROUPING(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 33
  %2 = load %"System.Int32[]" addrspace(1)*, %"System.Int32[]" addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %"System.Int32[]" addrspace(1)* %2, null
  br i1 %3, label %10, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %6 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %7 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*, i32)*)(%System.Globalization.CultureData addrspace(1)* %6, i32 24)
  %8 = call %"System.Int32[]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Int32[]" addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %7)
  %9 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %5, i32 0, i32 33
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Int32[]" addrspace(1)* addrspace(1)*, %"System.Int32[]" addrspace(1)*)*)(%"System.Int32[]" addrspace(1)* addrspace(1)* %9, %"System.Int32[]" addrspace(1)* %8)
  br label %10

; <label>:10                                      ; preds = %entry, %4
  %11 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %12 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %11, i32 0, i32 33
  %13 = load %"System.Int32[]" addrspace(1)*, %"System.Int32[]" addrspace(1)* addrspace(1)* %12, align 8
  ret %"System.Int32[]" addrspace(1)* %13
}

INFO:  jitting method CultureData::get_INEGATIVEPERCENT using LLILCJit
Successfully read CultureData.get_INEGATIVEPERCENT

define i32 @CultureData.get_INEGATIVEPERCENT(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 53
  %2 = load i32, i32 addrspace(1)* %1, align 8
  %3 = icmp ne i32 %2, -1
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %6 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %7 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.Globalization.CultureData addrspace(1)*, i32)*)(%System.Globalization.CultureData addrspace(1)* %6, i32 116)
  %8 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %5, i32 0, i32 53
  store i32 %7, i32 addrspace(1)* %8
  br label %9

; <label>:9                                       ; preds = %entry, %4
  %10 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %11 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %10, i32 0, i32 53
  %12 = load i32, i32 addrspace(1)* %11, align 8
  ret i32 %12
}

INFO:  jitting method CultureData::DoGetLocaleInfoInt using LLILCJit
Successfully read CultureData.DoGetLocaleInfoInt

define i32 @CultureData.DoGetLocaleInfoInt(%System.Globalization.CultureData addrspace(1)* %param0, i32 %param1) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  %arg1 = alloca i32
  %loc0 = alloca i32
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  store i32 %param1, i32* %arg1
  %0 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %1 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %0)
  %2 = zext i8 %1 to i32
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %7, label %4

; <label>:4                                       ; preds = %entry
  %5 = load i32, i32* %arg1
  %6 = or i32 %5, -2147483648
  store i32 %6, i32* %arg1
  br label %7

; <label>:7                                       ; preds = %entry, %4
  %8 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %9 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %8, i32 0, i32 2
  %10 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %9, align 8
  %11 = load i32, i32* %arg1
  %12 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.String addrspace(1)*, i32)*)(%System.String addrspace(1)* %10, i32 %11)
  store i32 %12, i32* %loc0
  %13 = load i32, i32* %loc0
  ret i32 %13
}

INFO:  jitting method CultureData::get_IPOSITIVEPERCENT using LLILCJit
Successfully read CultureData.get_IPOSITIVEPERCENT

define i32 @CultureData.get_IPOSITIVEPERCENT(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 54
  %2 = load i32, i32 addrspace(1)* %1, align 8
  %3 = icmp ne i32 %2, -1
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %6 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %7 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.Globalization.CultureData addrspace(1)*, i32)*)(%System.Globalization.CultureData addrspace(1)* %6, i32 117)
  %8 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %5, i32 0, i32 54
  store i32 %7, i32 addrspace(1)* %8
  br label %9

; <label>:9                                       ; preds = %entry, %4
  %10 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %11 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %10, i32 0, i32 54
  %12 = load i32, i32 addrspace(1)* %11, align 8
  ret i32 %12
}

INFO:  jitting method CultureData::get_SPERCENT using LLILCJit
Successfully read CultureData.get_SPERCENT

define %System.String addrspace(1)* @CultureData.get_SPERCENT(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 27
  %2 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %System.String addrspace(1)* %2, null
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %6 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %7 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*, i32)*)(%System.Globalization.CultureData addrspace(1)* %6, i32 118)
  %8 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %5, i32 0, i32 27
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %8, %System.String addrspace(1)* %7)
  br label %9

; <label>:9                                       ; preds = %entry, %4
  %10 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %11 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %10, i32 0, i32 27
  %12 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %11, align 8
  ret %System.String addrspace(1)* %12
}

INFO:  jitting method CultureData::get_SPERMILLE using LLILCJit
Successfully read CultureData.get_SPERMILLE

define %System.String addrspace(1)* @CultureData.get_SPERMILLE(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 28
  %2 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %System.String addrspace(1)* %2, null
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %6 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %7 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*, i32)*)(%System.Globalization.CultureData addrspace(1)* %6, i32 119)
  %8 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %5, i32 0, i32 28
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %8, %System.String addrspace(1)* %7)
  br label %9

; <label>:9                                       ; preds = %entry, %4
  %10 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %11 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %10, i32 0, i32 28
  %12 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %11, align 8
  ret %System.String addrspace(1)* %12
}

INFO:  jitting method CultureData::get_SNEGINFINITY using LLILCJit
Successfully read CultureData.get_SNEGINFINITY

define %System.String addrspace(1)* @CultureData.get_SNEGINFINITY(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 26
  %2 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %System.String addrspace(1)* %2, null
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %6 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %7 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*, i32)*)(%System.Globalization.CultureData addrspace(1)* %6, i32 107)
  %8 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %5, i32 0, i32 26
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %8, %System.String addrspace(1)* %7)
  br label %9

; <label>:9                                       ; preds = %entry, %4
  %10 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %11 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %10, i32 0, i32 26
  %12 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %11, align 8
  ret %System.String addrspace(1)* %12
}

INFO:  jitting method CultureData::get_SPOSINFINITY using LLILCJit
Successfully read CultureData.get_SPOSINFINITY

define %System.String addrspace(1)* @CultureData.get_SPOSINFINITY(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 25
  %2 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %System.String addrspace(1)* %2, null
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %6 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %7 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*, i32)*)(%System.Globalization.CultureData addrspace(1)* %6, i32 106)
  %8 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %5, i32 0, i32 25
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %8, %System.String addrspace(1)* %7)
  br label %9

; <label>:9                                       ; preds = %entry, %4
  %10 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %11 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %10, i32 0, i32 25
  %12 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %11, align 8
  ret %System.String addrspace(1)* %12
}

INFO:  jitting method CultureData::get_SNAN using LLILCJit
Successfully read CultureData.get_SNAN

define %System.String addrspace(1)* @CultureData.get_SNAN(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 24
  %2 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %System.String addrspace(1)* %2, null
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %6 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %7 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*, i32)*)(%System.Globalization.CultureData addrspace(1)* %6, i32 105)
  %8 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %5, i32 0, i32 24
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %8, %System.String addrspace(1)* %7)
  br label %9

; <label>:9                                       ; preds = %entry, %4
  %10 = load %System.Globalization.CultureData addrspace(1)*, %System.Globalization.CultureData addrspace(1)** %this
  %11 = getelementptr inbounds %System.Globalization.CultureData, %System.Globalization.CultureData addrspace(1)* %10, i32 0, i32 24
  %12 = load %System.String addrspace(1)*, %System.String addrspace(1)* addrspace(1)* %11, align 8
  ret %System.String addrspace(1)* %12
}

INFO:  jitting method StreamWriter::Write using LLILCJit
Successfully read StreamWriter.Write

define void @StreamWriter.Write(%System.IO.StreamWriter addrspace(1)* %param0, %System.String addrspace(1)* %param1) {
entry:
  %this = alloca %System.IO.StreamWriter addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  %loc0 = alloca i32
  %loc1 = alloca i32
  %loc2 = alloca i32
  store %System.IO.StreamWriter addrspace(1)* %param0, %System.IO.StreamWriter addrspace(1)** %this
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  %0 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %1 = icmp eq %System.String addrspace(1)* %0, null
  br i1 %1, label %64, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.StreamWriter addrspace(1)*)*)(%System.IO.StreamWriter addrspace(1)* %3)
  %4 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %5 = getelementptr inbounds %System.String, %System.String addrspace(1)* %4, i32 0, i32 1
  %6 = load i32, i32 addrspace(1)* %5
  store i32 %6, i32* %loc0
  store i32 0, i32* %loc1
  br label %53

; <label>:7                                       ; preds = %53
  %8 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %9 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %8, i32 0, i32 9
  %10 = load i32, i32 addrspace(1)* %9, align 8
  %11 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %12 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %11, i32 0, i32 10
  %13 = load i32, i32 addrspace(1)* %12, align 8
  %14 = icmp ne i32 %10, %13
  br i1 %14, label %17, label %15

; <label>:15                                      ; preds = %7
  %16 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.StreamWriter addrspace(1)*, i8, i8)*)(%System.IO.StreamWriter addrspace(1)* %16, i8 0, i8 0)
  br label %17

; <label>:17                                      ; preds = %7, %15
  %18 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %19 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %18, i32 0, i32 10
  %20 = load i32, i32 addrspace(1)* %19, align 8
  %21 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %22 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %21, i32 0, i32 9
  %23 = load i32, i32 addrspace(1)* %22, align 8
  %24 = sub i32 %20, %23
  store i32 %24, i32* %loc2
  %25 = load i32, i32* %loc2
  %26 = load i32, i32* %loc0
  %27 = icmp sle i32 %25, %26
  br i1 %27, label %30, label %28

; <label>:28                                      ; preds = %17
  %29 = load i32, i32* %loc0
  store i32 %29, i32* %loc2
  br label %30

; <label>:30                                      ; preds = %17, %28
  %31 = load %System.String addrspace(1)*, %System.String addrspace(1)** %arg1
  %32 = load i32, i32* %loc1
  %33 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %34 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %33, i32 0, i32 7
  %35 = load %"System.Char[]" addrspace(1)*, %"System.Char[]" addrspace(1)* addrspace(1)* %34, align 8
  %36 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %37 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %36, i32 0, i32 9
  %38 = load i32, i32 addrspace(1)* %37, align 8
  %39 = load i32, i32* %loc2
  %NullCheck = icmp ne %System.String addrspace(1)* %31, null
  br i1 %NullCheck, label %40, label %ThrowNullRef

; <label>:40                                      ; preds = %30
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)*, i32, %"System.Char[]" addrspace(1)*, i32, i32)*)(%System.String addrspace(1)* %31, i32 %32, %"System.Char[]" addrspace(1)* %35, i32 %38, i32 %39)
  %41 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %42 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %41, i32 0, i32 9
  %43 = load i32, i32 addrspace(1)* %42, align 8
  %44 = load i32, i32* %loc2
  %45 = add i32 %43, %44
  %46 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %41, i32 0, i32 9
  store i32 %45, i32 addrspace(1)* %46
  %47 = load i32, i32* %loc1
  %48 = load i32, i32* %loc2
  %49 = add i32 %47, %48
  store i32 %49, i32* %loc1
  %50 = load i32, i32* %loc0
  %51 = load i32, i32* %loc2
  %52 = sub i32 %50, %51
  store i32 %52, i32* %loc0
  br label %53

; <label>:53                                      ; preds = %2, %40
  %54 = load i32, i32* %loc0
  %55 = icmp sgt i32 %54, 0
  br i1 %55, label %7, label %56

; <label>:56                                      ; preds = %53
  %57 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %58 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %57, i32 0, i32 11
  %59 = load i8, i8 addrspace(1)* %58, align 8
  %60 = zext i8 %59 to i32
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %64, label %62

; <label>:62                                      ; preds = %56
  %63 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.StreamWriter addrspace(1)*, i8, i8)*)(%System.IO.StreamWriter addrspace(1)* %63, i8 1, i8 0)
  br label %64

; <label>:64                                      ; preds = %entry, %56, %62
  ret void

ThrowNullRef:                                     ; preds = %30
  call void inttoptr (i64 NORMALIZED_ADDRESS to void ()*)() #0
  unreachable
}

INFO:  jitting method String::CopyTo using LLILCJit
Failed to read String.CopyTo[loadElemA]
INFO:  jitting method ConsoleEncoding::GetPreamble using LLILCJit
Successfully read ConsoleEncoding.GetPreamble

define %"System.Byte[]" addrspace(1)* @ConsoleEncoding.GetPreamble(%System.Text.ConsoleEncoding addrspace(1)* %param0) {
entry:
  %this = alloca %System.Text.ConsoleEncoding addrspace(1)*
  store %System.Text.ConsoleEncoding addrspace(1)* %param0, %System.Text.ConsoleEncoding addrspace(1)** %this
  %0 = call %"System.Byte[]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Byte[]" addrspace(1)* ()*)()
  ret %"System.Byte[]" addrspace(1)* %0
}

INFO:  jitting method Array::Empty using LLILCJit
Successfully read Array.Empty

define %"System.Byte[]" addrspace(1)* @Array.Empty() {
entry:
  %0 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 20)
  %1 = getelementptr inbounds i8, i8 addrspace(1)* %0, i64 0
  %2 = addrspacecast i8 addrspace(1)* %1 to %"System.Byte[]" addrspace(1)**
  %3 = load %"System.Byte[]" addrspace(1)*, %"System.Byte[]" addrspace(1)** %2
  ret %"System.Byte[]" addrspace(1)* %3
}

INFO:  jitting method EmptyArray`1::.cctor using LLILCJit
Successfully read EmptyArray`1..cctor

define void @"EmptyArray`1..cctor"() {
entry:
  %0 = call %"System.Byte[]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Byte[]" addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 0)
  %1 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 20)
  %2 = getelementptr inbounds i8, i8 addrspace(1)* %1, i64 0
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i8 addrspace(1)*, %"System.Byte[]" addrspace(1)*)*)(i8 addrspace(1)* %2, %"System.Byte[]" addrspace(1)* %0)
  ret void
}

INFO:  jitting method EncoderNLS::GetBytes using LLILCJit
Failed to read EncoderNLS.GetBytes[loadElemA]
INFO:  jitting method EncoderNLS::GetBytes using LLILCJit
Successfully read EncoderNLS.GetBytes

define i32 @EncoderNLS.GetBytes(%System.Text.EncoderNLS addrspace(1)* %param0, i16* %param1, i32 %param2, i8* %param3, i32 %param4, i8 %param5) {
entry:
  %this = alloca %System.Text.EncoderNLS addrspace(1)*
  %arg1 = alloca i16*
  %arg2 = alloca i32
  %arg3 = alloca i8*
  %arg4 = alloca i32
  %arg5 = alloca i8
  store %System.Text.EncoderNLS addrspace(1)* %param0, %System.Text.EncoderNLS addrspace(1)** %this
  store i16* %param1, i16** %arg1
  store i32 %param2, i32* %arg2
  store i8* %param3, i8** %arg3
  store i32 %param4, i32* %arg4
  store i8 %param5, i8* %arg5
  %0 = load i16*, i16** %arg1
  %1 = ptrtoint i16* %0 to i64
  %2 = icmp eq i64 %1, 0
  br i1 %2, label %7, label %3

; <label>:3                                       ; preds = %entry
  %4 = load i8*, i8** %arg3
  %5 = ptrtoint i8* %4 to i64
  %6 = icmp ne i64 %5, 0
  br i1 %6, label %20, label %7

; <label>:7                                       ; preds = %entry, %3
  %8 = load i16*, i16** %arg1
  %9 = ptrtoint i16* %8 to i64
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %13, label %11

; <label>:11                                      ; preds = %7
  %12 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  br label %15

; <label>:13                                      ; preds = %7
  %14 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  br label %15

; <label>:15                                      ; preds = %11, %13
  %16 = phi %System.String addrspace(1)* [ %12, %11 ], [ %14, %13 ]
  %17 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %18 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %17)
  %19 = call %System.ArgumentNullException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentNullException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %19, %System.String addrspace(1)* %16, %System.String addrspace(1)* %18)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %19) #0
  unreachable

; <label>:20                                      ; preds = %3
  %21 = load i32, i32* %arg4
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %26, label %23

; <label>:23                                      ; preds = %20
  %24 = load i32, i32* %arg2
  %25 = icmp sge i32 %24, 0
  br i1 %25, label %38, label %26

; <label>:26                                      ; preds = %20, %23
  %27 = load i32, i32* %arg4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %31, label %29

; <label>:29                                      ; preds = %26
  %30 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  br label %33

; <label>:31                                      ; preds = %26
  %32 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  br label %33

; <label>:33                                      ; preds = %29, %31
  %34 = phi %System.String addrspace(1)* [ %30, %29 ], [ %32, %31 ]
  %35 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %36 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %35)
  %37 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %37, %System.String addrspace(1)* %34, %System.String addrspace(1)* %36)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %37) #0
  unreachable

; <label>:38                                      ; preds = %23
  %39 = load %System.Text.EncoderNLS addrspace(1)*, %System.Text.EncoderNLS addrspace(1)** %this
  %40 = load i8, i8* %arg5
  %41 = zext i8 %40 to i32
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %System.Text.EncoderNLS, %System.Text.EncoderNLS addrspace(1)* %39, i32 0, i32 6
  store i8 %42, i8 addrspace(1)* %43
  %44 = load %System.Text.EncoderNLS addrspace(1)*, %System.Text.EncoderNLS addrspace(1)** %this
  %45 = getelementptr inbounds %System.Text.EncoderNLS, %System.Text.EncoderNLS addrspace(1)* %44, i32 0, i32 7
  store i8 1, i8 addrspace(1)* %45
  %46 = load %System.Text.EncoderNLS addrspace(1)*, %System.Text.EncoderNLS addrspace(1)** %this
  %47 = getelementptr inbounds %System.Text.EncoderNLS, %System.Text.EncoderNLS addrspace(1)* %46, i32 0, i32 3
  %48 = load %System.Text.Encoding addrspace(1)*, %System.Text.Encoding addrspace(1)* addrspace(1)* %47, align 8
  %49 = load i16*, i16** %arg1
  %50 = load i32, i32* %arg2
  %51 = load i8*, i8** %arg3
  %52 = load i32, i32* %arg4
  %53 = load %System.Text.EncoderNLS addrspace(1)*, %System.Text.EncoderNLS addrspace(1)** %this
  %54 = bitcast %System.Text.Encoding addrspace(1)* %48 to i64 addrspace(1)*
  %55 = load i64, i64 addrspace(1)* %54
  %56 = add i64 %55, 80
  %57 = inttoptr i64 %56 to i64*
  %58 = load i64, i64* %57
  %59 = add i64 %58, 32
  %60 = inttoptr i64 %59 to i64*
  %61 = load i64, i64* %60
  %62 = inttoptr i64 %61 to i32 (%System.Text.Encoding addrspace(1)*, i16*, i32, i8*, i32, %System.Text.EncoderNLS addrspace(1)*)*
  %63 = call i32 %62(%System.Text.Encoding addrspace(1)* %48, i16* %49, i32 %50, i8* %51, i32 %52, %System.Text.EncoderNLS addrspace(1)* %53)
  ret i32 %63
}

INFO:  jitting method UTF8Encoding::GetBytes using LLILCJit
Failed to read UTF8Encoding.GetBytes[storeElem]
INFO:  jitting method WindowsConsoleStream::Write using LLILCJit
Successfully read WindowsConsoleStream.Write

define void @WindowsConsoleStream.Write(%"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %param0, %"System.Byte[]" addrspace(1)* %param1, i32 %param2, i32 %param3) {
entry:
  %this = alloca %"System.ConsolePal+WindowsConsoleStream" addrspace(1)*
  %arg1 = alloca %"System.Byte[]" addrspace(1)*
  %arg2 = alloca i32
  %arg3 = alloca i32
  %loc0 = alloca i32
  store %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %param0, %"System.ConsolePal+WindowsConsoleStream" addrspace(1)** %this
  store %"System.Byte[]" addrspace(1)* %param1, %"System.Byte[]" addrspace(1)** %arg1
  store i32 %param2, i32* %arg2
  store i32 %param3, i32* %arg3
  %0 = load %"System.ConsolePal+WindowsConsoleStream" addrspace(1)*, %"System.ConsolePal+WindowsConsoleStream" addrspace(1)** %this
  %1 = load %"System.Byte[]" addrspace(1)*, %"System.Byte[]" addrspace(1)** %arg1
  %2 = load i32, i32* %arg2
  %3 = load i32, i32* %arg3
  %4 = bitcast %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %0 to %System.IO.ConsoleStream addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.ConsoleStream addrspace(1)*, %"System.Byte[]" addrspace(1)*, i32, i32)*)(%System.IO.ConsoleStream addrspace(1)* %4, %"System.Byte[]" addrspace(1)* %1, i32 %2, i32 %3)
  %5 = load %"System.ConsolePal+WindowsConsoleStream" addrspace(1)*, %"System.ConsolePal+WindowsConsoleStream" addrspace(1)** %this
  %6 = getelementptr inbounds %"System.ConsolePal+WindowsConsoleStream", %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %5, i32 0, i32 7
  %7 = load i64, i64 addrspace(1)* %6, align 8
  %8 = load %"System.Byte[]" addrspace(1)*, %"System.Byte[]" addrspace(1)** %arg1
  %9 = load i32, i32* %arg2
  %10 = load i32, i32* %arg3
  %11 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (i64, %"System.Byte[]" addrspace(1)*, i32, i32)*)(i64 %7, %"System.Byte[]" addrspace(1)* %8, i32 %9, i32 %10)
  store i32 %11, i32* %loc0
  %12 = load i32, i32* %loc0
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

; <label>:14                                      ; preds = %entry
  %15 = load i32, i32* %loc0
  %16 = call %System.Exception addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Exception addrspace(1)* (i32)*)(i32 %15)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Exception addrspace(1)*)*)(%System.Exception addrspace(1)* %16) #0
  unreachable

; <label>:17                                      ; preds = %entry
  ret void
}

INFO:  jitting method ConsoleStream::ValidateWrite using LLILCJit
Successfully read ConsoleStream.ValidateWrite

define void @ConsoleStream.ValidateWrite(%System.IO.ConsoleStream addrspace(1)* %param0, %"System.Byte[]" addrspace(1)* %param1, i32 %param2, i32 %param3) {
entry:
  %this = alloca %System.IO.ConsoleStream addrspace(1)*
  %arg1 = alloca %"System.Byte[]" addrspace(1)*
  %arg2 = alloca i32
  %arg3 = alloca i32
  store %System.IO.ConsoleStream addrspace(1)* %param0, %System.IO.ConsoleStream addrspace(1)** %this
  store %"System.Byte[]" addrspace(1)* %param1, %"System.Byte[]" addrspace(1)** %arg1
  store i32 %param2, i32* %arg2
  store i32 %param3, i32* %arg3
  %0 = load %"System.Byte[]" addrspace(1)*, %"System.Byte[]" addrspace(1)** %arg1
  %1 = icmp ne %"System.Byte[]" addrspace(1)* %0, null
  br i1 %1, label %5, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %4 = call %System.ArgumentNullException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentNullException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %4, %System.String addrspace(1)* %3)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %4) #0
  unreachable

; <label>:5                                       ; preds = %entry
  %6 = load i32, i32* %arg2
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %11, label %8

; <label>:8                                       ; preds = %5
  %9 = load i32, i32* %arg3
  %10 = icmp sge i32 %9, 0
  br i1 %10, label %22, label %11

; <label>:11                                      ; preds = %5, %8
  %12 = load i32, i32* %arg2
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %16, label %14

; <label>:14                                      ; preds = %11
  %15 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  br label %18

; <label>:16                                      ; preds = %11
  %17 = load %System.String addrspace(1)*, %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  br label %18

; <label>:18                                      ; preds = %14, %16
  %19 = phi %System.String addrspace(1)* [ %15, %14 ], [ %17, %16 ]
  %20 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* ()*)()
  %21 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %21, %System.String addrspace(1)* %19, %System.String addrspace(1)* %20)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %21) #0
  unreachable

; <label>:22                                      ; preds = %8
  %23 = load %"System.Byte[]" addrspace(1)*, %"System.Byte[]" addrspace(1)** %arg1
  %24 = getelementptr inbounds %"System.Byte[]", %"System.Byte[]" addrspace(1)* %23, i32 0, i32 1
  %25 = load i32, i32 addrspace(1)* %24
  %26 = zext i32 %25 to i64
  %27 = trunc i64 %26 to i32
  %28 = load i32, i32* %arg2
  %29 = sub i32 %27, %28
  %30 = load i32, i32* %arg3
  %31 = icmp sge i32 %29, %30
  br i1 %31, label %35, label %32

; <label>:32                                      ; preds = %22
  %33 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* ()*)()
  %34 = call %System.ArgumentException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %34, %System.String addrspace(1)* %33)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %34) #0
  unreachable

; <label>:35                                      ; preds = %22
  %36 = load %System.IO.ConsoleStream addrspace(1)*, %System.IO.ConsoleStream addrspace(1)** %this
  %37 = getelementptr inbounds %System.IO.ConsoleStream, %System.IO.ConsoleStream addrspace(1)* %36, i32 0, i32 4
  %38 = load i8, i8 addrspace(1)* %37, align 8
  %39 = zext i8 %38 to i32
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %43, label %41

; <label>:41                                      ; preds = %35
  %42 = call %System.Exception addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Exception addrspace(1)* ()*)()
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Exception addrspace(1)*)*)(%System.Exception addrspace(1)* %42) #0
  unreachable

; <label>:43                                      ; preds = %35
  ret void
}

INFO:  jitting method WindowsConsoleStream::WriteFileNative using LLILCJit
Failed to read WindowsConsoleStream.WriteFileNative[loadElemA]
INFO:  jitting method WindowsConsoleStream::Flush using LLILCJit
Successfully read WindowsConsoleStream.Flush

define void @WindowsConsoleStream.Flush(%"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %param0) {
entry:
  %this = alloca %"System.ConsolePal+WindowsConsoleStream" addrspace(1)*
  store %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %param0, %"System.ConsolePal+WindowsConsoleStream" addrspace(1)** %this
  %0 = load %"System.ConsolePal+WindowsConsoleStream" addrspace(1)*, %"System.ConsolePal+WindowsConsoleStream" addrspace(1)** %this
  %1 = getelementptr inbounds %"System.ConsolePal+WindowsConsoleStream", %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %0, i32 0, i32 7
  %2 = load i64, i64 addrspace(1)* %1, align 8
  %3 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (i64, i64)*)(i64 %2, i64 0)
  %4 = zext i8 %3 to i32
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

; <label>:6                                       ; preds = %entry
  %7 = call %System.Exception addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Exception addrspace(1)* ()*)()
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Exception addrspace(1)*)*)(%System.Exception addrspace(1)* %7) #0
  unreachable

; <label>:8                                       ; preds = %entry
  %9 = load %"System.ConsolePal+WindowsConsoleStream" addrspace(1)*, %"System.ConsolePal+WindowsConsoleStream" addrspace(1)** %this
  %10 = bitcast %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %9 to %System.IO.ConsoleStream addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.ConsoleStream addrspace(1)*)*)(%System.IO.ConsoleStream addrspace(1)* %10)
  ret void
}

INFO:  jitting method ConsoleStream::Flush using LLILCJit
Successfully read ConsoleStream.Flush

define void @ConsoleStream.Flush(%System.IO.ConsoleStream addrspace(1)* %param0) {
entry:
  %this = alloca %System.IO.ConsoleStream addrspace(1)*
  store %System.IO.ConsoleStream addrspace(1)* %param0, %System.IO.ConsoleStream addrspace(1)** %this
  %0 = load %System.IO.ConsoleStream addrspace(1)*, %System.IO.ConsoleStream addrspace(1)** %this
  %1 = bitcast %System.IO.ConsoleStream addrspace(1)* %0 to i64 addrspace(1)*
  %2 = load i64, i64 addrspace(1)* %1
  %3 = add i64 %2, 64
  %4 = inttoptr i64 %3 to i64*
  %5 = load i64, i64* %4
  %6 = add i64 %5, 56
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7
  %9 = bitcast %System.IO.ConsoleStream addrspace(1)* %0 to %System.IO.Stream addrspace(1)*
  %10 = inttoptr i64 %8 to i8 (%System.IO.Stream addrspace(1)*)*
  %11 = call i8 %10(%System.IO.Stream addrspace(1)* %9)
  %12 = zext i8 %11 to i32
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %16, label %14

; <label>:14                                      ; preds = %entry
  %15 = call %System.Exception addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Exception addrspace(1)* ()*)()
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Exception addrspace(1)*)*)(%System.Exception addrspace(1)* %15) #0
  unreachable

; <label>:16                                      ; preds = %entry
  ret void
}

INFO:  jitting method TextWriter::WriteLine using LLILCJit
Successfully read TextWriter.WriteLine

define void @TextWriter.WriteLine(%System.IO.TextWriter addrspace(1)* %param0) {
entry:
  %this = alloca %System.IO.TextWriter addrspace(1)*
  store %System.IO.TextWriter addrspace(1)* %param0, %System.IO.TextWriter addrspace(1)** %this
  %0 = load %System.IO.TextWriter addrspace(1)*, %System.IO.TextWriter addrspace(1)** %this
  %1 = load %System.IO.TextWriter addrspace(1)*, %System.IO.TextWriter addrspace(1)** %this
  %2 = getelementptr inbounds %System.IO.TextWriter, %System.IO.TextWriter addrspace(1)* %1, i32 0, i32 1
  %3 = load %"System.Char[]" addrspace(1)*, %"System.Char[]" addrspace(1)* addrspace(1)* %2, align 8
  %4 = bitcast %System.IO.TextWriter addrspace(1)* %0 to i64 addrspace(1)*
  %5 = load i64, i64 addrspace(1)* %4
  %6 = add i64 %5, 72
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7
  %9 = add i64 %8, 40
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10
  %12 = inttoptr i64 %11 to void (%System.IO.TextWriter addrspace(1)*, %"System.Char[]" addrspace(1)*)*
  call void %12(%System.IO.TextWriter addrspace(1)* %0, %"System.Char[]" addrspace(1)* %3)
  ret void
}

INFO:  jitting method StreamWriter::Write using LLILCJit
Successfully read StreamWriter.Write

define void @StreamWriter.Write(%System.IO.StreamWriter addrspace(1)* %param0, %"System.Char[]" addrspace(1)* %param1) {
entry:
  %this = alloca %System.IO.StreamWriter addrspace(1)*
  %arg1 = alloca %"System.Char[]" addrspace(1)*
  %loc0 = alloca i32
  %loc1 = alloca i32
  %loc2 = alloca i32
  store %System.IO.StreamWriter addrspace(1)* %param0, %System.IO.StreamWriter addrspace(1)** %this
  store %"System.Char[]" addrspace(1)* %param1, %"System.Char[]" addrspace(1)** %arg1
  %0 = load %"System.Char[]" addrspace(1)*, %"System.Char[]" addrspace(1)** %arg1
  %1 = icmp ne %"System.Char[]" addrspace(1)* %0, null
  br i1 %1, label %3, label %2

; <label>:2                                       ; preds = %entry
  ret void

; <label>:3                                       ; preds = %entry
  %4 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.StreamWriter addrspace(1)*)*)(%System.IO.StreamWriter addrspace(1)* %4)
  store i32 0, i32* %loc0
  %5 = load %"System.Char[]" addrspace(1)*, %"System.Char[]" addrspace(1)** %arg1
  %6 = getelementptr inbounds %"System.Char[]", %"System.Char[]" addrspace(1)* %5, i32 0, i32 1
  %7 = load i32, i32 addrspace(1)* %6
  %8 = zext i32 %7 to i64
  %9 = trunc i64 %8 to i32
  store i32 %9, i32* %loc1
  br label %60

; <label>:10                                      ; preds = %60
  %11 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %12 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %11, i32 0, i32 9
  %13 = load i32, i32 addrspace(1)* %12, align 8
  %14 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %15 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %14, i32 0, i32 10
  %16 = load i32, i32 addrspace(1)* %15, align 8
  %17 = icmp ne i32 %13, %16
  br i1 %17, label %20, label %18

; <label>:18                                      ; preds = %10
  %19 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.StreamWriter addrspace(1)*, i8, i8)*)(%System.IO.StreamWriter addrspace(1)* %19, i8 0, i8 0)
  br label %20

; <label>:20                                      ; preds = %10, %18
  %21 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %22 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %21, i32 0, i32 10
  %23 = load i32, i32 addrspace(1)* %22, align 8
  %24 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %25 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %24, i32 0, i32 9
  %26 = load i32, i32 addrspace(1)* %25, align 8
  %27 = sub i32 %23, %26
  store i32 %27, i32* %loc2
  %28 = load i32, i32* %loc2
  %29 = load i32, i32* %loc1
  %30 = icmp sle i32 %28, %29
  br i1 %30, label %33, label %31

; <label>:31                                      ; preds = %20
  %32 = load i32, i32* %loc1
  store i32 %32, i32* %loc2
  br label %33

; <label>:33                                      ; preds = %20, %31
  %34 = load %"System.Char[]" addrspace(1)*, %"System.Char[]" addrspace(1)** %arg1
  %35 = load i32, i32* %loc0
  %36 = mul i32 %35, 2
  %37 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %38 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %37, i32 0, i32 7
  %39 = load %"System.Char[]" addrspace(1)*, %"System.Char[]" addrspace(1)* addrspace(1)* %38, align 8
  %40 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %41 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %40, i32 0, i32 9
  %42 = load i32, i32 addrspace(1)* %41, align 8
  %43 = mul i32 %42, 2
  %44 = load i32, i32* %loc2
  %45 = mul i32 %44, 2
  %46 = bitcast %"System.Char[]" addrspace(1)* %34 to %System.Array addrspace(1)*
  %47 = bitcast %"System.Char[]" addrspace(1)* %39 to %System.Array addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Array addrspace(1)*, i32, %System.Array addrspace(1)*, i32, i32)*)(%System.Array addrspace(1)* %46, i32 %36, %System.Array addrspace(1)* %47, i32 %43, i32 %45)
  %48 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %49 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %48, i32 0, i32 9
  %50 = load i32, i32 addrspace(1)* %49, align 8
  %51 = load i32, i32* %loc2
  %52 = add i32 %50, %51
  %53 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %48, i32 0, i32 9
  store i32 %52, i32 addrspace(1)* %53
  %54 = load i32, i32* %loc0
  %55 = load i32, i32* %loc2
  %56 = add i32 %54, %55
  store i32 %56, i32* %loc0
  %57 = load i32, i32* %loc1
  %58 = load i32, i32* %loc2
  %59 = sub i32 %57, %58
  store i32 %59, i32* %loc1
  br label %60

; <label>:60                                      ; preds = %3, %33
  %61 = load i32, i32* %loc1
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %10, label %63

; <label>:63                                      ; preds = %60
  %64 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  %65 = getelementptr inbounds %System.IO.StreamWriter, %System.IO.StreamWriter addrspace(1)* %64, i32 0, i32 11
  %66 = load i8, i8 addrspace(1)* %65, align 8
  %67 = zext i8 %66 to i32
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %71, label %69

; <label>:69                                      ; preds = %63
  %70 = load %System.IO.StreamWriter addrspace(1)*, %System.IO.StreamWriter addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.StreamWriter addrspace(1)*, i8, i8)*)(%System.IO.StreamWriter addrspace(1)* %70, i8 1, i8 0)
  br label %71

; <label>:71                                      ; preds = %63, %69
  ret void
}


